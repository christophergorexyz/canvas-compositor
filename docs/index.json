[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/Bezier.js",
    "content": "import {\r\n    drawBezier\r\n} from './Renderer';\r\nimport {\r\n    PrimitiveComponent\r\n} from './PrimitiveComponent';\r\nimport {\r\n    Vector\r\n} from 'vectorious';\r\n\r\n//TODO: There are multiple optimizations that can be done here, specifically with regard to calculating things only once. the extrema don't necessarily need recomputing just to get the bounding box. the bounding box itself could be stored within the PrimitiveComponent for all types\r\n\r\n/**\r\n * A helper function for finding local extrema given possible solutions\r\n * @param {object} start a component of the starting coordinate\r\n * @param {object} c1 a component of the first control point\r\n * @param {object} c2 a component of the second control point\r\n * @param {object} end a component of the ending coordinate\r\n * @param {object} t a possible solution\r\n */\r\nfunction _cubicBezier(start, c1, c2, end, t) {\r\n    //uhh... i looked up *SO* much stuff on this, and even tried to work out the math myself,\r\n    //but this is ridiculous - where does this come from?\r\n    return start * (1 - t) * (1 - t) * (1 - t) + 3 * c1 * t * (1 - t) * (1 - t) + 3 * c2 * t * t * (1 - t) + end * t * t * t;\r\n}\r\n\r\n/**\r\n * return the local extremes of the curve\r\n * @param {object} start a component of the starting vector\r\n * @param {object} c1 a component of the first control point\r\n * @param {object} c2 a component of the second control point\r\n * @param {object} end a component of the ending vector\r\n */\r\nfunction _getExtremes(start, c1, c2, end) {\r\n    let a = 3 * end - 9 * c2 + 9 * c1 - 3 * start;\r\n    let b = 6 * c2 - 12 * c1 + 6 * start;\r\n    let c = 3 * c1 - 3 * start;\r\n\r\n    let solutions = [];\r\n    let localExtrema = [];\r\n\r\n    //\"discriminant\"\r\n    let disc = b * b - 4 * a * c;\r\n\r\n    if (disc >= 0) {\r\n        if (!Math.abs(a) > 0 && Math.abs(b) > 0) {\r\n            solutions.push(-c / b);\r\n        } else if (Math.abs(a) > 0) {\r\n            solutions.push((-b + Math.sqrt(disc)) / (2 * a));\r\n            solutions.push((-b - Math.sqrt(disc)) / (2 * a));\r\n        } else {\r\n            throw new Error(\"no solutions!?!?!\");\r\n        }\r\n\r\n        for (let t of solutions) {\r\n            if (0 <= t && t <= 1) {\r\n                localExtrema.push(_cubicBezier(start, c1, c2, end, t));\r\n            }\r\n        }\r\n    }\r\n\r\n    localExtrema.push(start, end);\r\n\r\n    return localExtrema;\r\n}\r\n\r\n/**\r\n * A Bezier curve\r\n */\r\nexport class Bezier extends PrimitiveComponent {\r\n\r\n    /**\r\n     * @param {object} options the options for the bezier curve\r\n     */\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        let start = new Vector([options.start.x, options.start.y]);\r\n        let end = new Vector([options.end.x, options.end.y]);\r\n        let control1 = new Vector([options.control1.x, options.control1.y]);\r\n        let control2 = new Vector([options.control2.x, options.control2.y]);\r\n\r\n        /**\r\n         * The bounding box of the curve\r\n         */\r\n        this._boundingBox = null;\r\n\r\n        /**\r\n         * Helper to update the bounding box\r\n         */\r\n        this._boundingBoxNeedsUpdate = true;\r\n\r\n        let xExtrema = _getExtremes(start.x, control1.x, control2, end.x);\r\n        let yExtrema = _getExtremes(start.y, control1.y, control2.y, end.y);\r\n        super.d = new Vector([Math.min.apply(null, xExtrema), Math.min.apply(null, yExtrema)])\r\n\r\n        /**\r\n         * The starting point of the curve\r\n         */\r\n        this._start = Vector.subtract(start, this.d);\r\n\r\n        /**\r\n         * The ending point of the curve\r\n         */\r\n        this._end = Vector.subtract(end, this.d);\r\n\r\n        /**\r\n         * The first control point\r\n         */\r\n        this._control1 = Vector.subtract(control1, this.d);\r\n\r\n        /**\r\n         * The second control point\r\n         */\r\n        this._control2 = Vector.subtract(control2, this.d);\r\n    }\r\n\r\n    /**\r\n     * get the bounding box of the bezier\r\n     * @type {{top:number, left:number, bottom:number, right:number}} boundingBox\r\n     */\r\n    get boundingBox() {\r\n        //if (this._boundingBox === null || this._boundingBoxNeedsUpdate) {\r\n        let lineWidth = this.style.lineWidth;\r\n\r\n        let offset = this.offset;\r\n        let start = Vector.add(this._start, this.offset);\r\n        let control1 = Vector.add(this._control1, this.offset);\r\n        let control2 = Vector.add(this._control2, this.offset);\r\n        let end = Vector.add(this._end, this.offset);\r\n\r\n        let xExtrema = _getExtremes(start.x, control1.x, control2, end.x);\r\n        let yExtrema = _getExtremes(start.y, control1.y, control2.y, end.y);\r\n        this._boundingBox = {\r\n            top: Math.min.apply(null, yExtrema) - lineWidth,\r\n            right: Math.max.apply(null, xExtrema) + lineWidth,\r\n            bottom: Math.max.apply(null, yExtrema) + lineWidth,\r\n            left: Math.min.apply(null, xExtrema) - lineWidth\r\n        }\r\n        this._boundingBoxNeedsUpdate = false;\r\n        //}\r\n        return this._boundingBox;\r\n    }\r\n\r\n    /**\r\n     * render the bezier curve\r\n     */\r\n    render() {\r\n        drawBezier(\r\n            this._start,\r\n            this._end,\r\n            this._control1,\r\n            this._control2,\r\n            this._prerenderingContext,\r\n            this.style\r\n        );\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/Bezier.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "_cubicBezier",
    "memberof": "src/Bezier.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Bezier.js~_cubicBezier",
    "access": "private",
    "export": false,
    "importPath": "canvas-compositor/src/Bezier.js",
    "importStyle": null,
    "description": "A helper function for finding local extrema given possible solutions",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "a component of the starting coordinate"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "c1",
        "description": "a component of the first control point"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "c2",
        "description": "a component of the second control point"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "a component of the ending coordinate"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "a possible solution"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "_getExtremes",
    "memberof": "src/Bezier.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Bezier.js~_getExtremes",
    "access": "private",
    "export": false,
    "importPath": "canvas-compositor/src/Bezier.js",
    "importStyle": null,
    "description": "return the local extremes of the curve",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "a component of the starting vector"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "c1",
        "description": "a component of the first control point"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "c2",
        "description": "a component of the second control point"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "a component of the ending vector"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "class",
    "name": "Bezier",
    "memberof": "src/Bezier.js",
    "static": true,
    "longname": "src/Bezier.js~Bezier",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Bezier.js",
    "importStyle": "{Bezier}",
    "description": "A Bezier curve",
    "lineNumber": 70,
    "interface": false,
    "extends": [
      "src/PrimitiveComponent.js~PrimitiveComponent"
    ]
  },
  {
    "__docId__": 52,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Bezier.js~Bezier",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Bezier.js~Bezier#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "the options for the bezier curve"
      }
    ]
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "_boundingBox",
    "memberof": "src/Bezier.js~Bezier",
    "static": false,
    "longname": "src/Bezier.js~Bezier#_boundingBox",
    "access": "private",
    "description": "The bounding box of the curve",
    "lineNumber": 86,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "_boundingBoxNeedsUpdate",
    "memberof": "src/Bezier.js~Bezier",
    "static": false,
    "longname": "src/Bezier.js~Bezier#_boundingBoxNeedsUpdate",
    "access": "private",
    "description": "Helper to update the bounding box",
    "lineNumber": 91,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "_start",
    "memberof": "src/Bezier.js~Bezier",
    "static": false,
    "longname": "src/Bezier.js~Bezier#_start",
    "access": "private",
    "description": "The starting point of the curve",
    "lineNumber": 100,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "_end",
    "memberof": "src/Bezier.js~Bezier",
    "static": false,
    "longname": "src/Bezier.js~Bezier#_end",
    "access": "private",
    "description": "The ending point of the curve",
    "lineNumber": 105,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "_control1",
    "memberof": "src/Bezier.js~Bezier",
    "static": false,
    "longname": "src/Bezier.js~Bezier#_control1",
    "access": "private",
    "description": "The first control point",
    "lineNumber": 110,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "_control2",
    "memberof": "src/Bezier.js~Bezier",
    "static": false,
    "longname": "src/Bezier.js~Bezier#_control2",
    "access": "private",
    "description": "The second control point",
    "lineNumber": 115,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "get",
    "name": "boundingBox",
    "memberof": "src/Bezier.js~Bezier",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Bezier.js~Bezier#boundingBox",
    "access": "public",
    "description": "get the bounding box of the bezier",
    "lineNumber": 122,
    "type": {
      "nullable": null,
      "types": [
        "{top:number, left:number, bottom:number, right:number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "render",
    "memberof": "src/Bezier.js~Bezier",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Bezier.js~Bezier#render",
    "access": "public",
    "description": "render the bezier curve",
    "lineNumber": 148,
    "params": [],
    "return": null
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "src/Circle.js",
    "content": "import { drawCircle } from './Renderer';\r\nimport { PrimitiveComponent } from './PrimitiveComponent';\r\n\r\n/**\r\n * A circle\r\n */\r\nexport class Circle extends PrimitiveComponent {\r\n    //TODO: provide details about options for docs - link to a separate page\r\n    /**\r\n     * PrimitiveComponent constructor\r\n     * @param {object} options object settings\r\n     */\r\n    constructor(options) {\r\n        super(options)\r\n        /**\r\n         * the radius of the circle\r\n         * @type {number} radius\r\n         */\r\n        this.radius = options.radius || 0;\r\n    }\r\n\r\n    /**\r\n     * get the bounding box of the circle;\r\n     * @type {{top:number, left: number, bottom:number, right:number}}\r\n     */\r\n    get boundingBox() {\r\n        //TODO: possibly memory-inefficient - need to research:\r\n        //strokes are (were?) centered over the mathematical perimeter -\r\n        //so half the stroke laid within the perimeter, and the\r\n        //other half laid outside. for some reason, this doesn't\r\n        //work for (0 < lineWidth < 2.0).\r\n        //\r\n        //it's just a pixel, but when a thousand objects are on screen,\r\n        //that'll make a difference\r\n        let offset = this.offset;\r\n        let scale = this.compoundScale;\r\n        return {\r\n            top: offset.y -\r\n                ((this.radius * scale.scaleHeight) +\r\n                    (this.style.lineWidth)),\r\n            left: offset.x -\r\n                ((this.radius * scale.scaleWidth) +\r\n                    (this.style.lineWidth)),\r\n            bottom: offset.y +\r\n                (this.radius * scale.scaleHeight) +\r\n                (this.style.lineWidth),\r\n            right: offset.x +\r\n                (this.radius * scale.scaleWidth) +\r\n                (this.style.lineWidth)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * override the render function for drawing circles specifically\r\n     * @override\r\n     */\r\n    render() {\r\n        //the below is to ensure the proper placement when scaling/line widths are accounted for\r\n        let scale = this.compoundScale;\r\n        let lineWidth = this.style.lineWidth;\r\n        drawCircle(\r\n            (this.radius * scale.scaleWidth) + lineWidth,\r\n            (this.radius * scale.scaleHeight) + lineWidth,\r\n            (this.radius * scale.scaleWidth),\r\n            this._prerenderingContext,\r\n            this.style\r\n        );\r\n    }\r\n\r\n    /**\r\n     * determine whether the point is in the object\r\n     * basically just the pythagorean theorem\r\n     * @param {number} x the x coordinate\r\n     * @param {number} y the y coordinate\r\n     * @return {boolean} whether or not the point is in the object\r\n     */\r\n    pointIsInObject(x, y) {\r\n\r\n        let offset = this.offset;\r\n\r\n        //don't bother checking the bounding box because\r\n        //pythagorean formula is closed-form\r\n            let a = x - offset.x;\r\n            let b = y - offset.y;\r\n            let c = this.radius;\r\n\r\n            //thanks pythagoras~!\r\n            return (a * a) + (b * b) <= (c * c);\r\n        //use the below when scaling is reimplemented\r\n        /*\r\n\t\treturn (\r\n\t\t\tCanvasObject.prototype.PointIsInObject.call(this, x, y) &&\r\n\t\t\tMath.pow((x - this.offset.x), 2) / Math.pow((this.radius * this.GlobalScale.scaleWidth), 2) + Math.pow((y - this.offset.y), 2) / Math.pow((this.radius * this.GlobalScale.scaleHeight), 2) <= 1\r\n\t\t);*/\r\n    };\r\n}\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/Circle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "class",
    "name": "Circle",
    "memberof": "src/Circle.js",
    "static": true,
    "longname": "src/Circle.js~Circle",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Circle.js",
    "importStyle": "{Circle}",
    "description": "A circle",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/PrimitiveComponent.js~PrimitiveComponent"
    ]
  },
  {
    "__docId__": 65,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Circle.js~Circle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Circle.js~Circle#constructor",
    "access": "public",
    "description": "PrimitiveComponent constructor",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "object settings"
      }
    ]
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "radius",
    "memberof": "src/Circle.js~Circle",
    "static": false,
    "longname": "src/Circle.js~Circle#radius",
    "access": "public",
    "description": "the radius of the circle",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 67,
    "kind": "get",
    "name": "boundingBox",
    "memberof": "src/Circle.js~Circle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Circle.js~Circle#boundingBox",
    "access": "public",
    "description": "get the bounding box of the circle;",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "{top:number, left: number, bottom:number, right:number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "render",
    "memberof": "src/Circle.js~Circle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Circle.js~Circle#render",
    "access": "public",
    "description": "override the render function for drawing circles specifically",
    "lineNumber": 57,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "pointIsInObject",
    "memberof": "src/Circle.js~Circle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Circle.js~Circle#pointIsInObject",
    "access": "public",
    "description": "determine whether the point is in the object\nbasically just the pythagorean theorem",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the x coordinate"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the y coordinate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "whether or not the point is in the object"
    }
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/Composition.js",
    "content": "import { PrimitiveComponent } from './PrimitiveComponent';\r\n\r\n/**\r\n * The Composition class is an extension of the Primitive that is\r\n * composed of other extensions of the Primitive. The Composition\r\n * is used to establish the Scene graph as the parent of all other\r\n * objects on screen. This is the key abstraction of the [composite\r\n * pattern](https://en.wikipedia.org/wiki/Composite_pattern): an\r\n * action taken on the parent element acts upon all of the children,\r\n * and transatively, all of their children.\r\n */\r\nexport class Composition extends PrimitiveComponent {\r\n    /**\r\n     * @param {object} options object settings\r\n     */\r\n    constructor(options) {\r\n        super(options);\r\n        options = options || {};\r\n        /**\r\n         * The children of this composition\r\n         */\r\n        this._children = options.children || [];\r\n    }\r\n\r\n    /**\r\n     * children of this composition\r\n     * @type {Array} children the which compose this object\r\n     */\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    /**\r\n     * the bounding box of the composition (i.e., the containing bounds of all the children of this composition)\r\n     * @type {{top:number, left:number, right:number, bottom:number}} boundingBox\r\n     */\r\n    get boundingBox() {\r\n        let top = Infinity,\r\n            left = Infinity,\r\n            bottom = -Infinity,\r\n            right = -Infinity;\r\n\r\n        for (let c of this.children) {\r\n            let boundingBox = c.boundingBox;\r\n            top = Math.min(boundingBox.top, top);\r\n            left = Math.min(boundingBox.left, left);\r\n            bottom = Math.max(boundingBox.bottom, bottom);\r\n            right = Math.max(boundingBox.right, right);\r\n        };\r\n\r\n        return {\r\n            top: top,\r\n            left: left,\r\n            bottom: bottom,\r\n            right: right\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * the an array of children that are found at (x, y)\r\n     * @return {object} childrenAt all the children below the point\r\n     * @param {number} x the x coordinate\r\n     * @param {number} y the y coordinate\r\n     */\r\n    childrenAt(x, y) {\r\n        return this.children.filter((c) => c.PointIsInObject(x, y));\r\n    }\r\n\r\n    /**\r\n     * get the top-most child at the (x, y)\r\n     * @return {object} childAt the first child below the point\r\n     * @param {number} x the x coordinate\r\n     * @param {number} y the y coordinate\r\n     */\r\n    childAt(x, y) {\r\n        //loop over the children in reverse because drawing order\r\n        for (var c = this.children.length - 1; c >= 0; c--) {\r\n            if (this.children[c].pointIsInObject(x, y)) {\r\n                return this.children[c];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add a child to this composition\r\n     * @param {object} child the child to be added\r\n     */\r\n    addChild(child) {\r\n        child.parent = this;\r\n        this.children.push(child);\r\n        super.needsRender = true;\r\n        super.needsDraw = true;\r\n        //TODO: make this hook more generic\r\n        //by using a registry\r\n        //if (this.onchildadded) {\r\n        //  this.onchildadded();\r\n        //}\r\n    }\r\n\r\n    /**\r\n     * add multiple children to the composition\r\n     * @param {object} children the list of children to be added\r\n     */\r\n    addChildren(children){\r\n        for (let c of children){\r\n            this.addChild(c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * remove a child from this composition\r\n     * @param {object} child the child to be removed\r\n     * @return {object} the child removed\r\n     */\r\n    removeChild(child) {\r\n        if (child) {\r\n            var index = this.children.indexOf(child);\r\n            if (index >= 0) {\r\n                super.needsRender = true;\r\n                super.needsDraw = true;\r\n                return this.children.splice(index, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @override\r\n     * override the render functiont to render the children onto this compositions prerendering canvas\r\n     */\r\n    render() {\r\n        // required to make sure that the drawing occurs within the bounds of this composition\r\n        let boundingBox = this.boundingBox;\r\n        var offset = {\r\n            top: -boundingBox.top,\r\n            left: -boundingBox.left,\r\n            bottom: -boundingBox.bottom,\r\n            right: -boundingBox.right\r\n        };\r\n\r\n        for (let c of this.children) {\r\n            c.draw(this._prerenderingContext, offset);\r\n        };\r\n\r\n        // `destination-out` will erase things\r\n        //this._prerenderingContext.globalCompositeOperation = 'destination-out';\r\n        //_.each(this.masks, function (m) {\r\n        //m.draw(renderContext, contextOffset);\r\n        //});\r\n        //renderContext.globalCompositeOperation = 'normal';\r\n    };\r\n}\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/Composition.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "class",
    "name": "Composition",
    "memberof": "src/Composition.js",
    "static": true,
    "longname": "src/Composition.js~Composition",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Composition.js",
    "importStyle": "{Composition}",
    "description": "The Composition class is an extension of the Primitive that is\ncomposed of other extensions of the Primitive. The Composition\nis used to establish the Scene graph as the parent of all other\nobjects on screen. This is the key abstraction of the [composite\npattern](https://en.wikipedia.org/wiki/Composite_pattern): an\naction taken on the parent element acts upon all of the children,\nand transatively, all of their children.",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "src/PrimitiveComponent.js~PrimitiveComponent"
    ]
  },
  {
    "__docId__": 72,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Composition.js~Composition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Composition.js~Composition#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "object settings"
      }
    ]
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "_children",
    "memberof": "src/Composition.js~Composition",
    "static": false,
    "longname": "src/Composition.js~Composition#_children",
    "access": "private",
    "description": "The children of this composition",
    "lineNumber": 22,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "get",
    "name": "children",
    "memberof": "src/Composition.js~Composition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Composition.js~Composition#children",
    "access": "public",
    "description": "children of this composition",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "get",
    "name": "boundingBox",
    "memberof": "src/Composition.js~Composition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Composition.js~Composition#boundingBox",
    "access": "public",
    "description": "the bounding box of the composition (i.e., the containing bounds of all the children of this composition)",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "{top:number, left:number, right:number, bottom:number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "childrenAt",
    "memberof": "src/Composition.js~Composition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Composition.js~Composition#childrenAt",
    "access": "public",
    "description": "the an array of children that are found at (x, y)",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the x coordinate"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the y coordinate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "childrenAt all the children below the point"
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "childAt",
    "memberof": "src/Composition.js~Composition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Composition.js~Composition#childAt",
    "access": "public",
    "description": "get the top-most child at the (x, y)",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the x coordinate"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the y coordinate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "childAt the first child below the point"
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "addChild",
    "memberof": "src/Composition.js~Composition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Composition.js~Composition#addChild",
    "access": "public",
    "description": "add a child to this composition",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "child",
        "description": "the child to be added"
      }
    ],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "addChildren",
    "memberof": "src/Composition.js~Composition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Composition.js~Composition#addChildren",
    "access": "public",
    "description": "add multiple children to the composition",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "children",
        "description": "the list of children to be added"
      }
    ],
    "return": null
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "removeChild",
    "memberof": "src/Composition.js~Composition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Composition.js~Composition#removeChild",
    "access": "public",
    "description": "remove a child from this composition",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "child",
        "description": "the child to be removed"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the child removed"
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "render",
    "memberof": "src/Composition.js~Composition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Composition.js~Composition#render",
    "access": "public",
    "description": "",
    "lineNumber": 131,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "file",
    "name": "src/Compositor.js",
    "content": "import * as Renderer from './Renderer';\r\nimport {\r\n    Composition\r\n} from './Composition';\r\nimport {\r\n    PrimitiveComponent\r\n} from './PrimitiveComponent';\r\nimport {\r\n    Circle\r\n} from './Circle';\r\nimport {\r\n    Ellipse\r\n} from './Ellipse';\r\nimport {\r\n    Rectangle\r\n} from './Rectangle';\r\nimport {\r\n    Line\r\n} from './Line';\r\nimport {\r\n    VectorPath\r\n} from './VectorPath';\r\nimport {\r\n    Bezier\r\n} from './Bezier';\r\nimport {\r\n    Image\r\n} from './Image';\r\nimport {\r\n    Text\r\n} from './Text';\r\n\r\nimport * as Defaults from './Defaults';\r\n\r\nimport {\r\n    EventEmitter\r\n} from 'micro-mvc';\r\n\r\nimport * as Events from './Events';\r\n\r\n//const FPS_EPSILON = 10; // +/- 10ms for animation loop to determine if enough time has passed to render\r\n//const DEFAULT_TARGET_FPS = 1000 / 60; //amount of time that must pass before rendering\r\n\r\n/**\r\n * The Compositor class is the entry-point to usage of the `canvas-compositor`.\r\n * The application programmer is expected to hand over low-level control of the canvas\r\n * context to the high-level classes and methods exposed by CanvasCompositor.\r\n *\r\n * The Compositor class establishes an event dispatcher, animation loop, and scene graph for\r\n * compositions.\r\n */\r\nclass Compositor extends EventEmitter {\r\n    /**\r\n     * The Compositor class establishes an event dispatcher, animation loop, and scene graph for\r\n     * compositions\r\n     *\r\n     * @param {object} canvas This should be a canvas, either from the DOM or an equivalent API\r\n     *\r\n     * @example\r\n     * let cc = new Compositor(document.getElementById('myCanvas'));\r\n     */\r\n    constructor(canvas) {\r\n        super();\r\n        /**\r\n         * The canvas used by the compositor\r\n         */\r\n        this._canvas = canvas;\r\n        /**\r\n         * The context used by the compositor\r\n         */\r\n        this._context = this._canvas.getContext('2d');\r\n\r\n        //acquire the padding on the canvas – this is necessary to properly\r\n        //locate the mouse position\r\n        //TODO: determine if border-box affects this, and adjust accordingly\r\n        let style = window.getComputedStyle(this._canvas);\r\n\r\n        /**\r\n         * The x coordinate of the mouse position within the canvas\r\n         * @type {number}\r\n         */\r\n        this._mouseX = null;\r\n\r\n        /**\r\n         * The y coordinate of the mouse position within the canvas\r\n         * @type {number}\r\n         */\r\n        this._mouseY = null;\r\n\r\n        let borderLeft = style.getPropertyValue('border-left') ? parseFloat(style.getPropertyValue('border-left')) : 0;\r\n        let paddingLeft = style.getPropertyValue('padding-left') ? parseFloat(style.getPropertyValue('padding-left')) : 0;\r\n\r\n        /**\r\n         * Any left padding and border added to the canvas must be known to calculate mouse position\r\n         * @type {number}\r\n         */\r\n        this._leftPadding = borderLeft + paddingLeft;\r\n\r\n        let borderTop = style.getPropertyValue('border-top') ? parseFloat(style.getPropertyValue('border-top')) : 0;\r\n        let paddingTop = style.getPropertyValue('padding-top') ? parseFloat(style.getPropertyValue('padding-top')) : 0;\r\n\r\n        /**\r\n         * Any top padding and border added to the canvas must be known to calculate mouse position\r\n         * @type {number}\r\n         */\r\n        this._topPadding = borderTop + paddingTop;\r\n\r\n        /**\r\n         * The timestamp of the current loop of animation\r\n         * @type {number}\r\n         */\r\n        this._currentTime = 0;\r\n\r\n        /**\r\n         * The timestamp of the last frame drawn by the animation loop\r\n         * @type {number}\r\n         */\r\n        this._lastFrameTimestamp = 0;\r\n\r\n        /**\r\n         * The timestamp of the last render performed by the animation loop\r\n         * @type {number}\r\n         */\r\n        //this._lastRenderTime = 0;\r\n\r\n        /**\r\n         * The object last granted \"focus\"\r\n         * @type {object}\r\n         */\r\n        this._targetObject = null;\r\n\r\n        /**\r\n         * The scene composition. This is the root object to be rendered, everything else rendered must be a child of the scene\r\n         * @type {object}\r\n         */\r\n        this._scene = new Composition(this.canvas);\r\n\r\n        this._bindEvents();\r\n\r\n        this._animationLoop();\r\n\r\n        /**\r\n         * The framerate of the animation loop\r\n         * @type {number}\r\n         */\r\n        this._framerate = 0;\r\n    }\r\n\r\n    /**\r\n     * retrieve the current framerate\r\n     * @type {number}\r\n     */\r\n    get framerate() {\r\n        //var framerateUpdatedEvent = new Event();\r\n        return this._framerate;\r\n    }\r\n\r\n    //TODO: multiple target objects? in reverse order of render? in order of composition?\r\n    /**\r\n     * the object currently selected for interaction\r\n     * @type {object}\r\n     */\r\n    get targetObject() {\r\n        return this._targetObject;\r\n    }\r\n    /**\r\n     * the object currently selected for interaction\r\n     * @param {object} val\r\n     * @type {object}\r\n     */\r\n    set targetObject(val) {\r\n        this._targetObject = val;\r\n    }\r\n\r\n    /**\r\n     * the root of the scene graph. add primitives to this to compose an image\r\n     * @type {object}\r\n     */\r\n    get scene() {\r\n        return this._scene;\r\n    }\r\n\r\n    /**\r\n     * get the X position of the mouse on the canvas\r\n     * @type {number}\r\n     */\r\n    get mouseX() {\r\n        return this._mouseX;\r\n    }\r\n\r\n    /**\r\n     * get the Y position of the mouse on the canvas\r\n     * @type {number}\r\n     */\r\n    get mouseY() {\r\n        return this._mouseY;\r\n    }\r\n\r\n    /**\r\n     * The animation loop for this instance of Compositor.\r\n     * Upon receipt of the animation frame from `requestAnimationFrame`, the loop will check\r\n     * whether enough time has passed to redraw for the target framerate.\r\n     * It will only draw if somewhere along the scene graph, an object needs updating.\r\n     * There is no need to invoke this directly, the constructor will do it.\r\n     */\r\n    _animationLoop() {\r\n        window.requestAnimationFrame(this._animationLoop.bind(this));\r\n        this._currentTime = +new Date();\r\n        //set maximum of 60 fps and only redraw if necessary\r\n        if ( /*this._currentTime - this._lastFrameTimestamp >= this._targetFPS &&*/ this.scene.needsDraw) {\r\n            //this._lastRenderTime = +new Date();\r\n            Renderer.clearRect(0, 0, this._canvas.width, this._canvas.height, this._context);\r\n            this.scene.draw(this._context);\r\n        }\r\n        this._framerate = parseInt(1000 / (this._currentTime - this._lastFrameTimestamp));\r\n        this._lastFrameTimestamp = +new Date();\r\n\r\n    }\r\n\r\n    /**\r\n     * attach interaction events to the canvas. the canvas compositor dispatches\r\n     * events to relevant objects through bridges to the scene graph\r\n     */\r\n    _bindEvents() {\r\n        //must bind to `this` to retain reference\r\n\r\n        let _cc = this;\r\n        this._canvas.addEventListener(Events.MOUSEDOWN, (e) => {\r\n            _cc.dispatchEvent(e);\r\n        });\r\n\r\n        this._canvas.addEventListener(Events.MOUSEMOVE, (e) => {\r\n            _cc.dispatchEvent(e);\r\n        });\r\n        this._canvas.addEventListener(Events.MOUSEUP, (e) => {\r\n            _cc.dispatchEvent(e);\r\n        });\r\n        this._canvas.addEventListener(Events.MOUSEOUT, (e) => {\r\n            _cc.dispatchEvent(e);\r\n        });\r\n        this._canvas.addEventListener(Events.CLICK, (e) => {\r\n            _cc.dispatchEvent(e);\r\n        });\r\n\r\n        this.addEventListener(Events.MOUSEDOWN, this._handleMouseDown);\r\n        this.addEventListener(Events.MOUSEMOVE, this._handleMouseMove);\r\n        this.addEventListener(Events.MOUSEUP, this._handleMouseUp);\r\n        this.addEventListener(Events.MOUSEOUT, this._handleMouseOut);\r\n        this.addEventListener(Events.CLICK, this._handleClick);\r\n    }\r\n\r\n    /**\r\n     * bridge the mouse down event on the canvas to the\r\n     * the objects in the scene graph\r\n     */\r\n    _handleMouseDown(e) {\r\n        e.preventDefault();\r\n\r\n        let x = e.offsetX - this._leftPadding;\r\n        let y = e.offsetY - this._topPadding;\r\n\r\n        //pass through x and y to propagated events\r\n        e.canvasX = x;\r\n        e.canvasY = y;\r\n\r\n        let clickedObject = this.scene.childAt(x, y);\r\n\r\n        if (clickedObject) {\r\n            clickedObject.dispatchEvent(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * bridge the mouse up event on the canvas to the\r\n     * the objects in the scene graph\r\n     */\r\n    _handleMouseUp(e) {\r\n        e.preventDefault();\r\n\r\n        let x = e.offsetX - this._leftPadding;\r\n        let y = e.offsetY - this._topPadding;\r\n\r\n        //pass through x and y to propagated events\r\n        e.canvasX = x;\r\n        e.canvasY = y;\r\n\r\n        for (let c of this.scene.children) {\r\n            c.dispatchEvent(e);\r\n        }\r\n\r\n        let clickedObject = this.scene.childAt(x, y);\r\n\r\n        if (clickedObject) {\r\n            clickedObject.dispatchEvent(e);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * bridge the mouse move event on the canvas to the\r\n     * the objects in the scene graph\r\n     */\r\n    _handleMouseMove(e) {\r\n        e.preventDefault();\r\n        this._mouseX = e.offsetX - this._leftPadding;\r\n        this._mouseY = e.offsetY - this._topPadding;\r\n\r\n        for (let c of this.scene.children) {\r\n            c.dispatchEvent(e)\r\n        }\r\n    };\r\n\r\n    /**\r\n     * bridge the click event on the canvas to the\r\n     * the objects in the scene graph\r\n     */\r\n    _handleClick(e) {\r\n        e.preventDefault();\r\n\r\n        let x = e.offsetX - this._leftPadding;\r\n        let y = e.offsetY - this._topPadding;\r\n\r\n        //pass through x and y to propagated events\r\n        e.canvasX = x;\r\n        e.canvasY = y;\r\n\r\n        let clickedObject = this.scene.childAt(x, y);\r\n        if (clickedObject) {\r\n            clickedObject.dispatchEvent(e);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * bridge the mouse out event on the canvas to the\r\n     * the objects in the scene graph\r\n     */\r\n    _handleMouseOut(e) {\r\n        e.preventDefault();\r\n\r\n        for (let c of this.scene.children) {\r\n            c.dispatchEvent(e);\r\n        };\r\n    };\r\n}\r\n\r\nexport {\r\n    Renderer,\r\n    PrimitiveComponent,\r\n    Composition,\r\n    Circle,\r\n    Ellipse,\r\n    Rectangle,\r\n    Line,\r\n    VectorPath,\r\n    Bezier,\r\n    Image,\r\n    Text,\r\n    Defaults,\r\n    Events,\r\n    Compositor\r\n};\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/Compositor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 83,
    "kind": "class",
    "name": "Compositor",
    "memberof": "src/Compositor.js",
    "static": true,
    "longname": "src/Compositor.js~Compositor",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Compositor.js",
    "importStyle": "{Compositor}",
    "description": "The Compositor class is the entry-point to usage of the `canvas-compositor`.\nThe application programmer is expected to hand over low-level control of the canvas\ncontext to the high-level classes and methods exposed by CanvasCompositor.\n\nThe Compositor class establishes an event dispatcher, animation loop, and scene graph for\ncompositions.",
    "lineNumber": 52,
    "interface": false,
    "extends": [
      "micro-mvc~EventEmitter"
    ]
  },
  {
    "__docId__": 84,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Compositor.js~Compositor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Compositor.js~Compositor#constructor",
    "access": "public",
    "description": "The Compositor class establishes an event dispatcher, animation loop, and scene graph for\ncompositions",
    "examples": [
      "let cc = new Compositor(document.getElementById('myCanvas'));"
    ],
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "canvas",
        "description": "This should be a canvas, either from the DOM or an equivalent API"
      }
    ]
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "_canvas",
    "memberof": "src/Compositor.js~Compositor",
    "static": false,
    "longname": "src/Compositor.js~Compositor#_canvas",
    "access": "private",
    "description": "The canvas used by the compositor",
    "lineNumber": 67,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "_context",
    "memberof": "src/Compositor.js~Compositor",
    "static": false,
    "longname": "src/Compositor.js~Compositor#_context",
    "access": "private",
    "description": "The context used by the compositor",
    "lineNumber": 71,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "member",
    "name": "_mouseX",
    "memberof": "src/Compositor.js~Compositor",
    "static": false,
    "longname": "src/Compositor.js~Compositor#_mouseX",
    "access": "private",
    "description": "The x coordinate of the mouse position within the canvas",
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "member",
    "name": "_mouseY",
    "memberof": "src/Compositor.js~Compositor",
    "static": false,
    "longname": "src/Compositor.js~Compositor#_mouseY",
    "access": "private",
    "description": "The y coordinate of the mouse position within the canvas",
    "lineNumber": 88,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "_leftPadding",
    "memberof": "src/Compositor.js~Compositor",
    "static": false,
    "longname": "src/Compositor.js~Compositor#_leftPadding",
    "access": "private",
    "description": "Any left padding and border added to the canvas must be known to calculate mouse position",
    "lineNumber": 97,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 90,
    "kind": "member",
    "name": "_topPadding",
    "memberof": "src/Compositor.js~Compositor",
    "static": false,
    "longname": "src/Compositor.js~Compositor#_topPadding",
    "access": "private",
    "description": "Any top padding and border added to the canvas must be known to calculate mouse position",
    "lineNumber": 106,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 91,
    "kind": "member",
    "name": "_currentTime",
    "memberof": "src/Compositor.js~Compositor",
    "static": false,
    "longname": "src/Compositor.js~Compositor#_currentTime",
    "access": "private",
    "description": "The timestamp of the current loop of animation",
    "lineNumber": 112,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 92,
    "kind": "member",
    "name": "_lastFrameTimestamp",
    "memberof": "src/Compositor.js~Compositor",
    "static": false,
    "longname": "src/Compositor.js~Compositor#_lastFrameTimestamp",
    "access": "private",
    "description": "The timestamp of the last frame drawn by the animation loop",
    "lineNumber": 118,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "_targetObject",
    "memberof": "src/Compositor.js~Compositor",
    "static": false,
    "longname": "src/Compositor.js~Compositor#_targetObject",
    "access": "private",
    "description": "The object last granted \"focus\"",
    "lineNumber": 130,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "_scene",
    "memberof": "src/Compositor.js~Compositor",
    "static": false,
    "longname": "src/Compositor.js~Compositor#_scene",
    "access": "private",
    "description": "The scene composition. This is the root object to be rendered, everything else rendered must be a child of the scene",
    "lineNumber": 136,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 95,
    "kind": "member",
    "name": "_framerate",
    "memberof": "src/Compositor.js~Compositor",
    "static": false,
    "longname": "src/Compositor.js~Compositor#_framerate",
    "access": "private",
    "description": "The framerate of the animation loop",
    "lineNumber": 146,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 96,
    "kind": "get",
    "name": "framerate",
    "memberof": "src/Compositor.js~Compositor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Compositor.js~Compositor#framerate",
    "access": "public",
    "description": "retrieve the current framerate",
    "lineNumber": 153,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 97,
    "kind": "get",
    "name": "targetObject",
    "memberof": "src/Compositor.js~Compositor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Compositor.js~Compositor#targetObject",
    "access": "public",
    "description": "the object currently selected for interaction",
    "lineNumber": 163,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 98,
    "kind": "set",
    "name": "targetObject",
    "memberof": "src/Compositor.js~Compositor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Compositor.js~Compositor#targetObject",
    "access": "public",
    "description": "the object currently selected for interaction",
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 100,
    "kind": "get",
    "name": "scene",
    "memberof": "src/Compositor.js~Compositor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Compositor.js~Compositor#scene",
    "access": "public",
    "description": "the root of the scene graph. add primitives to this to compose an image",
    "lineNumber": 179,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 101,
    "kind": "get",
    "name": "mouseX",
    "memberof": "src/Compositor.js~Compositor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Compositor.js~Compositor#mouseX",
    "access": "public",
    "description": "get the X position of the mouse on the canvas",
    "lineNumber": 187,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 102,
    "kind": "get",
    "name": "mouseY",
    "memberof": "src/Compositor.js~Compositor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Compositor.js~Compositor#mouseY",
    "access": "public",
    "description": "get the Y position of the mouse on the canvas",
    "lineNumber": 195,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "_animationLoop",
    "memberof": "src/Compositor.js~Compositor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Compositor.js~Compositor#_animationLoop",
    "access": "private",
    "description": "The animation loop for this instance of Compositor.\nUpon receipt of the animation frame from `requestAnimationFrame`, the loop will check\nwhether enough time has passed to redraw for the target framerate.\nIt will only draw if somewhere along the scene graph, an object needs updating.\nThere is no need to invoke this directly, the constructor will do it.",
    "lineNumber": 206,
    "params": [],
    "return": null
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "_bindEvents",
    "memberof": "src/Compositor.js~Compositor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Compositor.js~Compositor#_bindEvents",
    "access": "private",
    "description": "attach interaction events to the canvas. the canvas compositor dispatches\nevents to relevant objects through bridges to the scene graph",
    "lineNumber": 224,
    "params": [],
    "return": null
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "_handleMouseDown",
    "memberof": "src/Compositor.js~Compositor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Compositor.js~Compositor#_handleMouseDown",
    "access": "private",
    "description": "bridge the mouse down event on the canvas to the\nthe objects in the scene graph",
    "lineNumber": 256,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "_handleMouseUp",
    "memberof": "src/Compositor.js~Compositor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Compositor.js~Compositor#_handleMouseUp",
    "access": "private",
    "description": "bridge the mouse up event on the canvas to the\nthe objects in the scene graph",
    "lineNumber": 277,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "_handleMouseMove",
    "memberof": "src/Compositor.js~Compositor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Compositor.js~Compositor#_handleMouseMove",
    "access": "private",
    "description": "bridge the mouse move event on the canvas to the\nthe objects in the scene graph",
    "lineNumber": 302,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "_handleClick",
    "memberof": "src/Compositor.js~Compositor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Compositor.js~Compositor#_handleClick",
    "access": "private",
    "description": "bridge the click event on the canvas to the\nthe objects in the scene graph",
    "lineNumber": 316,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "_handleMouseOut",
    "memberof": "src/Compositor.js~Compositor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Compositor.js~Compositor#_handleMouseOut",
    "access": "private",
    "description": "bridge the mouse out event on the canvas to the\nthe objects in the scene graph",
    "lineNumber": 336,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 115,
    "kind": "file",
    "name": "src/Defaults.js",
    "content": "/**\r\n * The default color to fill shapes drawn by the canvas context\r\n */\r\nexport const FILL_STYLE = 'black';\r\n\r\n/**\r\n * The default color to stroke shapes drawn by the canvas context\r\n */\r\nexport const STROKE_STYLE = 'black';\r\n\r\n/**\r\n * The default line cap style for strokes drawn by the canvas. 'round' chosen to match `LINE_JOIN`, which ensures smooth meshing of vertices\r\n */\r\nexport const LINE_CAP = 'round';\r\n\r\n/**\r\n * The default stroke width for shapes drawn by the canvas\r\n */\r\nexport const LINE_WIDTH = 1.0;\r\n\r\n/**\r\n * The default line join style strokes drawn by the canvas. 'round' chosen for smooth meshing of vertices\r\n */\r\nexport const LINE_JOIN = 'round';\r\n\r\n/**\r\n * The default miter limit ratio for mitered line joins\r\n */\r\nexport const MITER_LIMIT = 10;\r\n\r\n/**\r\n * The default font for text drawn by the canvas context\r\n */\r\nexport const FONT = '10px sans-serif';\r\n\r\n/**\r\n * The default text alignment for text drawn by the canvas context\r\n */\r\nexport const TEXT_ALIGN = 'start';\r\n\r\n/**\r\n * The default text baseline for text drawn by the canvas context\r\n */\r\nexport const TEXT_BASELINE = 'alphabetic';\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/Defaults.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "variable",
    "name": "FILL_STYLE",
    "memberof": "src/Defaults.js",
    "static": true,
    "longname": "src/Defaults.js~FILL_STYLE",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Defaults.js",
    "importStyle": "{FILL_STYLE}",
    "description": "The default color to fill shapes drawn by the canvas context",
    "lineNumber": 4,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "name": "STROKE_STYLE",
    "memberof": "src/Defaults.js",
    "static": true,
    "longname": "src/Defaults.js~STROKE_STYLE",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Defaults.js",
    "importStyle": "{STROKE_STYLE}",
    "description": "The default color to stroke shapes drawn by the canvas context",
    "lineNumber": 9,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "variable",
    "name": "LINE_CAP",
    "memberof": "src/Defaults.js",
    "static": true,
    "longname": "src/Defaults.js~LINE_CAP",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Defaults.js",
    "importStyle": "{LINE_CAP}",
    "description": "The default line cap style for strokes drawn by the canvas. 'round' chosen to match `LINE_JOIN`, which ensures smooth meshing of vertices",
    "lineNumber": 14,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "variable",
    "name": "LINE_WIDTH",
    "memberof": "src/Defaults.js",
    "static": true,
    "longname": "src/Defaults.js~LINE_WIDTH",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Defaults.js",
    "importStyle": "{LINE_WIDTH}",
    "description": "The default stroke width for shapes drawn by the canvas",
    "lineNumber": 19,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "variable",
    "name": "LINE_JOIN",
    "memberof": "src/Defaults.js",
    "static": true,
    "longname": "src/Defaults.js~LINE_JOIN",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Defaults.js",
    "importStyle": "{LINE_JOIN}",
    "description": "The default line join style strokes drawn by the canvas. 'round' chosen for smooth meshing of vertices",
    "lineNumber": 24,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "variable",
    "name": "MITER_LIMIT",
    "memberof": "src/Defaults.js",
    "static": true,
    "longname": "src/Defaults.js~MITER_LIMIT",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Defaults.js",
    "importStyle": "{MITER_LIMIT}",
    "description": "The default miter limit ratio for mitered line joins",
    "lineNumber": 29,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "variable",
    "name": "FONT",
    "memberof": "src/Defaults.js",
    "static": true,
    "longname": "src/Defaults.js~FONT",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Defaults.js",
    "importStyle": "{FONT}",
    "description": "The default font for text drawn by the canvas context",
    "lineNumber": 34,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "variable",
    "name": "TEXT_ALIGN",
    "memberof": "src/Defaults.js",
    "static": true,
    "longname": "src/Defaults.js~TEXT_ALIGN",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Defaults.js",
    "importStyle": "{TEXT_ALIGN}",
    "description": "The default text alignment for text drawn by the canvas context",
    "lineNumber": 39,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "variable",
    "name": "TEXT_BASELINE",
    "memberof": "src/Defaults.js",
    "static": true,
    "longname": "src/Defaults.js~TEXT_BASELINE",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Defaults.js",
    "importStyle": "{TEXT_BASELINE}",
    "description": "The default text baseline for text drawn by the canvas context",
    "lineNumber": 44,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "src/Ellipse.js",
    "content": "import { drawEllipse } from './Renderer';\r\nimport { PrimitiveComponent } from './PrimitiveComponent';\r\n\r\n/**\r\n * An ellipse\r\n */\r\nexport class Ellipse extends PrimitiveComponent {\r\n    /**\r\n     * @param {object} options options for the ellipse\r\n     * @param {number} options.radius the major (horizontal) radius of the ellipse\r\n     * @param {number} options.minorRadius the minor (vertical) radius of the ellipse\r\n     */\r\n    constructor(options) {\r\n        super(options);\r\n        /**\r\n         * @type {number} radius the major radius (horizontal) of the ellipse\r\n         */\r\n        this.radius = options.radius || 0;\r\n        /**\r\n         * @type {number} minorRadius the minor radius (vertical) of the ellipse\r\n         */\r\n        this.minorRadius = options.minorRadius || this.radius || 0;\r\n    }\r\n\r\n    /**\r\n     * the bounding box for the ellipse\r\n     * @type {{top: number, left: number, bottom: number, right: number}} boundingBox\r\n     */\r\n    get boundingBox() {\r\n        let offset = this.offset;\r\n        let scale = this.compoundScale;\r\n        let lineWidth = this.style.lineWidth;\r\n        return {\r\n            top: offset.y -\r\n                ((this.minorRadius * scale.scaleHeight) + lineWidth),\r\n            left: offset.x -\r\n                ((this.radius * scale.scaleWidth) + lineWidth),\r\n            bottom: offset.y +\r\n                (this.minorRadius * scale.scaleHeight) + lineWidth,\r\n            right: offset.x +\r\n                (this.radius * scale.scaleWidth) + lineWidth\r\n        };\r\n    }\r\n\r\n    /**\r\n     * override the render function specifically for ellipses\r\n     * @override\r\n     */\r\n    render() {\r\n        let scale = this.compoundScale;\r\n        let lineWidth = this.style.lineWidth;\r\n        //TODO: work out scaling of major/minor radius\r\n        //this doesn't make sense\r\n        drawEllipse(\r\n            (this.radius * scale.scaleWidth) + lineWidth,\r\n            (this.minorRadius * scale.scaleHeight) + lineWidth,\r\n            (this.radius * scale.scaleWidth),\r\n            (this.minorRadius * scale.scaleHeight),\r\n            this._prerenderingContext,\r\n            this.style\r\n        );\r\n    }\r\n    /**\r\n     * determine whether the point is in the object\r\n     * basically just the pythagorean theorem\r\n     * @param {number} x the x coordinate\r\n     * @param {number} y the y coordinate\r\n     * @return {boolean} whether or not the point is in the object\r\n     */\r\n    pointIsInObject(x, y) {\r\n        let scale = this.compoundScale;\r\n        let offset = this.offset;\r\n\r\n        let a = x - offset.x;\r\n        let b = y - offset.y;\r\n\r\n        let c1 = this.radius * scale.scaleWidth;\r\n        let c2 = this.minorRadius * scale.scaleHeight;\r\n\r\n        //see: http://math.stackexchange.com/questions/76457/check-if-a-point-is-within-an-ellipse\r\n        return ((a*a) / (c1*c1)) + ((b*b) / (c2*c2)) <= 1;\r\n    };\r\n}\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/Ellipse.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "class",
    "name": "Ellipse",
    "memberof": "src/Ellipse.js",
    "static": true,
    "longname": "src/Ellipse.js~Ellipse",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Ellipse.js",
    "importStyle": "{Ellipse}",
    "description": "An ellipse",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/PrimitiveComponent.js~PrimitiveComponent"
    ]
  },
  {
    "__docId__": 127,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Ellipse.js~Ellipse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Ellipse.js~Ellipse#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "options for the ellipse"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.radius",
        "description": "the major (horizontal) radius of the ellipse"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.minorRadius",
        "description": "the minor (vertical) radius of the ellipse"
      }
    ]
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "radius",
    "memberof": "src/Ellipse.js~Ellipse",
    "static": false,
    "longname": "src/Ellipse.js~Ellipse#radius",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "minorRadius",
    "memberof": "src/Ellipse.js~Ellipse",
    "static": false,
    "longname": "src/Ellipse.js~Ellipse#minorRadius",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 130,
    "kind": "get",
    "name": "boundingBox",
    "memberof": "src/Ellipse.js~Ellipse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Ellipse.js~Ellipse#boundingBox",
    "access": "public",
    "description": "the bounding box for the ellipse",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "{top: number, left: number, bottom: number, right: number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "render",
    "memberof": "src/Ellipse.js~Ellipse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Ellipse.js~Ellipse#render",
    "access": "public",
    "description": "override the render function specifically for ellipses",
    "lineNumber": 49,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "pointIsInObject",
    "memberof": "src/Ellipse.js~Ellipse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Ellipse.js~Ellipse#pointIsInObject",
    "access": "public",
    "description": "determine whether the point is in the object\nbasically just the pythagorean theorem",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the x coordinate"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the y coordinate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "whether or not the point is in the object"
    }
  },
  {
    "__docId__": 133,
    "kind": "file",
    "name": "src/Events.js",
    "content": "\r\n/**\r\n * The `mouseup` event label\r\n */\r\nexport const MOUSEUP = 'mouseup';\r\n\r\n/**\r\n * The `mousedown` event label\r\n */\r\nexport const MOUSEDOWN = 'mousedown';\r\n\r\n/**\r\n * The `mousemove` event label\r\n */\r\nexport const MOUSEMOVE = 'mousemove';\r\n\r\n/**\r\n * The `mouseout` event label\r\n */\r\nexport const MOUSEOUT = 'mouseout';\r\n\r\n/**\r\n * The `click` event label\r\n */\r\nexport const CLICK = 'click';\r\n\r\n/**\r\n * The `keydown` event label\r\n */\r\nexport const KEYDOWN = 'keydown';\r\n\r\n/**\r\n * The `keyup` event label\r\n */\r\nexport const KEYUP = 'keyup';\r\n\r\n/**\r\n * The `keypress` event label\r\n */\r\nexport const KEYPRESS = 'keypress';\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/Events.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "name": "MOUSEUP",
    "memberof": "src/Events.js",
    "static": true,
    "longname": "src/Events.js~MOUSEUP",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Events.js",
    "importStyle": "{MOUSEUP}",
    "description": "The `mouseup` event label",
    "lineNumber": 5,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "MOUSEDOWN",
    "memberof": "src/Events.js",
    "static": true,
    "longname": "src/Events.js~MOUSEDOWN",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Events.js",
    "importStyle": "{MOUSEDOWN}",
    "description": "The `mousedown` event label",
    "lineNumber": 10,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "name": "MOUSEMOVE",
    "memberof": "src/Events.js",
    "static": true,
    "longname": "src/Events.js~MOUSEMOVE",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Events.js",
    "importStyle": "{MOUSEMOVE}",
    "description": "The `mousemove` event label",
    "lineNumber": 15,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "MOUSEOUT",
    "memberof": "src/Events.js",
    "static": true,
    "longname": "src/Events.js~MOUSEOUT",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Events.js",
    "importStyle": "{MOUSEOUT}",
    "description": "The `mouseout` event label",
    "lineNumber": 20,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "CLICK",
    "memberof": "src/Events.js",
    "static": true,
    "longname": "src/Events.js~CLICK",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Events.js",
    "importStyle": "{CLICK}",
    "description": "The `click` event label",
    "lineNumber": 25,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "variable",
    "name": "KEYDOWN",
    "memberof": "src/Events.js",
    "static": true,
    "longname": "src/Events.js~KEYDOWN",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Events.js",
    "importStyle": "{KEYDOWN}",
    "description": "The `keydown` event label",
    "lineNumber": 30,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "variable",
    "name": "KEYUP",
    "memberof": "src/Events.js",
    "static": true,
    "longname": "src/Events.js~KEYUP",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Events.js",
    "importStyle": "{KEYUP}",
    "description": "The `keyup` event label",
    "lineNumber": 35,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "variable",
    "name": "KEYPRESS",
    "memberof": "src/Events.js",
    "static": true,
    "longname": "src/Events.js~KEYPRESS",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Events.js",
    "importStyle": "{KEYPRESS}",
    "description": "The `keypress` event label",
    "lineNumber": 40,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "file",
    "name": "src/Image.js",
    "content": "import { drawImage } from './Renderer';\r\nimport { PrimitiveComponent } from './PrimitiveComponent';\r\n\r\n/**\r\n * an Image\r\n */\r\nexport class Image extends PrimitiveComponent {\r\n    /**\r\n     * @param {Object} options\r\n     */\r\n    constructor(options) {\r\n        super(options);\r\n        /**\r\n         * @type {window.Image} unscaledImage the original image\r\n         */\r\n        this.unscaledImage = options.image;\r\n    }\r\n\r\n    /**\r\n     * get the bounding box\r\n     * @type {{top: number, left: number, bottom: number, right:number}} boundingBox\r\n     */\r\n    get boundingBox() {\r\n        let compoundScale = this.compoundScale;\r\n        let offset = this.offset;\r\n        return {\r\n            top: offset.y,\r\n            left: offset.x,\r\n            bottom: offset.y + (compoundScale.scaleHeight * this.unscaledImage.height),\r\n            right: offset.x + (compoundScale.scaleWidth * this.unscaledImage.width)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * override the render function for images specifically\r\n     * @override\r\n     */\r\n    render() {\r\n        let scale = this.compoundScale;\r\n        let image = new window.Image();\r\n        image.src = this.unscaledImage.src;\r\n        image.width = this.unscaledImage.width * scale.scaleWidth;\r\n        image.height = this.unscaledImage.height * scale.scaleHeight;\r\n        drawImage(0, 0, image, this._prerenderingContext, this.style);\r\n    };\r\n}\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/Image.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 143,
    "kind": "class",
    "name": "Image",
    "memberof": "src/Image.js",
    "static": true,
    "longname": "src/Image.js~Image",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Image.js",
    "importStyle": "{Image}",
    "description": "an Image",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/PrimitiveComponent.js~PrimitiveComponent"
    ]
  },
  {
    "__docId__": 144,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Image.js~Image",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Image.js~Image#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "unscaledImage",
    "memberof": "src/Image.js~Image",
    "static": false,
    "longname": "src/Image.js~Image#unscaledImage",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "window.Image"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 146,
    "kind": "get",
    "name": "boundingBox",
    "memberof": "src/Image.js~Image",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Image.js~Image#boundingBox",
    "access": "public",
    "description": "get the bounding box",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "{top: number, left: number, bottom: number, right:number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "render",
    "memberof": "src/Image.js~Image",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Image.js~Image#render",
    "access": "public",
    "description": "override the render function for images specifically",
    "lineNumber": 38,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 148,
    "kind": "file",
    "name": "src/Line.js",
    "content": "import { Vector } from 'vectorious';\r\n\r\n/**\r\n * A line\r\n */\r\nexport class Line {\r\n    /**\r\n     * A Line can be defined by two points, p1 and p2, through\r\n     * which it passes. Here, an anchor point is supplied for p1,\r\n     * and a unit vector, direction, is added to it to provided\r\n     * the second.\r\n     * @param {object} anchor\r\n     * @param {object} direction\r\n     */\r\n    constructor(anchor, direction) {\r\n        /**\r\n         * @type {object} p1 a vector describing a point through which the line passes\r\n         */\r\n        this.p1 = anchor;\r\n\r\n        /**\r\n         * @type {object} direction a unit vector describing the direction from p1\r\n         */\r\n        this.direction = direction;\r\n\r\n        /**\r\n         * @type {object} a vector describing a second point through which the line passes\r\n         */\r\n        this.p2 = Vector.add(this.p1, this.direction);\r\n    }\r\n\r\n    /**\r\n     * determine the location that this line intersects with another, if at all\r\n     * @param {object} l the Line to test for intersection against this Line\r\n     * @return {object} the vector of the location of intersection, or null if the lines are parallel\r\n     */\r\n    intersectionWith(l) {\r\n        return Line.intersection(this, l);\r\n    }\r\n\r\n    /**\r\n     * determine the location that these lines intersect, if at all\r\n     * @param {object} l1 the first Line to test for intersection\r\n     * @param {object} l2 the second Line to test for intersection\r\n     * @return {object} the vector of the location of intersection, or null if the lines are parallel\r\n     */\r\n    static intersection(l1, l2) {\r\n        let x1 = l1.p1.x,\r\n            x2 = l1.p2.x,\r\n            x3 = l2.p1.x,\r\n            x4 = l2.p2.x;\r\n        let y1 = l1.p1.y,\r\n            y2 = l1.p2.y,\r\n            y3 = l2.p1.y,\r\n            y4 = l2.p2.y;\r\n        let denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n        if (denominator === 0) {\r\n            return null;\r\n        }\r\n\r\n        let xNumerator = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4);\r\n        let yNumerator = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4);\r\n        return new Vector([xNumerator / denominator, yNumerator / denominator]);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/Line.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 149,
    "kind": "class",
    "name": "Line",
    "memberof": "src/Line.js",
    "static": true,
    "longname": "src/Line.js~Line",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Line.js",
    "importStyle": "{Line}",
    "description": "A line",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 150,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Line.js~Line",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Line.js~Line#constructor",
    "access": "public",
    "description": "A Line can be defined by two points, p1 and p2, through\nwhich it passes. Here, an anchor point is supplied for p1,\nand a unit vector, direction, is added to it to provided\nthe second.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "anchor",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "direction",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "p1",
    "memberof": "src/Line.js~Line",
    "static": false,
    "longname": "src/Line.js~Line#p1",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "direction",
    "memberof": "src/Line.js~Line",
    "static": false,
    "longname": "src/Line.js~Line#direction",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "p2",
    "memberof": "src/Line.js~Line",
    "static": false,
    "longname": "src/Line.js~Line#p2",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "intersectionWith",
    "memberof": "src/Line.js~Line",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Line.js~Line#intersectionWith",
    "access": "public",
    "description": "determine the location that this line intersects with another, if at all",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "l",
        "description": "the Line to test for intersection against this Line"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the vector of the location of intersection, or null if the lines are parallel"
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "intersection",
    "memberof": "src/Line.js~Line",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Line.js~Line.intersection",
    "access": "public",
    "description": "determine the location that these lines intersect, if at all",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "l1",
        "description": "the first Line to test for intersection"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "l2",
        "description": "the second Line to test for intersection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the vector of the location of intersection, or null if the lines are parallel"
    }
  },
  {
    "__docId__": 156,
    "kind": "file",
    "name": "src/PrimitiveComponent.js",
    "content": "import {\r\n    Vector\r\n} from 'vectorious';\r\n\r\nimport {\r\n    drawImage,\r\n    clearRect\r\n} from './Renderer';\r\n\r\nimport {\r\n    EventEmitter\r\n} from 'micro-mvc';\r\n\r\nimport * as Defaults from './Defaults';\r\n\r\n//assign default values to an object so that the Object.assign function can be used\r\n/**\r\n * The default values to be passed to the renderer and overridden by any given object\r\n */\r\nlet defaults = {\r\n    //direction: 'inherit',\r\n    fillStyle: Defaults.FILL_STYLE,\r\n    //filter: 'none',\r\n    strokeStyle: Defaults.STROKE_STYLE,\r\n    lineCap: Defaults.LINE_CAP,\r\n    lineWidth: Defaults.LINE_WIDTH,\r\n    lineJoin: Defaults.LINE_JOIN,\r\n    miterLimit: Defaults.MITER_LIMIT,\r\n    font: Defaults.FONT,\r\n    textAlign: Defaults.TEXT_ALIGN,\r\n    textBaseline: Defaults.TEXT_BASELINE,\r\n    lineDash: []\r\n};\r\n\r\n/**\r\n * The base class of things that may be drawn on the canvas.\r\n * All drawable objects should inherit from this class.\r\n * Typically, it is unnecessary for application programmers to\r\n * call this directly, although they may wish to extend their own\r\n * classes with it.\r\n */\r\nexport class PrimitiveComponent extends EventEmitter {\r\n    /**\r\n     * construct a primitive component\r\n     * @param {object} options\r\n     */\r\n    constructor(options) {\r\n        super();\r\n\r\n        options = options || {};\r\n\r\n        //TODO: reimplement any flags for debug data\r\n        //this._flags = {};\r\n        //this._flags.DEBUG = options.debug || false;\r\n\r\n        /**\r\n         * does the object need to be redrawn?\r\n         * @type {boolean} _needsDraw\r\n         */\r\n        this._needsDraw = true;\r\n\r\n        /**\r\n         * does the object need to be rendered?\r\n         * @type {boolean} _needsRender\r\n         */\r\n        this._needsRender = true;\r\n\r\n        /**\r\n         * the horizontal scale of the object. defaults to 1\r\n         * @type {number} _scaleWidth\r\n         */\r\n        this._scaleWidth = 1;\r\n\r\n        /**\r\n         * the vertical scale of the object. defaults to 1\r\n         * @type {number} _scaleHeight\r\n         */\r\n        this._scaleHeight = 1;\r\n\r\n        /**\r\n         * d is for \"displacement\": a 2D Vector object representing cartesian coordinate\r\n         * position relative to its parent composition (or [0,0] if this is the scene composition)\r\n         * @type {object} d\r\n         */\r\n        this._d = new Vector([options.x || 0, options.y || 0]);\r\n\r\n        /**\r\n         * style options for this particular object. these are standard context styles\r\n         * @type {object} style\r\n         */\r\n        this.style = Object.assign({}, defaults, options.style);\r\n\r\n        //TODO: determine whether this is the best place to implement click passthrough -\r\n        //it might be better left implemented by consuming modules\r\n        /**\r\n         * objects with pressPassThrough set to true will allow mouse clicks to pass\r\n         * through to objects behind them\r\n         * @type {boolean} pressPassThrough\r\n         */\r\n        //this.pressPassThrough = options.pressPassThrough || false;\r\n\r\n        /**\r\n         * the prerendering canvas is used to avoid performing mutliple draw operations on the\r\n         * visible, main canvas. this minimizes the time needed to render by prerendering on a\r\n         * canvas only as large as necessary for the object\r\n         * @type {object} _prerenderingCanvas\r\n         */\r\n        this._prerenderingCanvas = document.createElement('canvas');\r\n\r\n        //TODO: enable alternative rendering contexts for WebGL and 3d\r\n        /**\r\n         * the 2D context of the prerendering canvas.\r\n         * @type {object} _prerenderingCanvas\r\n         */\r\n        this._prerenderingContext = this._prerenderingCanvas.getContext('2d');\r\n\r\n        /**\r\n         * the parent object of this object. with the exception of the scene composition itself,\r\n         * the root of all objects ancestry should be the scene composition\r\n         * @type {object} parent\r\n         */\r\n        this._parent = options.parent || null;\r\n    }\r\n\r\n    /**\r\n     * the global offset of the object on the canvas.\r\n     * this is the sum of this object's displacement\r\n     * and all of its ancestry.\r\n     * @type {object} offset a 2D Vector representing displacement from [0, 0]\r\n     */\r\n    get offset() {\r\n        return (this.parent ? Vector.add(this.d, this.parent.offset) : this.d);\r\n    }\r\n\r\n    /**\r\n     * returns true whenever the object needs to be re-drawn to canvas.\r\n     * when true, this will indicate to the parent tree of composing objects that\r\n     * the object needs to be re-drawn on the next animation loop.\r\n     *\r\n     * objects need to be updated when their displacement changes, or when any thing\r\n     * that requires a rerender occurs.\r\n     *\r\n     * @type {boolean} needsDraw\r\n     */\r\n    get needsDraw() {\r\n        return this._needsDraw;\r\n    }\r\n\r\n    /**\r\n     * set to true whenever the object needs to be re-drawn to canvas.\r\n     * when true, this will indicate to the parent tree of composing objects that\r\n     * the object needs to be re-drawn on the next animation loop.\r\n     *\r\n     * objects need to be updated when their displacement changes, or when any thing\r\n     * that requires a rerender occurs.\r\n     *\r\n     * @type {boolean} needsDraw\r\n     */\r\n    set needsDraw(val) {\r\n        if (this.parent && val) {\r\n            this.parent.needsDraw = val;\r\n            this.parent.needsRender = true; // if this needs to be redrawn, then the parent needs a full rerender\r\n        }\r\n        this._needsDraw = val;\r\n    }\r\n\r\n    /**\r\n     * returns true whenever the object's properties have changed such that\r\n     * it needs to be rendered differently\r\n     *\r\n     * 1. scale change\r\n     * 1. physical property change (height, width, radius, etc.)\r\n     * 1. color change\r\n     *\r\n     * @type {boolean} needsRender\r\n     */\r\n    get needsRender() {\r\n        return this._needsRender;\r\n    }\r\n\r\n    /**\r\n     * set to true whenever the object's properties have changed such that\r\n     * it needs to be rendered differently\r\n     *\r\n     * 1. scale change\r\n     * 1. physical property change (height, width, radius, etc.)\r\n     * 1. color change\r\n     *\r\n     * @type {boolean} needsRender\r\n     */\r\n    set needsRender(val) {\r\n        if (this.parent && val) {\r\n            this.parent.needsRender = val;\r\n        }\r\n        this._needsRender = val;\r\n    }\r\n\r\n    /**\r\n     * return the horizontal scale of the object - defaults to 1\r\n     * @type {number} scaleWidth\r\n     */\r\n    get scaleWidth() {\r\n        return this._scaleWidth;\r\n    }\r\n    /**\r\n     * set the horizontal scale of the object - defaults to 1\r\n     * @type {number} scaleWidth\r\n     */\r\n    set scaleWidth(val) {\r\n        this._scaleWidth = val;\r\n        this.needsRender = true;\r\n        this.needsDraw = true;\r\n        for (let c of this.children) {\r\n            c.needsRender = true;\r\n            c.needsDraw = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * return the vertical scale of the object - defaults to 1\r\n     * @type {number} scaleHeight\r\n     */\r\n    get scaleHeight() {\r\n        return this._scaleHeight;\r\n    }\r\n\r\n    /**\r\n     * set the vertical scale of the object - defaults to 1\r\n     * @type {number} scaleHeight\r\n     * @param {number} val the vertical scale\r\n     */\r\n    set scaleHeight(val) {\r\n        this._scaleHeight = val;\r\n        this.needsRender = true;\r\n        this.needsDraw = true;\r\n        for (let c of this.children) {\r\n            c.needsRender = true;\r\n            c.needsDraw = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * return an object containing the vertical and horizontal scale\r\n     * @type {object} scale\r\n     */\r\n    get scale() {\r\n        return {\r\n            scaleWidth: this.scaleWidth,\r\n            scaleHeight: this.scaleHeight\r\n        };\r\n    }\r\n\r\n    /**\r\n     * set the scale width and height in one go\r\n     * @type {number} scale\r\n     */\r\n    set scale(val) {\r\n        this.scaleHeight = val;\r\n        this.scaleWidth = val;\r\n    }\r\n\r\n    /**\r\n     * return the scale of the object, compounded with the parent object's scale\r\n     * @type {{scaleWidth: number, scaleHeight: number}} compoundScale the scale multiplied by the compound scale of its parent or 1\r\n     */\r\n    get compoundScale() {\r\n        return {\r\n            scaleWidth: this.parent ? this.scaleWidth * this.parent.compoundScale.scaleWidth : this.scaleWidth,\r\n            scaleHeight: this.parent ? this.scaleHeight * this.parent.compoundScale.scaleHeight : this.scaleHeight\r\n        };\r\n    }\r\n\r\n    /**\r\n     * d is for displacement - returns a vector\r\n     * @type {object} d\r\n     */\r\n    get d() {\r\n        return this._d;\r\n    }\r\n\r\n    /**\r\n     * d is for displacement - accepts a vector\r\n     * @type {object} d\r\n     * @param {object} val a vector\r\n     */\r\n    set d(val) {\r\n        this._d = val;\r\n    }\r\n\r\n    /**\r\n     * get the parent of the object. all objects except the scene graph should have a parent\r\n     * @type {object} parent\r\n     */\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    //TODO: provide links to things\r\n    /**\r\n     * set the parent of the object. all objects except the scene graph should have a parent\r\n     * @type {object} parent\r\n     * @param {object} val a composition\r\n     */\r\n    set parent(val) {\r\n        this._parent = val;\r\n    }\r\n\r\n    /**\r\n     * draw the object to canvas, render it if necessary\r\n     * @param {object} context the final canvas context where this will be drawn\r\n     * @param {object} offset the offset on the canvas - optional, used for prerendering\r\n     */\r\n    draw(context, offset) {\r\n        let boundingBox = this.boundingBox;\r\n\r\n        this.needsDraw = false;\r\n\r\n        if (this.needsRender && this.render) {\r\n            /*\r\n                TODO: AB-test this,\r\n                it may be faster than clearRect\r\n            */\r\n            //delete this._prerenderingCanvas;\r\n            //delete this._prerenderingContext;\r\n\r\n            //create a new canvas and context for rendering\r\n            //this._prerenderingCanvas = document.createElement('canvas');\r\n            //this._prerenderingContext = this._prerenderingCanvas.getContext('2d'); //text needs prerendering context defined for boundingBox measurements\r\n\r\n            //make sure the new canvas has the appropriate dimensions\r\n            this._prerenderingCanvas.width = boundingBox.right - boundingBox.left;\r\n            this._prerenderingCanvas.height = boundingBox.bottom - boundingBox.top;\r\n            //clear any old rendering artifacts - they are no longer viable\r\n            clearRect(0, 0, this._prerenderingCanvas.width, this._prerenderingCanvas.height, this._prerenderingContext);\r\n\r\n            this.render();\r\n            this.needsRender = false;\r\n        }\r\n\r\n        //TODO: handle debug options\r\n        //draw bounding boxes\r\n        /*if (this._flags.DEBUG) {\r\n            this._prerenderingContext.beginPath();\r\n            this._prerenderingContext.setLineDash([5, 15]);\r\n            this._prerenderingContext.lineWidth = 2.0;\r\n            this._prerenderingContext.strokeStyle = '#FF0000';\r\n            this._prerenderingContext.strokeStyle = '#FF0000';\r\n            this._prerenderingContext.strokeRect(0, 0, this._prerenderingCanvas.width, this._prerenderingCanvas.height);\r\n            this._prerenderingContext.closePath();\r\n        }*/\r\n\r\n        //offsets are for prerendering contexts of compositions\r\n        let x = boundingBox.left + (offset && offset.left ? offset.left : 0);\r\n        let y = boundingBox.top + (offset && offset.top ? offset.top : 0);\r\n        drawImage(x, y, this._prerenderingCanvas, context, this.style);\r\n    }\r\n\r\n    /**\r\n     * this method must be overridden by a subclass.\r\n     *\r\n     * the render method should be implemented by subclasses\r\n     * @abstract\r\n     */\r\n    render() {}\r\n\r\n    /**\r\n     * check whether the point specified lies *inside* this objects bounding box\r\n     *\r\n     * @param {number} x the x coordinate\r\n     * @param {number} y the y coordinate\r\n     * @return {boolean} whether the point is within the bounding box\r\n     */\r\n    pointIsInBoundingBox(x, y) {\r\n        let boundingBox = this.boundingBox;\r\n        return (\r\n            x > boundingBox.left &&\r\n            y > boundingBox.top &&\r\n            x < boundingBox.right &&\r\n            y < boundingBox.bottom\r\n        );\r\n    }\r\n\r\n    /**\r\n     * check whether the point is within the object.\r\n     * this method should be overridden by subclassess\r\n     *\r\n     * @param {number} x the x coordinate\r\n     * @param {number} y the y coordinate\r\n     * @return {boolean} whether the point is in the object, as implemented by inheriting classes\r\n     */\r\n    pointIsInObject(x, y) {\r\n        return this.pointIsInBoundingBox(x, y);\r\n    }\r\n\r\n    /**\r\n     * move the object on top of other objects (render last)\r\n     */\r\n    moveToFront() {\r\n        if (this.parent) {\r\n            let index = this.parent.children.indexOf(this);\r\n            if (index >= 0) {\r\n                this.parent.children.splice(index, 1);\r\n                this.parent.children.splice(this.parent.children.length, 0, this);\r\n                this.needsDraw = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * move the object below the other objects (render first)\r\n     */\r\n    moveToBack() {\r\n        if (this.parent) {\r\n            let index = this.parent.children.indexOf(this);\r\n            if (index >= 0) {\r\n                this.parent.children.splice(index, 1);\r\n                this.parent.children.splice(0, 0, this);\r\n                this.needsDraw = true;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * move the object forward in the stack (drawn later)\r\n     */\r\n    moveForward() {\r\n        if (this.parent) {\r\n            let index = this.parent.children.indexOf(this);\r\n            if (index >= 0 && index < this.parent.children.length - 1) {\r\n                this.parent.children.splice(index, 1);\r\n                this.parent.children.splice(index + 1, 0, this); //if index + 1 > siblings.length, inserts it at end\r\n                this.parent.UpdateChildrenLists();\r\n                this.needsRender = true;\r\n                this.needsDraw = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * move the object backward in the stack (drawn sooner)\r\n     */\r\n    moveBackward() {\r\n        if (this.parent) {\r\n            let index = this.parent.children.indexOf(this);\r\n            if (index > 0) {\r\n                this.parent.children.splice(index, 1);\r\n                this.parent.children.splice(index - 1, 0, this);\r\n                this.parent.UpdateChildrenLists();\r\n                this.needsRender = true;\r\n                this.needsDraw = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/PrimitiveComponent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "defaults",
    "memberof": "src/PrimitiveComponent.js",
    "static": true,
    "longname": "src/PrimitiveComponent.js~defaults",
    "access": "public",
    "export": false,
    "importPath": "canvas-compositor/src/PrimitiveComponent.js",
    "importStyle": null,
    "description": "The default values to be passed to the renderer and overridden by any given object",
    "lineNumber": 20,
    "type": {
      "types": [
        "{\"fillStyle\": *, \"strokeStyle\": *, \"lineCap\": *, \"lineWidth\": *, \"lineJoin\": *, \"miterLimit\": *, \"font\": *, \"textAlign\": *, \"textBaseline\": *, \"lineDash\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 158,
    "kind": "class",
    "name": "PrimitiveComponent",
    "memberof": "src/PrimitiveComponent.js",
    "static": true,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/PrimitiveComponent.js",
    "importStyle": "{PrimitiveComponent}",
    "description": "The base class of things that may be drawn on the canvas.\nAll drawable objects should inherit from this class.\nTypically, it is unnecessary for application programmers to\ncall this directly, although they may wish to extend their own\nclasses with it.",
    "lineNumber": 42,
    "interface": false,
    "extends": [
      "micro-mvc~EventEmitter"
    ]
  },
  {
    "__docId__": 159,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#constructor",
    "access": "public",
    "description": "construct a primitive component",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "_needsDraw",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#_needsDraw",
    "access": "private",
    "description": "does the object need to be redrawn?",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "_needsRender",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#_needsRender",
    "access": "private",
    "description": "does the object need to be rendered?",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "_scaleWidth",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#_scaleWidth",
    "access": "private",
    "description": "the horizontal scale of the object. defaults to 1",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "_scaleHeight",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#_scaleHeight",
    "access": "private",
    "description": "the vertical scale of the object. defaults to 1",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "_d",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#_d",
    "access": "private",
    "description": "d is for \"displacement\": a 2D Vector object representing cartesian coordinate\nposition relative to its parent composition (or [0,0] if this is the scene composition)",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "style",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#style",
    "access": "public",
    "description": "style options for this particular object. these are standard context styles",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "_prerenderingCanvas",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#_prerenderingCanvas",
    "access": "private",
    "description": "the prerendering canvas is used to avoid performing mutliple draw operations on the\nvisible, main canvas. this minimizes the time needed to render by prerendering on a\ncanvas only as large as necessary for the object",
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 167,
    "kind": "member",
    "name": "_prerenderingContext",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#_prerenderingContext",
    "access": "private",
    "description": "the 2D context of the prerendering canvas.",
    "lineNumber": 115,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "_parent",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#_parent",
    "access": "private",
    "description": "the parent object of this object. with the exception of the scene composition itself,\nthe root of all objects ancestry should be the scene composition",
    "lineNumber": 122,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 169,
    "kind": "get",
    "name": "offset",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#offset",
    "access": "public",
    "description": "the global offset of the object on the canvas.\nthis is the sum of this object's displacement\nand all of its ancestry.",
    "lineNumber": 131,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 170,
    "kind": "get",
    "name": "needsDraw",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#needsDraw",
    "access": "public",
    "description": "returns true whenever the object needs to be re-drawn to canvas.\nwhen true, this will indicate to the parent tree of composing objects that\nthe object needs to be re-drawn on the next animation loop.\n\nobjects need to be updated when their displacement changes, or when any thing\nthat requires a rerender occurs.",
    "lineNumber": 145,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 171,
    "kind": "set",
    "name": "needsDraw",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#needsDraw",
    "access": "public",
    "description": "set to true whenever the object needs to be re-drawn to canvas.\nwhen true, this will indicate to the parent tree of composing objects that\nthe object needs to be re-drawn on the next animation loop.\n\nobjects need to be updated when their displacement changes, or when any thing\nthat requires a rerender occurs.",
    "lineNumber": 159,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 173,
    "kind": "get",
    "name": "needsRender",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#needsRender",
    "access": "public",
    "description": "returns true whenever the object's properties have changed such that\nit needs to be rendered differently\n\n1. scale change\n1. physical property change (height, width, radius, etc.)\n1. color change",
    "lineNumber": 177,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 174,
    "kind": "set",
    "name": "needsRender",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#needsRender",
    "access": "public",
    "description": "set to true whenever the object's properties have changed such that\nit needs to be rendered differently\n\n1. scale change\n1. physical property change (height, width, radius, etc.)\n1. color change",
    "lineNumber": 191,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 176,
    "kind": "get",
    "name": "scaleWidth",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#scaleWidth",
    "access": "public",
    "description": "return the horizontal scale of the object - defaults to 1",
    "lineNumber": 202,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 177,
    "kind": "set",
    "name": "scaleWidth",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#scaleWidth",
    "access": "public",
    "description": "set the horizontal scale of the object - defaults to 1",
    "lineNumber": 209,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 181,
    "kind": "get",
    "name": "scaleHeight",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#scaleHeight",
    "access": "public",
    "description": "return the vertical scale of the object - defaults to 1",
    "lineNumber": 223,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 182,
    "kind": "set",
    "name": "scaleHeight",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#scaleHeight",
    "access": "public",
    "description": "set the vertical scale of the object - defaults to 1",
    "lineNumber": 232,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "the vertical scale"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 186,
    "kind": "get",
    "name": "scale",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#scale",
    "access": "public",
    "description": "return an object containing the vertical and horizontal scale",
    "lineNumber": 246,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 187,
    "kind": "set",
    "name": "scale",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#scale",
    "access": "public",
    "description": "set the scale width and height in one go",
    "lineNumber": 257,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 190,
    "kind": "get",
    "name": "compoundScale",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#compoundScale",
    "access": "public",
    "description": "return the scale of the object, compounded with the parent object's scale",
    "lineNumber": 266,
    "type": {
      "nullable": null,
      "types": [
        "{scaleWidth: number, scaleHeight: number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 191,
    "kind": "get",
    "name": "d",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#d",
    "access": "public",
    "description": "d is for displacement - returns a vector",
    "lineNumber": 277,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 192,
    "kind": "set",
    "name": "d",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#d",
    "access": "public",
    "description": "d is for displacement - accepts a vector",
    "lineNumber": 286,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "a vector"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 194,
    "kind": "get",
    "name": "parent",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#parent",
    "access": "public",
    "description": "get the parent of the object. all objects except the scene graph should have a parent",
    "lineNumber": 294,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 195,
    "kind": "set",
    "name": "parent",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#parent",
    "access": "public",
    "description": "set the parent of the object. all objects except the scene graph should have a parent",
    "lineNumber": 303,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "a composition"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "draw",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#draw",
    "access": "public",
    "description": "draw the object to canvas, render it if necessary",
    "lineNumber": 312,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "the final canvas context where this will be drawn"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": "the offset on the canvas - optional, used for prerendering"
      }
    ],
    "return": null
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "render",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#render",
    "access": "public",
    "description": "this method must be overridden by a subclass.\n\nthe render method should be implemented by subclasses",
    "lineNumber": 363,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "pointIsInBoundingBox",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#pointIsInBoundingBox",
    "access": "public",
    "description": "check whether the point specified lies *inside* this objects bounding box",
    "lineNumber": 372,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the x coordinate"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the y coordinate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "whether the point is within the bounding box"
    }
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "pointIsInObject",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#pointIsInObject",
    "access": "public",
    "description": "check whether the point is within the object.\nthis method should be overridden by subclassess",
    "lineNumber": 390,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the x coordinate"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the y coordinate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "whether the point is in the object, as implemented by inheriting classes"
    }
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "moveToFront",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#moveToFront",
    "access": "public",
    "description": "move the object on top of other objects (render last)",
    "lineNumber": 397,
    "params": [],
    "return": null
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "moveToBack",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#moveToBack",
    "access": "public",
    "description": "move the object below the other objects (render first)",
    "lineNumber": 411,
    "params": [],
    "return": null
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "moveForward",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#moveForward",
    "access": "public",
    "description": "move the object forward in the stack (drawn later)",
    "lineNumber": 426,
    "params": [],
    "return": null
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "moveBackward",
    "memberof": "src/PrimitiveComponent.js~PrimitiveComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PrimitiveComponent.js~PrimitiveComponent#moveBackward",
    "access": "public",
    "description": "move the object backward in the stack (drawn sooner)",
    "lineNumber": 442,
    "params": [],
    "return": null
  },
  {
    "__docId__": 213,
    "kind": "file",
    "name": "src/Rectangle.js",
    "content": "import { drawRectangle } from './Renderer';\r\nimport { PrimitiveComponent } from './PrimitiveComponent';\r\n\r\n/**\r\n * A rectangle\r\n */\r\nexport class Rectangle extends PrimitiveComponent {\r\n    /**\r\n     * @param {object} options the options for the object\r\n     */\r\n    constructor(options) {\r\n        super(options);\r\n        /**\r\n         * the width of the rectangle\r\n         * @type {number} width\r\n         */\r\n        this.width = options.width || 0;\r\n\r\n        /**\r\n         * the height of the rectangle\r\n         * @type {number} height\r\n         */\r\n        this.height = options.height || 0;\r\n    }\r\n\r\n    /**\r\n     * get the bounding box of the rectangle\r\n     * @type {{top:number, left:number, bottom:number, right:number}}\r\n     */\r\n    get boundingBox() {\r\n        let offset = this.offset;\r\n        let compoundScale = this.compoundScale;\r\n        return {\r\n            top: offset.y - (this.style.lineWidth),\r\n            left: offset.x - (this.style.lineWidth),\r\n            bottom: offset.y + (compoundScale.scaleHeight * this.height) + (this.style.lineWidth),\r\n            right: offset.x + (compoundScale.scaleWidth * this.width) + (this.style.lineWidth)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * render the rectangle\r\n     * @override\r\n     */\r\n    render() {\r\n        let compoundScale = this.compoundScale;\r\n        drawRectangle((this.style.lineWidth),\r\n            (this.style.lineWidth),\r\n            this.width * compoundScale.scaleWidth,\r\n            this.height * compoundScale.scaleHeight,\r\n            this._prerenderingContext,\r\n            this.style);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/Rectangle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 214,
    "kind": "class",
    "name": "Rectangle",
    "memberof": "src/Rectangle.js",
    "static": true,
    "longname": "src/Rectangle.js~Rectangle",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Rectangle.js",
    "importStyle": "{Rectangle}",
    "description": "A rectangle",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/PrimitiveComponent.js~PrimitiveComponent"
    ]
  },
  {
    "__docId__": 215,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Rectangle.js~Rectangle#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "the options for the object"
      }
    ]
  },
  {
    "__docId__": 216,
    "kind": "member",
    "name": "width",
    "memberof": "src/Rectangle.js~Rectangle",
    "static": false,
    "longname": "src/Rectangle.js~Rectangle#width",
    "access": "public",
    "description": "the width of the rectangle",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 217,
    "kind": "member",
    "name": "height",
    "memberof": "src/Rectangle.js~Rectangle",
    "static": false,
    "longname": "src/Rectangle.js~Rectangle#height",
    "access": "public",
    "description": "the height of the rectangle",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 218,
    "kind": "get",
    "name": "boundingBox",
    "memberof": "src/Rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Rectangle.js~Rectangle#boundingBox",
    "access": "public",
    "description": "get the bounding box of the rectangle",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "{top:number, left:number, bottom:number, right:number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "render",
    "memberof": "src/Rectangle.js~Rectangle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Rectangle.js~Rectangle#render",
    "access": "public",
    "description": "render the rectangle",
    "lineNumber": 45,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 220,
    "kind": "file",
    "name": "src/Renderer.js",
    "content": "/**\r\n * Erase everything drawn on the supplied rectangle for the given context.\r\n * @param {number} x the x coordinate of the top left corner\r\n * @param {number} y the y coordinate of the top left corner\r\n * @param {number} width the x coordinate\r\n * @param {number} height the y coordinate\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n */\r\nexport function clearRect(x, y, width, height, context) {\r\n    context.clearRect(x, y, width, height);\r\n}\r\n\r\n/**\r\n * Draw a path, unclosed, with the given vertices\r\n * @param {object} vertices the path of vertices to be drawn\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the path\r\n */\r\nexport function drawPath(vertices, context, style) {\r\n    Object.assign(context, style);\r\n    context.beginPath();\r\n    context.moveTo(vertices[0].x, vertices[0].y);\r\n    for (let v = 1; v < vertices.length; v++) {\r\n        context.lineTo(vertices[v].x, vertices[v].y);\r\n    }\r\n\r\n    context.setLineDash(style.lineDash);\r\n    context.stroke();\r\n}\r\n\r\n/**\r\n * Draw a closed polygon with the given vertices\r\n * @param {object} vertices the path of vertices to be drawn\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the polygon\r\n */\r\nexport function drawPolygon(vertices, context, style) {\r\n    Object.assign(context, style);\r\n    context.beginPath();\r\n    context.moveTo(vertices[0].x, vertices[0].y);\r\n    for (let v = 1; v < vertices.length; v++) {\r\n        context.lineTo(vertices[v].x, vertices[v].y);\r\n    }\r\n    context.closePath();\r\n    context.setLineDash(style.lineDash);\r\n    context.stroke();\r\n}\r\n\r\n/**\r\n * Draw a Bezier curve\r\n * @param {object} start the starting vertex\r\n * @param {object} end the ending vertext\r\n * @param {object} c1 control point 1\r\n * @param {object} c2 control point 2\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the curve\r\n */\r\nexport function drawBezier(start, end, c1, c2, context, style) {\r\n    Object.assign(context, style);\r\n    //must `beginPath()` before `moveTo` to get correct starting position\r\n    context.beginPath();\r\n    context.moveTo(start.x, start.y);\r\n    context.bezierCurveTo(c1.x, c1.y, c2.x, c2.y, end.x, end.y);\r\n    context.setLineDash(style.lineDash);\r\n    context.stroke();\r\n    context.closePath();\r\n}\r\n\r\n/**\r\n * Draw a rectangle\r\n * @param {number} x the x coordinate of the top let corner\r\n * @param {number} y the y coordinate of the top left corner\r\n * @param {number} width the x coordinate\r\n * @param {number} height the y coordinate\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the rectangle\r\n */\r\nexport function drawRectangle(x, y, width, height, context, style) {\r\n    Object.assign(context, style);\r\n    context.rect(x, y, width, height);\r\n    context.fill();\r\n    context.setLineDash(style.lineDash);\r\n    context.stroke();\r\n}\r\n\r\n//TODO: provide support for rotation and startAngle parameters\r\n/**\r\n * Draw an ellipse\r\n * @param {number} x the x coordinate of the center of the ellipse\r\n * @param {number} y the y coordinate of the center of the ellipse\r\n * @param {number} radius the larger radius of the ellipse\r\n * @param {number} minorRadius the smaller radius of the ellipse\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the ellipse\r\n */\r\nexport function drawEllipse(x, y, radius, minorRadius, context, style) {\r\n    Object.assign(context, style);\r\n    //TODO: 2017-05-22 this is currently not supported by IE\r\n    context.ellipse(x, y, radius, minorRadius, 0, 0, 2 * Math.PI);\r\n    context.fill();\r\n    context.setLineDash(style.lineDash);\r\n    context.stroke();\r\n}\r\n\r\n/**\r\n * Draw a circle\r\n * @param {number} x the x coordinate of the center of the circle\r\n * @param {number} y the y coordinate of the center of the circle\r\n * @param {number} radius of the circle\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the circle\r\n */\r\nexport function drawCircle(x, y, radius, context, style) {\r\n    Object.assign(context, style);\r\n    context.arc(x, y, radius, 0, 2 * Math.PI);\r\n    //TODO: 2015-03-12 this is currently only supported by chrome & opera\r\n    //context.ellipse(x, y, radius, radius, 0, 0, 2 * Math.PI);\r\n    context.fill();\r\n    context.setLineDash(style.lineDash);\r\n    context.stroke();\r\n}\r\n\r\n/**\r\n * Draw text\r\n * @param {number} x the x coordinate of the top let corner\r\n * @param {number} y the y coordinate of the top left corner\r\n * @param {string} text the text to be drawn\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the text\r\n */\r\nexport function drawText(x, y, text, context, style) {\r\n    Object.assign(context, style);\r\n    context.fillText(text, x, y);\r\n    //TODO: implement stroke text if specified\r\n}\r\n\r\n/**\r\n * Draw an image\r\n * @param {number} x the x coordinate of the top let corner\r\n * @param {number} y the y coordinate of the top left corner\r\n * @param {object} image the image to be drawn to the canvas\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the image\r\n */\r\nexport function drawImage(x, y, image, context, style) {\r\n    Object.assign(context, style);\r\n    //no reason to draw 0-sized images\r\n    if (image.width > 0 && image.height > 0) {\r\n        context.drawImage(image, x, y, image.width, image.height);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/Renderer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 221,
    "kind": "function",
    "name": "clearRect",
    "memberof": "src/Renderer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Renderer.js~clearRect",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Renderer.js",
    "importStyle": "{clearRect}",
    "description": "Erase everything drawn on the supplied rectangle for the given context.",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the x coordinate of the top left corner"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the y coordinate of the top left corner"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "the x coordinate"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "the y coordinate"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "the 2D Context object for the canvas we're drawing onto"
      }
    ],
    "return": null
  },
  {
    "__docId__": 222,
    "kind": "function",
    "name": "drawPath",
    "memberof": "src/Renderer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Renderer.js~drawPath",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Renderer.js",
    "importStyle": "{drawPath}",
    "description": "Draw a path, unclosed, with the given vertices",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "vertices",
        "description": "the path of vertices to be drawn"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "the 2D Context object for the canvas we're drawing onto"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "the style options to be used when drawing the path"
      }
    ],
    "return": null
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "drawPolygon",
    "memberof": "src/Renderer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Renderer.js~drawPolygon",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Renderer.js",
    "importStyle": "{drawPolygon}",
    "description": "Draw a closed polygon with the given vertices",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "vertices",
        "description": "the path of vertices to be drawn"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "the 2D Context object for the canvas we're drawing onto"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "the style options to be used when drawing the polygon"
      }
    ],
    "return": null
  },
  {
    "__docId__": 224,
    "kind": "function",
    "name": "drawBezier",
    "memberof": "src/Renderer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Renderer.js~drawBezier",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Renderer.js",
    "importStyle": "{drawBezier}",
    "description": "Draw a Bezier curve",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "the starting vertex"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "the ending vertext"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "c1",
        "description": "control point 1"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "c2",
        "description": "control point 2"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "the 2D Context object for the canvas we're drawing onto"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "the style options to be used when drawing the curve"
      }
    ],
    "return": null
  },
  {
    "__docId__": 225,
    "kind": "function",
    "name": "drawRectangle",
    "memberof": "src/Renderer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Renderer.js~drawRectangle",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Renderer.js",
    "importStyle": "{drawRectangle}",
    "description": "Draw a rectangle",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the x coordinate of the top let corner"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the y coordinate of the top left corner"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "the x coordinate"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "the y coordinate"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "the 2D Context object for the canvas we're drawing onto"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "the style options to be used when drawing the rectangle"
      }
    ],
    "return": null
  },
  {
    "__docId__": 226,
    "kind": "function",
    "name": "drawEllipse",
    "memberof": "src/Renderer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Renderer.js~drawEllipse",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Renderer.js",
    "importStyle": "{drawEllipse}",
    "description": "Draw an ellipse",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the x coordinate of the center of the ellipse"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the y coordinate of the center of the ellipse"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "the larger radius of the ellipse"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "minorRadius",
        "description": "the smaller radius of the ellipse"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "the 2D Context object for the canvas we're drawing onto"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "the style options to be used when drawing the ellipse"
      }
    ],
    "return": null
  },
  {
    "__docId__": 227,
    "kind": "function",
    "name": "drawCircle",
    "memberof": "src/Renderer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Renderer.js~drawCircle",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Renderer.js",
    "importStyle": "{drawCircle}",
    "description": "Draw a circle",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the x coordinate of the center of the circle"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the y coordinate of the center of the circle"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "of the circle"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "the 2D Context object for the canvas we're drawing onto"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "the style options to be used when drawing the circle"
      }
    ],
    "return": null
  },
  {
    "__docId__": 228,
    "kind": "function",
    "name": "drawText",
    "memberof": "src/Renderer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Renderer.js~drawText",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Renderer.js",
    "importStyle": "{drawText}",
    "description": "Draw text",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the x coordinate of the top let corner"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the y coordinate of the top left corner"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "the text to be drawn"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "the 2D Context object for the canvas we're drawing onto"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "the style options to be used when drawing the text"
      }
    ],
    "return": null
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "drawImage",
    "memberof": "src/Renderer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Renderer.js~drawImage",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Renderer.js",
    "importStyle": "{drawImage}",
    "description": "Draw an image",
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the x coordinate of the top let corner"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the y coordinate of the top left corner"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": "the image to be drawn to the canvas"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "the 2D Context object for the canvas we're drawing onto"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "the style options to be used when drawing the image"
      }
    ],
    "return": null
  },
  {
    "__docId__": 230,
    "kind": "file",
    "name": "src/Text.js",
    "content": "import {\r\n    drawText\r\n} from './Renderer';\r\nimport {\r\n    PrimitiveComponent\r\n} from './PrimitiveComponent';\r\n\r\nimport * as TextUtils from './TextUtilities';\r\n\r\nimport * as TextDefaults from './TextDefaults';\r\n\r\n/**\r\n * A text object\r\n */\r\nexport class Text extends PrimitiveComponent {\r\n    /**\r\n     * @param {object} options the options for the text object\r\n     */\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        /**\r\n         * the text to be rendered\r\n         * @type {string}\r\n         */\r\n        this.text = options.text;\r\n\r\n        /**\r\n         * the font size at which to render the text\r\n         * @type {string}\r\n         */\r\n        this.fontSize = options.fontSize || TextDefaults.FONT_SIZE;\r\n\r\n        /**\r\n         * the font family in which to render the text\r\n         * @type {string}\r\n         */\r\n        this.fontFamily = options.fontFamily || TextDefaults.fontFamily;\r\n\r\n        /**\r\n         * the font style with which to render the text\r\n         * @type {string}\r\n         */\r\n        this.fontStyle = options.fontStyle || TextDefaults.FONT_STYLE;\r\n\r\n        /**\r\n         * the font variant in which to render the text\r\n         * @type {string}\r\n         */\r\n        this.fontVariant = options.fontVariant || TextDefaults.FONT_VARIANT;\r\n\r\n        /**\r\n         * the font weight at which to render the text\r\n         * @type {string}\r\n         */\r\n        this.fontWeight = options.fontWeight || TextDefaults.FONT_WEIGHT;\r\n\r\n        /**\r\n         * the line height of the text\r\n         * @type {string}\r\n         */\r\n        this.lineHeight = options.lineHeight || TextDefaults.LINE_HEIGHT;\r\n\r\n        /**\r\n         * the alignment with which to render the text\r\n         * @type {string}\r\n         */\r\n        this.textAlign = options.textAlign || TextDefaults.TEXT_ALIGN;\r\n\r\n        /**\r\n         * the baseline for the text\r\n         * @type {string}\r\n         */\r\n        this.textBaseline = options.textBaseline || TextDefaults.TEXT_BASELINE;\r\n\r\n        /**\r\n         * lets textMetrics getter know if it needs to update its data\r\n         * @type {boolean}\r\n         */\r\n        this._textMetricsNeedUpdate = true;\r\n\r\n        /**\r\n         * a [TextMetrics](https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics) object\r\n         * with additional height information\r\n         * @type {object}\r\n         */\r\n        this._textMetrics = null;\r\n\r\n        //TODO: write out this function for optimization\r\n        //this._updateTextMetrics(this.fontString);\r\n    }\r\n\r\n    /**\r\n     * get the longform representation\r\n     * @type {string}\r\n     */\r\n    get fontString() {\r\n        return TextUtils.formatFontString(this.fontStyle, this.fontVariant, this.fontWeight, this.fontSize, this.lineHeight, this.fontFamily);\r\n    }\r\n\r\n    /**\r\n     * compute the height data and add it to the textMetrics object from the canvas context\r\n     * @type {object}\r\n     */\r\n    get textMetrics() {\r\n        if (this._textMetricsNeedUpdate || this._textMetrics === null) {\r\n            this._updateStyle();\r\n            this._textMetrics = TextUtils.measureText(this.text, this._prerenderingContext, this.style);\r\n            Object.assign(this._textMetrics, TextUtils.getTextHeight(this.style.font));\r\n            this._textMetricsNeedUpdate = false;\r\n        }\r\n        return this._textMetrics;\r\n    }\r\n\r\n    /**\r\n     * get the bounding box of the text object\r\n     * @type {top: number, left: number, bottom: number, right: number}\r\n     */\r\n    get boundingBox() {\r\n        return {\r\n            top: this.offset.y - this.textMetrics.ascent,\r\n            left: this.offset.x,\r\n            bottom: this.offset.y + this.textMetrics.descent,\r\n            right: this.offset.x + this.textMetrics.width\r\n        };\r\n    }\r\n\r\n    /**\r\n     * update the style options for the text\r\n     * @param {object} options\r\n     */\r\n    _updateStyle(options) {\r\n        Object.assign(this.style, options, {\r\n            font: this.fontString,\r\n            textAlign: this.textAlign,\r\n            textBaseline: this.textBaseline\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * override the render function for text objects\r\n     * @override\r\n     */\r\n    render() {\r\n        this._textMetricsNeedUpdate = true;\r\n        this._updateStyle();\r\n        drawText(0, this.textMetrics.ascent, this.text, this._prerenderingContext, this.style);\r\n\r\n        /*if (this.flags.DEBUG) {\r\n            Renderer.drawPath(this._prerenderingContext, [{\r\n                x: 0,\r\n                y: this.textMetrics.ascent\r\n            }, {\r\n                x: this.textMetrics.width,\r\n                y: this.textMetrics.ascent\r\n            }], {\r\n                strokeStyle: 'Blue'\r\n            });\r\n            Renderer.drawCircle(this._prerenderingContext, 0, this.textMetrics.ascent, 3, {\r\n                strokeStyle: 'Blue',\r\n                fillStyle: 'Blue'\r\n            });\r\n        }*/\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/Text.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 231,
    "kind": "class",
    "name": "Text",
    "memberof": "src/Text.js",
    "static": true,
    "longname": "src/Text.js~Text",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/Text.js",
    "importStyle": "{Text}",
    "description": "A text object",
    "lineNumber": 15,
    "interface": false,
    "extends": [
      "src/PrimitiveComponent.js~PrimitiveComponent"
    ]
  },
  {
    "__docId__": 232,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Text.js~Text",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Text.js~Text#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "the options for the text object"
      }
    ]
  },
  {
    "__docId__": 233,
    "kind": "member",
    "name": "text",
    "memberof": "src/Text.js~Text",
    "static": false,
    "longname": "src/Text.js~Text#text",
    "access": "public",
    "description": "the text to be rendered",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 234,
    "kind": "member",
    "name": "fontSize",
    "memberof": "src/Text.js~Text",
    "static": false,
    "longname": "src/Text.js~Text#fontSize",
    "access": "public",
    "description": "the font size at which to render the text",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 235,
    "kind": "member",
    "name": "fontFamily",
    "memberof": "src/Text.js~Text",
    "static": false,
    "longname": "src/Text.js~Text#fontFamily",
    "access": "public",
    "description": "the font family in which to render the text",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 236,
    "kind": "member",
    "name": "fontStyle",
    "memberof": "src/Text.js~Text",
    "static": false,
    "longname": "src/Text.js~Text#fontStyle",
    "access": "public",
    "description": "the font style with which to render the text",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 237,
    "kind": "member",
    "name": "fontVariant",
    "memberof": "src/Text.js~Text",
    "static": false,
    "longname": "src/Text.js~Text#fontVariant",
    "access": "public",
    "description": "the font variant in which to render the text",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 238,
    "kind": "member",
    "name": "fontWeight",
    "memberof": "src/Text.js~Text",
    "static": false,
    "longname": "src/Text.js~Text#fontWeight",
    "access": "public",
    "description": "the font weight at which to render the text",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 239,
    "kind": "member",
    "name": "lineHeight",
    "memberof": "src/Text.js~Text",
    "static": false,
    "longname": "src/Text.js~Text#lineHeight",
    "access": "public",
    "description": "the line height of the text",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 240,
    "kind": "member",
    "name": "textAlign",
    "memberof": "src/Text.js~Text",
    "static": false,
    "longname": "src/Text.js~Text#textAlign",
    "access": "public",
    "description": "the alignment with which to render the text",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 241,
    "kind": "member",
    "name": "textBaseline",
    "memberof": "src/Text.js~Text",
    "static": false,
    "longname": "src/Text.js~Text#textBaseline",
    "access": "public",
    "description": "the baseline for the text",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 242,
    "kind": "member",
    "name": "_textMetricsNeedUpdate",
    "memberof": "src/Text.js~Text",
    "static": false,
    "longname": "src/Text.js~Text#_textMetricsNeedUpdate",
    "access": "private",
    "description": "lets textMetrics getter know if it needs to update its data",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 243,
    "kind": "member",
    "name": "_textMetrics",
    "memberof": "src/Text.js~Text",
    "static": false,
    "longname": "src/Text.js~Text#_textMetrics",
    "access": "private",
    "description": "a [TextMetrics](https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics) object\nwith additional height information",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 244,
    "kind": "get",
    "name": "fontString",
    "memberof": "src/Text.js~Text",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Text.js~Text#fontString",
    "access": "public",
    "description": "get the longform representation",
    "lineNumber": 97,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 245,
    "kind": "get",
    "name": "textMetrics",
    "memberof": "src/Text.js~Text",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Text.js~Text#textMetrics",
    "access": "public",
    "description": "compute the height data and add it to the textMetrics object from the canvas context",
    "lineNumber": 105,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 248,
    "kind": "get",
    "name": "boundingBox",
    "memberof": "src/Text.js~Text",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Text.js~Text#boundingBox",
    "access": "public",
    "description": "get the bounding box of the text object",
    "lineNumber": 119,
    "type": {
      "nullable": null,
      "types": [
        "top: number, left: number, bottom: number, right: number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "_updateStyle",
    "memberof": "src/Text.js~Text",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Text.js~Text#_updateStyle",
    "access": "private",
    "description": "update the style options for the text",
    "lineNumber": 132,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "render",
    "memberof": "src/Text.js~Text",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Text.js~Text#render",
    "access": "public",
    "description": "override the render function for text objects",
    "lineNumber": 145,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 252,
    "kind": "file",
    "name": "src/TextDefaults.js",
    "content": "/**\r\n * Default font size\r\n * @type {string}\r\n */\r\nexport const FONT_SIZE = '16px';\r\n\r\n/**\r\n * Default font family\r\n * @type {string}\r\n */\r\nexport const FONT_FAMILY = 'sans-serif';\r\n\r\n/**\r\n * Default font style\r\n * @type {string}\r\n */\r\nexport const FONT_STYLE = 'normal';\r\n\r\n/**\r\n * Default font variant\r\n * @type {string}\r\n */\r\nexport const FONT_VARIANT = 'normal';\r\n\r\n/**\r\n * Default font weight\r\n * @type {string}\r\n */\r\nexport const FONT_WEIGHT = 'normal';\r\n\r\n/**\r\n * Default line height\r\n * @type {string}\r\n */\r\nexport const LINE_HEIGHT = 'normal';\r\n\r\n/**\r\n * Default text alignment\r\n * @type {string}\r\n */\r\nexport const TEXT_ALIGN = 'start';\r\n\r\n/**\r\n * Default text baseline\r\n * @type {string}\r\n */\r\nexport const TEXT_BASELINE = 'alphabetic';\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/TextDefaults.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 253,
    "kind": "variable",
    "name": "FONT_SIZE",
    "memberof": "src/TextDefaults.js",
    "static": true,
    "longname": "src/TextDefaults.js~FONT_SIZE",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/TextDefaults.js",
    "importStyle": "{FONT_SIZE}",
    "description": "Default font size",
    "lineNumber": 5,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 254,
    "kind": "variable",
    "name": "FONT_FAMILY",
    "memberof": "src/TextDefaults.js",
    "static": true,
    "longname": "src/TextDefaults.js~FONT_FAMILY",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/TextDefaults.js",
    "importStyle": "{FONT_FAMILY}",
    "description": "Default font family",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 255,
    "kind": "variable",
    "name": "FONT_STYLE",
    "memberof": "src/TextDefaults.js",
    "static": true,
    "longname": "src/TextDefaults.js~FONT_STYLE",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/TextDefaults.js",
    "importStyle": "{FONT_STYLE}",
    "description": "Default font style",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 256,
    "kind": "variable",
    "name": "FONT_VARIANT",
    "memberof": "src/TextDefaults.js",
    "static": true,
    "longname": "src/TextDefaults.js~FONT_VARIANT",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/TextDefaults.js",
    "importStyle": "{FONT_VARIANT}",
    "description": "Default font variant",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 257,
    "kind": "variable",
    "name": "FONT_WEIGHT",
    "memberof": "src/TextDefaults.js",
    "static": true,
    "longname": "src/TextDefaults.js~FONT_WEIGHT",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/TextDefaults.js",
    "importStyle": "{FONT_WEIGHT}",
    "description": "Default font weight",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 258,
    "kind": "variable",
    "name": "LINE_HEIGHT",
    "memberof": "src/TextDefaults.js",
    "static": true,
    "longname": "src/TextDefaults.js~LINE_HEIGHT",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/TextDefaults.js",
    "importStyle": "{LINE_HEIGHT}",
    "description": "Default line height",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 259,
    "kind": "variable",
    "name": "TEXT_ALIGN",
    "memberof": "src/TextDefaults.js",
    "static": true,
    "longname": "src/TextDefaults.js~TEXT_ALIGN",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/TextDefaults.js",
    "importStyle": "{TEXT_ALIGN}",
    "description": "Default text alignment",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 260,
    "kind": "variable",
    "name": "TEXT_BASELINE",
    "memberof": "src/TextDefaults.js",
    "static": true,
    "longname": "src/TextDefaults.js~TEXT_BASELINE",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/TextDefaults.js",
    "importStyle": "{TEXT_BASELINE}",
    "description": "Default text baseline",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 261,
    "kind": "file",
    "name": "src/TextUtilities.js",
    "content": "/**\r\n * As many basic characters as possible to fit into a string in order to measure the height\r\n */\r\nconst ALL_CHARS = `1234567890QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm.,\\`~;:'\"!?@#$%^&*()_+={}[]|\\<>/`;\r\n\r\n/**\r\n * this technique is informed by\r\n * http://stackoverflow.com/questions/1134586/how-can-you-find-the-height-of-text-on-an-html-canvas\r\n * it's a pretty awful hack, and will not work in canvases on non-browser runtimes\r\n * @param {string} font the long form font string\r\n */\r\nexport function getTextHeight(font) {\r\n    //\r\n    //TODO: figure out how cross-browser this is\r\n\r\n    //create an element with every character in it with this font\r\n    let fontHolder = document.createElement('span');\r\n    fontHolder.innerText = ALL_CHARS;\r\n    fontHolder.style.font = font;\r\n\r\n    //create an inline-block to place after the element\r\n    let baselineRuler = document.createElement('div');\r\n    baselineRuler.style.display = 'inline-block';\r\n    baselineRuler.style.width = '1px';\r\n    baselineRuler.style.height = '0';\r\n    baselineRuler.style.verticalAlign = 'baseline';\r\n\r\n    //place them in a wrapper and add it to the body\r\n    let wrapper = document.createElement('div');\r\n    wrapper.appendChild(fontHolder);\r\n    wrapper.appendChild(baselineRuler);\r\n    wrapper.style.whiteSpace = 'nowrap';\r\n    document.body.appendChild(wrapper);\r\n\r\n    //get their bounding rectangles and...\r\n    let fontRect = fontHolder.getBoundingClientRect();\r\n    let baselineRect = baselineRuler.getBoundingClientRect();\r\n\r\n    //calculate their offset from top\r\n    let fontTop = fontRect.top + document.body.scrollTop;\r\n    let fontBottom = fontTop + fontRect.height;\r\n\r\n    let baseline = baselineRect.top + document.body.scrollTop;\r\n\r\n    document.body.removeChild(wrapper);\r\n\r\n    //ascent equals the baseline location minus text top location\r\n    let ascentFromBaseline = baseline - fontTop;\r\n\r\n    //decent equals the text bottom location minuse the baseline location\r\n    let descentFromBaseline = fontBottom - baseline;\r\n\r\n    return {\r\n        height: fontRect.height,\r\n        ascent: ascentFromBaseline,\r\n        descent: descentFromBaseline\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * format a longform font style\r\n * @param {string} fontStyle the font style\r\n * @param {string} fontVariant the font variant\r\n * @param {string} fontWeight the font weight\r\n * @param {string} fontSize the font size\r\n * @param {string} lineHeight the font height\r\n * @param {string} fontFamily the font family\r\n */\r\nexport function formatFontString(fontStyle, fontVariant, fontWeight, fontSize, lineHeight, fontFamily) {\r\n    return `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize}/${lineHeight} ${fontFamily}`;\r\n}\r\n\r\n/**\r\n * Measure the text\r\n * @param {string} text the text to be measured\r\n * @param {object} context the 2D Context object for a canvas - required for measurement to occur, but may be arbitrary\r\n * @param {object} style the style options to be used when measuring the text\r\n * @return {object} [TextMetrics](https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics) object containing info like Width\r\n */\r\nexport function measureText(text, context, style) {\r\n    Object.assign(context, style);\r\n    return context.measureText(text);\r\n}\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/TextUtilities.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 262,
    "kind": "variable",
    "name": "ALL_CHARS",
    "memberof": "src/TextUtilities.js",
    "static": true,
    "longname": "src/TextUtilities.js~ALL_CHARS",
    "access": "public",
    "export": false,
    "importPath": "canvas-compositor/src/TextUtilities.js",
    "importStyle": null,
    "description": "As many basic characters as possible to fit into a string in order to measure the height",
    "lineNumber": 4,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 263,
    "kind": "function",
    "name": "getTextHeight",
    "memberof": "src/TextUtilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/TextUtilities.js~getTextHeight",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/TextUtilities.js",
    "importStyle": "{getTextHeight}",
    "description": "this technique is informed by\nhttp://stackoverflow.com/questions/1134586/how-can-you-find-the-height-of-text-on-an-html-canvas\nit's a pretty awful hack, and will not work in canvases on non-browser runtimes",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "font",
        "description": "the long form font string"
      }
    ],
    "return": {
      "types": [
        "{\"height\": *, \"ascent\": *, \"descent\": *}"
      ]
    }
  },
  {
    "__docId__": 264,
    "kind": "function",
    "name": "formatFontString",
    "memberof": "src/TextUtilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/TextUtilities.js~formatFontString",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/TextUtilities.js",
    "importStyle": "{formatFontString}",
    "description": "format a longform font style",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fontStyle",
        "description": "the font style"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fontVariant",
        "description": "the font variant"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fontWeight",
        "description": "the font weight"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fontSize",
        "description": "the font size"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lineHeight",
        "description": "the font height"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fontFamily",
        "description": "the font family"
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "function",
    "name": "measureText",
    "memberof": "src/TextUtilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/TextUtilities.js~measureText",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/TextUtilities.js",
    "importStyle": "{measureText}",
    "description": "Measure the text",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "the text to be measured"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "the 2D Context object for a canvas - required for measurement to occur, but may be arbitrary"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "the style options to be used when measuring the text"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "[TextMetrics](https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics) object containing info like Width"
    }
  },
  {
    "__docId__": 266,
    "kind": "file",
    "name": "src/VectorPath.js",
    "content": "import {\r\n    drawPath\r\n} from './Renderer';\r\nimport {\r\n    PrimitiveComponent\r\n} from './PrimitiveComponent';\r\nimport {\r\n    Vector\r\n} from 'vectorious';\r\nimport {\r\n    Line\r\n} from './Line';\r\n\r\n//would name the file 'path', but damn near everything\r\n//relies on the filesystem 'path' module\r\n\r\n/**\r\n * An ordered set of vectors defining a path\r\n */\r\nexport class VectorPath extends PrimitiveComponent {\r\n    /**\r\n     * see PrimitiveComponent for more options\r\n     * @param {Object} options the options for the object\r\n     * @param {Object[]} options.vertices the vertices\r\n     * @param {number} options.vertices[].x the y coordinate for a vertex\r\n     * @param {number} options.vertices[].y the y coordinate for a vertex\r\n     */\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        /**\r\n         * The sequence of vertices in the path\r\n         */\r\n        this._vertices = [];\r\n        this.vertices = options.vertices || [];\r\n\r\n        //this.unscaledLineWidth = this.style.lineWidth;\r\n\r\n        /**\r\n         * A zeroed bounding box where (left, top) is (0, 0)\r\n         */\r\n        this._zeroedBoundingBox = null;\r\n    }\r\n\r\n    /**\r\n     * get the bounding box for the vertices in the path\r\n     * @type {{top:number, left: number, bottom:number, right:number}} boundingBox\r\n     * @property {number} top the coordinate of the top edge of the bounding box\r\n     * @property {number} left the coordinate of the left edge of the bounding box\r\n     * @property {number} right the coordinate of the right edge of the bounding box\r\n     * @property {number} bottom the coordinate of the bottom edge of the bounding box\r\n     */\r\n    get boundingBox() {\r\n        /**\r\n         * The bounding box zeroed\r\n         * @property {number} top always 0\r\n         * @property {number} left always 0\r\n         * @property {number} right the distance from the leftmost vector to the rightmost\r\n         * @property {number} bottom the distance from the topmost vector to the bottommost\r\n         */\r\n        this._zeroedBoundingBox = {\r\n            top: 0,\r\n            left: 0,\r\n            right: this._right - this._left,\r\n            bottom: this._bottom - this._top\r\n        };\r\n\r\n        //TODO: reimplement scaling\r\n        return {\r\n            top: this._zeroedBoundingBox.top + this.offset.y - this.style.lineWidth,\r\n            left: this._zeroedBoundingBox.left + this.offset.x - this.style.lineWidth,\r\n            bottom: this._zeroedBoundingBox.bottom + this.offset.y + this.style.lineWidth,\r\n            right: this._zeroedBoundingBox.right + this.offset.x + this.style.lineWidth\r\n        };\r\n    }\r\n\r\n    /**\r\n     * retrieve the list of vertices\r\n     * @type {Array<{x: number, y: number }>} the sequence of vertices in the path\r\n     */\r\n    get vertices() {\r\n        return this._vertices;\r\n    }\r\n\r\n    /**\r\n     * set the list of vertices\r\n     * @param {Array<{x: number, y: number }>} verts The list of vertices to be used\r\n     */\r\n    set vertices(verts) {\r\n        /**\r\n         * the list of vertices as vectorious Vectors\r\n         * @type {object[]} vertices\r\n         */\r\n        this._vertices = verts.map(v => new Vector([v.x, v.y]));\r\n\r\n        let yCoordinates = this.vertices.map(v => v.y);\r\n        let xCoordinates = this.vertices.map(v => v.x);\r\n\r\n        //uses `apply` so we can supply the list as a list of arguments\r\n        /**\r\n         * @type {number} the leftmost x-coordinate\r\n         */\r\n        this._left = Math.min.apply(null, xCoordinates);\r\n\r\n        /**\r\n         * @type {number} the topmost y-coordinate\r\n         */\r\n        this._top = Math.min.apply(null, yCoordinates);\r\n\r\n        /**\r\n         * @type {number} the rightmost x-coordinate\r\n         */\r\n        this._right = Math.max.apply(null, xCoordinates);\r\n\r\n        /**\r\n         * @type {number} the bottommost y-coordinate\r\n         */\r\n        this._bottom = Math.max.apply(null, yCoordinates);\r\n\r\n        super.d = new Vector([this._left, this._top]);\r\n\r\n        /**\r\n         * Vertices zeroed against the displacement vector\r\n         */\r\n        this._zeroedVertices = this.vertices.map(v => v.subtract(this.d));\r\n\r\n        super.needsDraw = true;\r\n        super.needsRender = true;\r\n    }\r\n\r\n    /**\r\n     * determine whether the point is in the object\r\n     * even/odd line intersection test against the outer edge of the line-width\r\n     * @param {number} x the x coordinate\r\n     * @param {number} y the y coordinate\r\n     * @return {boolean} whether or not the point is in the object\r\n     */\r\n    pointIsInObject(x, y) {\r\n        let inside = false;\r\n\r\n        //only bother with this check if we already know we're within the bounding box\r\n        if (super.pointIsInObject(x, y)) {\r\n            //create a line that travels from this point in any direction\r\n            //if it intersects the polygon an odd number of times, it is inside\r\n\r\n            //a line can be described by a vertex and a direction\r\n            let l = new Line(new Vector([x, y]), new Vector([1, 0]));\r\n\r\n            let compoundScale = this.compoundScale;\r\n            let offset = this.offset;\r\n\r\n            for (let i = 0; i < this._zeroedVertices.length; i++) {\r\n                let j = (i + 1) >= this._zeroedVertices.length ? 0 : i + 1;\r\n\r\n                //TODO: reimplement scaling\r\n                let v = _scaleVectorXY(this._zeroedVertices[i], compoundScale.scaleWidth, compoundScale.scaleHeight)\r\n                    .add(offset);\r\n\r\n                let w = _scaleVectorXY(this._zeroedVertices[j], compoundScale.scaleWidth, compoundScale.scaleHeight)\r\n                    .add(offset);\r\n\r\n                //for some reason, the below doesn't work\r\n                //let v = this._zeroedVertices[i].add(offset);\r\n\r\n                //let w = this._zeroedVertices[j].add(offset);\r\n\r\n\r\n                //TODO: determine how to account for lineWidths.\r\n                //it becomes complicated to determine which side of\r\n                //the line forms the outside edge unless you already\r\n                //know you're \"inside\" the polygon path\r\n                let edgeDirection = Vector.subtract(w, v).normalize();\r\n                let edge = new Line(v, edgeDirection);\r\n                let intersection = edge.intersectionWith(l);\r\n\r\n                //if the lines are parallel/colocated, no need to count;\r\n                if (intersection === null) {\r\n                    continue;\r\n                }\r\n\r\n                //TODO: should replace 0s with epsilons, where epsilon is\r\n                //the threshhold for considering two things as touching/intersecting\r\n                let intersectToTheRight = intersection.x - x >= Number.EPSILON;\r\n\r\n                //if the intersection is not to the right, no need to count\r\n                if (!intersectToTheRight) {\r\n                    continue;\r\n                }\r\n\r\n                let negativeX = (edgeDirection.x < -Number.EPSILON);\r\n                let negativeY = (edgeDirection.y < -Number.EPSILON);\r\n\r\n                //technically speaking, bottom and top should be reversed,\r\n                //since y=0 is the top left corner of the screen - it's\r\n                //just easier to think about it mathematically this way\r\n                let leftVertex = negativeX ? w : v;\r\n                let rightVertex = negativeX ? v : w;\r\n                let topVertex = negativeY ? w : v;\r\n                let bottomVertex = negativeY ? v : w;\r\n\r\n                let intersectWithinSegment =\r\n                    (intersection.x - leftVertex.x >= Number.EPSILON) &&\r\n                    (rightVertex.x - intersection.x >= Number.EPSILON) &&\r\n                    (intersection.y - topVertex.y >= Number.EPSILON) &&\r\n                    (bottomVertex.y - intersection.y >= Number.EPSILON);\r\n\r\n                if (intersectWithinSegment) {\r\n                    inside = !inside;\r\n                }\r\n            }\r\n        }\r\n        return inside;\r\n    }\r\n\r\n    /**\r\n     * override the render function for drawing vector paths specifically\r\n     * @override\r\n     */\r\n    render() {\r\n        let boundingBox = this.boundingBox;\r\n        let offset = this.offset;\r\n        let compoundScale = this.compoundScale;\r\n        //zero the vertices (left- and top-most x/y-values should be 0 and 0)\r\n        //TODO: reimplement scaling\r\n        let pathToDraw = this._zeroedVertices.map(vertex =>\r\n            vertex.subtract(new Vector([boundingBox.left, boundingBox.top])).add(offset));\r\n        drawPath(pathToDraw, this._prerenderingContext, this.style);\r\n    };\r\n}\r\n\r\n\r\n//for scaling a vector\r\n//TODO: reimplement scaling\r\n/**\r\n * scale the vectors\r\n * @param {object} vector the vector to scale\r\n * @param {number} scaleX the amount to scale the x component of the vector\r\n * @param {number} scaleY the amount to scale the y component of the vector\r\n */\r\nfunction _scaleVectorXY(vector, scaleX, scaleY) {\r\n    return new Vector([vector.x * scaleX, vector.y * scaleY]);\r\n}\r\n",
    "static": true,
    "longname": "/home/christopher/git/canvas-compositor/src/VectorPath.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 267,
    "kind": "class",
    "name": "VectorPath",
    "memberof": "src/VectorPath.js",
    "static": true,
    "longname": "src/VectorPath.js~VectorPath",
    "access": "public",
    "export": true,
    "importPath": "canvas-compositor/src/VectorPath.js",
    "importStyle": "{VectorPath}",
    "description": "An ordered set of vectors defining a path",
    "lineNumber": 20,
    "interface": false,
    "extends": [
      "src/PrimitiveComponent.js~PrimitiveComponent"
    ]
  },
  {
    "__docId__": 268,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/VectorPath.js~VectorPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/VectorPath.js~VectorPath#constructor",
    "access": "public",
    "description": "see PrimitiveComponent for more options",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "the options for the object"
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "options.vertices",
        "description": "the vertices"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.vertices[].x",
        "description": "the y coordinate for a vertex"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.vertices[].y",
        "description": "the y coordinate for a vertex"
      }
    ]
  },
  {
    "__docId__": 269,
    "kind": "member",
    "name": "_vertices",
    "memberof": "src/VectorPath.js~VectorPath",
    "static": false,
    "longname": "src/VectorPath.js~VectorPath#_vertices",
    "access": "private",
    "description": "The sequence of vertices in the path",
    "lineNumber": 34,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 271,
    "kind": "member",
    "name": "_zeroedBoundingBox",
    "memberof": "src/VectorPath.js~VectorPath",
    "static": false,
    "longname": "src/VectorPath.js~VectorPath#_zeroedBoundingBox",
    "access": "private",
    "description": "A zeroed bounding box where (left, top) is (0, 0)",
    "lineNumber": 42,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 272,
    "kind": "get",
    "name": "boundingBox",
    "memberof": "src/VectorPath.js~VectorPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/VectorPath.js~VectorPath#boundingBox",
    "access": "public",
    "description": "get the bounding box for the vertices in the path",
    "lineNumber": 53,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "top",
        "description": "the coordinate of the top edge of the bounding box"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "left",
        "description": "the coordinate of the left edge of the bounding box"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "right",
        "description": "the coordinate of the right edge of the bounding box"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bottom",
        "description": "the coordinate of the bottom edge of the bounding box"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "{top:number, left: number, bottom:number, right:number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 274,
    "kind": "get",
    "name": "vertices",
    "memberof": "src/VectorPath.js~VectorPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/VectorPath.js~VectorPath#vertices",
    "access": "public",
    "description": "retrieve the list of vertices",
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "Array<{x: number, y: number }>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 275,
    "kind": "set",
    "name": "vertices",
    "memberof": "src/VectorPath.js~VectorPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/VectorPath.js~VectorPath#vertices",
    "access": "public",
    "description": "set the list of vertices",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<{x: number, y: number }>"
        ],
        "spread": false,
        "optional": false,
        "name": "verts",
        "description": "The list of vertices to be used"
      }
    ]
  },
  {
    "__docId__": 277,
    "kind": "member",
    "name": "_left",
    "memberof": "src/VectorPath.js~VectorPath",
    "static": false,
    "longname": "src/VectorPath.js~VectorPath#_left",
    "access": "private",
    "description": "",
    "lineNumber": 103,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 278,
    "kind": "member",
    "name": "_top",
    "memberof": "src/VectorPath.js~VectorPath",
    "static": false,
    "longname": "src/VectorPath.js~VectorPath#_top",
    "access": "private",
    "description": "",
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 279,
    "kind": "member",
    "name": "_right",
    "memberof": "src/VectorPath.js~VectorPath",
    "static": false,
    "longname": "src/VectorPath.js~VectorPath#_right",
    "access": "private",
    "description": "",
    "lineNumber": 113,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 280,
    "kind": "member",
    "name": "_bottom",
    "memberof": "src/VectorPath.js~VectorPath",
    "static": false,
    "longname": "src/VectorPath.js~VectorPath#_bottom",
    "access": "private",
    "description": "",
    "lineNumber": 118,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 281,
    "kind": "member",
    "name": "_zeroedVertices",
    "memberof": "src/VectorPath.js~VectorPath",
    "static": false,
    "longname": "src/VectorPath.js~VectorPath#_zeroedVertices",
    "access": "private",
    "description": "Vertices zeroed against the displacement vector",
    "lineNumber": 125,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "pointIsInObject",
    "memberof": "src/VectorPath.js~VectorPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/VectorPath.js~VectorPath#pointIsInObject",
    "access": "public",
    "description": "determine whether the point is in the object\neven/odd line intersection test against the outer edge of the line-width",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the x coordinate"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the y coordinate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "whether or not the point is in the object"
    }
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "render",
    "memberof": "src/VectorPath.js~VectorPath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/VectorPath.js~VectorPath#render",
    "access": "public",
    "description": "override the render function for drawing vector paths specifically",
    "lineNumber": 219,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 284,
    "kind": "function",
    "name": "_scaleVectorXY",
    "memberof": "src/VectorPath.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/VectorPath.js~_scaleVectorXY",
    "access": "private",
    "export": false,
    "importPath": "canvas-compositor/src/VectorPath.js",
    "importStyle": null,
    "description": "scale the vectors",
    "lineNumber": 240,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "vector",
        "description": "the vector to scale"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scaleX",
        "description": "the amount to scale the x component of the vector"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scaleY",
        "description": "the amount to scale the y component of the vector"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# canvas-compositor\r\nA light, performant compositing engine for the HTML5 canvas\r\n\r\n## Getting started\r\n\r\nYou should be able to include the compiled files from the dist directory in any HTML page, which will add the `CanvasCompositor` namespace to your global scope. I like to assign it to a shorthand `cc`. \r\n\r\nYou can then start using the CanvasCompositor's scene and graphics APIs by instantiating it with a canvas: \r\n\r\n```\r\nlet cc = CanvasCompositor;\r\nlet _cc = new cc.Compositor(document.getElementById('myCanvas'));\r\n```\r\n\r\nOur `_cc` variable will expose a variety of classes for drawing primitives (e.g.: `Path`, `Rectangle`, `Ellipse`, `Text`, etc.) which are used to build `Composition`s. Each of these types of objects extends the `PrimitiveComponent` class, which in turn extends the `EventEmitter` class from the `micro-mvc` dependency. \r\n\r\nThe `_cc` variable will have a `scene` property. If you are only drawing pixels to canvas, this property is unnecessary, but if you intend to have any kind of animated or layered interactions, this object will be incredibly important. \r\n\r\nThe `scene` property is the entry point to your scene graph. It is an instance of `Composition` (which is also exposed, and can be extended freely). `Composition`s have `children` - the order of the `scene`'s `children` determines the order in which they are drawn. \r\n\r\n`Composition`s like `scene` can have children added to them through the `addChild` or `addChildren` method. The children can be `Composition`s or any other inheritor of the `PrimitiveComponent` class. \r\n\r\n`Composition`s and `PrimitiveComponent`s, in conjunction with `Rectangle`s, `Ellipse`s, `Text` etc., comprise an implementation of the [Composite Pattern](http://en.wikipedia.org/wiki/Composite_pattern) - thus, \"canvas-compositor\". \r\n\r\n[View the demo here](https://christophergorexyz.github.io/canvas-compositor/demo/) \r\n\r\n## Dependencies\r\n\r\n- [vectorious](https://www.npmjs.com/package/vectorious) \r\n    - the `Vector` class exposed by vectorious is used heavily throughout canvas-compositor \r\n- [micro-mvc](https://www.npmjs.com/package/micro-mvc) \r\n    - the `EventEmitter` class exposed by micro-mvc is the basis of canvas-compositor's event system \r\n\r\n## Documentation\r\n\r\nDocumentation has been generated by [ESDoc](https://esdoc.org/) and can be found on github at [https://christophergorexyz.github.io/canvas-compositor/](https://christophergorexyz.github.io/canvas-compositor/)\r\n\r\n## Tests\r\n\r\nMocha tests are in-development. \r\n",
    "longname": "/home/christopher/git/canvas-compositor/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n    \"name\": \"canvas-compositor\",\r\n    \"version\": \"3.0.1\",\r\n    \"description\": \"a light and performant canvas compositing engine\",\r\n    \"main\": \"lib/CanvasCompositor.js\",\r\n    \"scripts\": {\r\n        \"prepare\": \"npm run build\",\r\n        \"build\": \"esdoc && babel src/ -d lib/ -D -s && browserify src/Compositor.js -s CanvasCompositor -d -t [ babelify ] | uglifyjs > dist/canvas-compositor.min.js\"\r\n    },\r\n    \"keywords\": [\r\n        \"2d\",\r\n        \"canvas\",\r\n        \"compositing\"\r\n    ],\r\n    \"author\": \"Christopher J Gore\",\r\n    \"repository\": {\r\n        \"type\": \"git\",\r\n        \"url\": \"git@github.com:christophergorexyz/canvas-compositor.git\"\r\n    },\r\n    \"license\": \"MIT\",\r\n    \"devDependencies\": {\r\n        \"@babel/cli\": \"^7.7.5\",\r\n        \"@babel/core\": \"^7.7.5\",\r\n        \"@babel/preset-env\": \"^7.7.6\",\r\n        \"@babel/runtime\": \"^7.7.6\",\r\n        \"babelify\": \"^10.0.0\",\r\n        \"browserify\": \"^16.5.0\",\r\n        \"esdoc\": \"^1.1.0\",\r\n        \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\r\n        \"esdoc-standard-plugin\": \"^1.0.0\",\r\n        \"mocha\": \"^6.2.2\",\r\n        \"uglify-js\": \"^3.7.2\"\r\n    },\r\n    \"dependencies\": {\r\n        \"micro-mvc\": \"^1.3.2\",\r\n        \"vectorious\": \"^5.5.0\"\r\n    },\r\n    \"babel\": {\r\n        \"presets\": [\r\n            \"@babel/env\"\r\n        ]\r\n    },\r\n    \"esdoc\": {\r\n        \"source\": \"./src\",\r\n        \"destination\": \"./docs\",\r\n        \"plugins\": [\r\n            {\r\n                \"name\": \"esdoc-ecmascript-proposal-plugin\",\r\n                \"option\": {\r\n                    \"all\": true\r\n                }\r\n            },\r\n            {\r\n                \"name\": \"esdoc-standard-plugin\",\r\n                \"option\": {\r\n                    \"all\": true\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
    "longname": "/home/christopher/git/canvas-compositor/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]