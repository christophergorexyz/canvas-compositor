{"version":3,"sources":["../src/CanvasCompositor.js"],"names":["DEFAULT_TARGET_FPS","EVENTS","MOUSEUP","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","CLICK","CanvasCompositor","canvas","_canvas","_context","getContext","style","window","getComputedStyle","_rect","getBoundingClientRect","_mouseX","_mouseY","borderLeft","getPropertyValue","parseFloat","paddingLeft","_leftPadding","borderTop","paddingTop","_topPadding","_currentTime","_lastFrameTimestamp","_lastRenderTime","_targetObject","_scene","Composition","_bindEvents","_eventRegistry","onmouseup","onmousedown","onmousemove","onmouseout","onclick","_animationLoop","_framerate","requestAnimationFrame","bind","Date","scene","needsDraw","Renderer","clearRect","width","height","draw","framerate","parseInt","eventType","callback","push","index","indexOf","splice","addEventListener","_handleMouseDown","_handleMouseUp","_handleMouseMove","_handleMouseOut","_handleClick","e","preventDefault","x","offsetX","y","offsetY","canvasX","canvasY","clickedObject","childAt","children","c","draggable","objects","filter","o","start","end","c1","c2","drawBezier","val","init"],"mappings":"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","sourcesContent":["import {\n    DEFAULTS,\n    Renderer\n} from './Renderer';\nimport {\n    Composition\n} from './Composition';\nimport {\n    PrimitiveComponent\n} from './PrimitiveComponent';\nimport {\n    Circle\n} from './Circle';\nimport {\n    Ellipse\n} from './Ellipse';\nimport {\n    Rectangle\n} from './Rectangle';\nimport {\n    Line\n} from './Line';\nimport {\n    VectorPath\n} from './VectorPath';\nimport {\n    Bezier\n} from './Bezier';\nimport {\n    Image\n} from './Image';\nimport {\n    Text\n} from './Text';\n\n//const FPS_EPSILON = 10; // +/- 10ms for animation loop to determine if enough time has passed to render\nconst DEFAULT_TARGET_FPS = 1000 / 60; //amount of time that must pass before rendering\n\nconst EVENTS = {\n    MOUSEUP: 'onmouseup',\n    MOUSEDOWN: 'onmousedown',\n    MOUSEMOVE: 'onmousemove',\n    MOUSEOUT: 'onmouseout',\n    CLICK: 'onclick'\n};\n\n/**\n * The CanvasCompositor class is the entry-point to usage of the `canvas-compositor`.\n * The application programmer is expected to hand over low-level control of the canvas\n * context to the high-level classes and methods exposed by CanvasCompositor.\n *\n * The CanvasCompositor class establishes an event dispatcher, animation loop, and scene graph for\n * compositions.\n */\nclass CanvasCompositor {\n    /**\n     * The CanvasCompositor class establishes an event dispatcher, animation loop, and scene graph for\n     * compositions\n     *\n     * @param {object} canvas This should be a canvas, either from the DOM or an equivalent API\n     *\n     * @example\n     * let cc = new CanvasCompositor(document.getElementById('myCanvas'));\n     */\n    constructor(canvas) {\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n\n        //acquire the padding on the canvas – this is necessary to properly\n        //locate the mouse position\n        //TODO: determine if border-box affects this, and adjust accordingly\n        let style = window.getComputedStyle(this._canvas);\n\n        this._rect = canvas.getBoundingClientRect();\n        this._mouseX = null;\n        this._mouseY = null;\n\n        let borderLeft = style.getPropertyValue('border-left') ? parseFloat(style.getPropertyValue('border-left')) : 0;\n        let paddingLeft = style.getPropertyValue('padding-left') ? parseFloat(style.getPropertyValue('padding-left')) : 0;\n\n        this._leftPadding = borderLeft + paddingLeft;\n\n        let borderTop = style.getPropertyValue('border-top') ? parseFloat(style.getPropertyValue('border-top')) : 0;\n        let paddingTop = style.getPropertyValue('padding-top') ? parseFloat(style.getPropertyValue('padding-top')) : 0;\n\n        this._topPadding = borderTop + paddingTop;\n\n        this._currentTime = 0;\n        this._lastFrameTimestamp = 0;\n        this._lastRenderTime = 0;\n\n        this._targetObject = null;\n\n        this._scene = new Composition(this.canvas);\n\n        this._bindEvents();\n\n        this._eventRegistry = {\n            onmouseup: [],\n            onmousedown: [],\n            onmousemove: [],\n            onmouseout: [],\n            onclick: []\n        };\n\n        this._animationLoop();\n        this._framerate = 0;\n    }\n\n    //TODO: expose the framerate\n    set framerate(val) {\n        this._framerate = val;\n    }\n\n    get framerate() {\n        //var framerateUpdatedEvent = new Event();\n        return this._framerate;\n    }\n\n    //TODO: multiple target objects? in reverse order of render? in order of composition?\n    /**\n     * the object currently selected for interaction\n     * @type {object}\n     */\n    get targetObject() {\n        return this._targetObject;\n    }\n    /**\n     * the object currently selected for interaction\n     * @param {object} val\n     * @type {object}\n     */\n    set targetObject(val) {\n        this._targetObject = val;\n    }\n\n    /**\n     * the root of the scene graph. add primitives to this to compose an image\n     * @type {object}\n     */\n    get scene() {\n        return this._scene;\n    }\n\n    /**\n     * get the X position of the mouse on the canvas\n     * @type {number}\n     */\n    get mouseX() {\n        return this._mouseX;\n    }\n\n    /**\n     * get the Y position of the mouse on the canvas\n     * @type {number}\n     */\n    get mouseY() {\n        return this._mouseY;\n    }\n\n    /**\n     * The animation loop for this instance of CanvasCompositor.\n     * Upon receipt of the animation frame from `requestAnimationFrame`, the loop will check\n     * whether enough time has passed to redraw for the target framerate.\n     * It will only draw if somewhere along the scene graph, an object needs updating.\n     * There is no need to invoke this directly, the constructor will do it.\n     */\n    _animationLoop() {\n        window.requestAnimationFrame(this._animationLoop.bind(this));\n        this._currentTime = +new Date();\n        //set maximum of 60 fps and only redraw if necessary\n        if ( /*this._currentTime - this._lastFrameTimestamp >= this._targetFPS &&*/ this.scene.needsDraw) {\n            this._lastRenderTime = +new Date();\n            Renderer.clearRect(0, 0, this._canvas.width, this._canvas.height, this._context);\n            this.scene.draw(this._context);\n        }\n        this.framerate = parseInt(1000 / (this._currentTime - this._lastFrameTimestamp));\n        this._lastFrameTimestamp = +new Date();\n\n    }\n\n    /**\n     * add an event to the event registry\n     *\n     * @param {string} eventType the name of the type of event\n     * @param {function} callback the callback to be triggered when the event occurs\n     */\n    registerEvent(eventType, callback) {\n        if (this._eventRegistry[eventType]) {\n            this._eventRegistry[eventType].push(callback);\n        }\n    }\n\n    /**\n     * remove an event to the event registry\n     *\n     * @param {string} eventType the name of the type of event\n     * @param {function} callback the callback to be removed from the event\n     * @return {function} the callback that was removed\n     */\n    removeEvent(eventType, callback) {\n        if (this._eventRegistry[eventType]) {\n            let index = this._eventRegistry[eventType].indexOf(callback);\n            if (index >= 0) {\n                return this._eventRegistry[eventType].splice(index, 1);\n            }\n        }\n    }\n\n    /**\n     * attach interaction events to the canvas. the canvas compositor dispatches\n     * events to relevant objects through bridges to the scene graph\n     */\n    _bindEvents() {\n        //TODO: reimplement touch events?\n        //must bind to `this` to retain reference\n        this._canvas.addEventListener('mousedown', this._handleMouseDown.bind(this));\n        this._canvas.addEventListener('mouseup', this._handleMouseUp.bind(this));\n        this._canvas.addEventListener('mousemove', this._handleMouseMove.bind(this));\n        this._canvas.addEventListener('mouseout', this._handleMouseOut.bind(this));\n        this._canvas.addEventListener('click', this._handleClick.bind(this));\n    }\n\n    /**\n     * bridge the mouse down event on the canvas to the\n     * the objects in the scene graph\n     */\n    _handleMouseDown(e) {\n        e.preventDefault();\n\n        let x = e.offsetX - this._leftPadding;\n        let y = e.offsetY - this._topPadding;\n\n        //pass through x and y to propagated events\n        e.canvasX = x;\n        e.canvasY = y;\n\n        for (let callback of this._eventRegistry[EVENTS.MOUSEDOWN]) {\n            callback(e);\n        };\n\n        let clickedObject = this.scene.childAt(x, y);\n\n        if (clickedObject && clickedObject.onmousedown) {\n            clickedObject.onmousedown(e);\n        }\n    }\n\n    /**\n     * bridge the mouse up event on the canvas to the\n     * the objects in the scene graph\n     */\n    _handleMouseUp(e) {\n        e.preventDefault();\n\n        let x = e.offsetX - this._leftPadding;\n        let y = e.offsetY - this._topPadding;\n\n        //pass through x and y to propagated events\n        e.canvasX = x;\n        e.canvasY = y;\n\n        for (let c of this.scene.children) {\n            if (c.draggable && c.onmouseup) {\n                c.onmouseup(e);\n            }\n        }\n\n        for (let callback of this._eventRegistry[EVENTS.MOUSEUP]) {\n            callback(e);\n        }\n\n        let clickedObject = this.scene.childAt(x, y);\n\n        if (clickedObject && clickedObject.onmouseup) {\n            clickedObject.onmouseup(e);\n        }\n    };\n\n    /**\n     * bridge the mouse move event on the canvas to the\n     * the objects in the scene graph\n     */\n    _handleMouseMove(e) {\n        e.preventDefault();\n        this._mouseX = e.offsetX - this._leftPadding;\n        this._mouseY = e.offsetY - this._topPadding;\n\n        let objects = this.scene.children.filter((c) => !!(c.onmousemove));\n\n        for (let callback of this._eventRegistry[EVENTS.MOUSEMOVE]) {\n            callback(e);\n        }\n\n        for (let o of objects) {\n            o.onmousemove(e);\n        }\n    };\n\n    /**\n     * bridge the click event on the canvas to the\n     * the objects in the scene graph\n     */\n    _handleClick(e) {\n        e.preventDefault();\n\n        let x = e.offsetX - this._leftPadding;\n        let y = e.offsetY - this._topPadding;\n\n        //pass through x and y to propagated events\n        e.canvasX = x;\n        e.canvasY = y;\n\n        //TODO: FF doesn't get this\n        let objects = this.scene.children.filter((c) => !!(c.onclick));\n\n        for (let callback of this._eventRegistry[EVENTS.CLICK]) {\n            callback(e);\n        }\n\n        for (let o of objects) {\n            o.onclick(e);\n        }\n    };\n\n    /**\n     * bridge the mouse out event on the canvas to the\n     * the objects in the scene graph\n     */\n    _handleMouseOut(e) {\n        e.preventDefault();\n\n        let objects = this.scene.children.filter((c) => !!(c.onmouseout));\n\n        for (let o of objects) {\n            o.onmouseout(e);\n        };\n\n        for (let callback of this._eventRegistry[EVENTS.MOUSEOUT]) {\n            callback(e);\n        };\n    };\n\n    drawBezier(start, end, c1, c2, style) {\n        Renderer.drawBezier(start, end, c1, c2, this._context, style);\n    }\n}\n\n/**\n * The initialization function\n */\n\nexport function init(canvas) {\n    return new CanvasCompositor(canvas);\n}\n\nexport {\n    Renderer,\n    PrimitiveComponent,\n    Composition,\n    Circle,\n    Ellipse,\n    Rectangle,\n    Line,\n    VectorPath,\n    Bezier,\n    Image,\n    Text,\n    DEFAULTS\n}\n"],"file":"CanvasCompositor.js"}