{"version":3,"sources":["../src/CanvasCompositor.js"],"names":["DEFAULT_TARGET_FPS","EPSILON","Number","EVENTS","MOUSEUP","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","CLICK","KEYDOWN","KEYUP","KEYPRESS","CanvasCompositor","canvas","_canvas","_context","getContext","style","window","getComputedStyle","_mouseX","_mouseY","borderLeft","getPropertyValue","parseFloat","paddingLeft","_leftPadding","borderTop","paddingTop","_topPadding","_currentTime","_lastFrameTimestamp","_lastRenderTime","_targetObject","_scene","Composition","_bindEvents","_animationLoop","_framerate","requestAnimationFrame","bind","Date","scene","needsDraw","Renderer","clearRect","width","height","draw","parseInt","_cc","addEventListener","e","dispatchEvent","_handleMouseDown","_handleMouseMove","_handleMouseUp","_handleMouseOut","_handleClick","preventDefault","x","offsetX","y","offsetY","canvasX","canvasY","clickedObject","childAt","children","c","val","EventEmitter","init"],"mappings":"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","sourcesContent":["import {\n    DEFAULTS,\n    Renderer\n} from './Renderer';\nimport {\n    Composition\n} from './Composition';\nimport {\n    PrimitiveComponent\n} from './PrimitiveComponent';\nimport {\n    Circle\n} from './Circle';\nimport {\n    Ellipse\n} from './Ellipse';\nimport {\n    Rectangle\n} from './Rectangle';\nimport {\n    Line\n} from './Line';\nimport {\n    VectorPath\n} from './VectorPath';\nimport {\n    Bezier\n} from './Bezier';\nimport {\n    Image\n} from './Image';\nimport {\n    Text\n} from './Text';\n\nimport {\n    EventEmitter\n} from 'micro-mvc';\n\n//const FPS_EPSILON = 10; // +/- 10ms for animation loop to determine if enough time has passed to render\nconst DEFAULT_TARGET_FPS = 1000 / 60; //amount of time that must pass before rendering\n\nexport const EPSILON = Number.EPSILON;\n\nexport const EVENTS = {\n    MOUSEUP: 'mouseup',\n    MOUSEDOWN: 'mousedown',\n    MOUSEMOVE: 'mousemove',\n    MOUSEOUT: 'mouseout',\n    CLICK: 'click',\n    KEYDOWN: 'keydown',\n    KEYUP: 'keyup',\n    KEYPRESS: 'keypress'\n};\n\n/**\n * The CanvasCompositor class is the entry-point to usage of the `canvas-compositor`.\n * The application programmer is expected to hand over low-level control of the canvas\n * context to the high-level classes and methods exposed by CanvasCompositor.\n *\n * The CanvasCompositor class establishes an event dispatcher, animation loop, and scene graph for\n * compositions.\n */\nclass CanvasCompositor extends EventEmitter {\n    /**\n     * The CanvasCompositor class establishes an event dispatcher, animation loop, and scene graph for\n     * compositions\n     *\n     * @param {object} canvas This should be a canvas, either from the DOM or an equivalent API\n     *\n     * @example\n     * let cc = new CanvasCompositor(document.getElementById('myCanvas'));\n     */\n    constructor(canvas) {\n        super();\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n\n        //acquire the padding on the canvas â€“ this is necessary to properly\n        //locate the mouse position\n        //TODO: determine if border-box affects this, and adjust accordingly\n        let style = window.getComputedStyle(this._canvas);\n\n        this._mouseX = null;\n        this._mouseY = null;\n\n        let borderLeft = style.getPropertyValue('border-left') ? parseFloat(style.getPropertyValue('border-left')) : 0;\n        let paddingLeft = style.getPropertyValue('padding-left') ? parseFloat(style.getPropertyValue('padding-left')) : 0;\n\n        this._leftPadding = borderLeft + paddingLeft;\n\n        let borderTop = style.getPropertyValue('border-top') ? parseFloat(style.getPropertyValue('border-top')) : 0;\n        let paddingTop = style.getPropertyValue('padding-top') ? parseFloat(style.getPropertyValue('padding-top')) : 0;\n\n        this._topPadding = borderTop + paddingTop;\n\n        this._currentTime = 0;\n        this._lastFrameTimestamp = 0;\n        this._lastRenderTime = 0;\n\n        this._targetObject = null;\n\n        this._scene = new Composition(this.canvas);\n\n        this._bindEvents();\n\n        this._animationLoop();\n        this._framerate = 0;\n    }\n\n    get framerate() {\n        //var framerateUpdatedEvent = new Event();\n        return this._framerate;\n    }\n\n    //TODO: multiple target objects? in reverse order of render? in order of composition?\n    /**\n     * the object currently selected for interaction\n     * @type {object}\n     */\n    get targetObject() {\n        return this._targetObject;\n    }\n    /**\n     * the object currently selected for interaction\n     * @param {object} val\n     * @type {object}\n     */\n    set targetObject(val) {\n        this._targetObject = val;\n    }\n\n    /**\n     * the root of the scene graph. add primitives to this to compose an image\n     * @type {object}\n     */\n    get scene() {\n        return this._scene;\n    }\n\n    /**\n     * get the X position of the mouse on the canvas\n     * @type {number}\n     */\n    get mouseX() {\n        return this._mouseX;\n    }\n\n    /**\n     * get the Y position of the mouse on the canvas\n     * @type {number}\n     */\n    get mouseY() {\n        return this._mouseY;\n    }\n\n    /**\n     * The animation loop for this instance of CanvasCompositor.\n     * Upon receipt of the animation frame from `requestAnimationFrame`, the loop will check\n     * whether enough time has passed to redraw for the target framerate.\n     * It will only draw if somewhere along the scene graph, an object needs updating.\n     * There is no need to invoke this directly, the constructor will do it.\n     */\n    _animationLoop() {\n        window.requestAnimationFrame(this._animationLoop.bind(this));\n        this._currentTime = +new Date();\n        //set maximum of 60 fps and only redraw if necessary\n        if ( /*this._currentTime - this._lastFrameTimestamp >= this._targetFPS &&*/ this.scene.needsDraw) {\n            this._lastRenderTime = +new Date();\n            Renderer.clearRect(0, 0, this._canvas.width, this._canvas.height, this._context);\n            this.scene.draw(this._context);\n        }\n        this._framerate = parseInt(1000 / (this._currentTime - this._lastFrameTimestamp));\n        this._lastFrameTimestamp = +new Date();\n\n    }\n\n    /**\n     * attach interaction events to the canvas. the canvas compositor dispatches\n     * events to relevant objects through bridges to the scene graph\n     */\n    _bindEvents() {\n        //must bind to `this` to retain reference\n\n        let _cc = this;\n        this._canvas.addEventListener('mousedown', (e) => {\n            _cc.dispatchEvent(e);\n        });\n\n        this._canvas.addEventListener('mousemove', (e) => {\n            _cc.dispatchEvent(e);\n        });\n        this._canvas.addEventListener('mouseup', (e) => {\n            _cc.dispatchEvent(e);\n        });\n        this._canvas.addEventListener('mouseout', (e) => {\n            _cc.dispatchEvent(e);\n        });\n        this._canvas.addEventListener('click', (e) => {\n            _cc.dispatchEvent(e);\n        });\n\n        this.addEventListener('mousedown', this._handleMouseDown);\n        this.addEventListener('mousemove', this._handleMouseMove);\n        this.addEventListener('mouseup', this._handleMouseUp);\n        this.addEventListener('mouseout', this._handleMouseOut);\n        this.addEventListener('click', this._handleClick);\n    }\n\n    /**\n     * bridge the mouse down event on the canvas to the\n     * the objects in the scene graph\n     */\n    _handleMouseDown(e) {\n        e.preventDefault();\n\n        let x = e.offsetX - this._leftPadding;\n        let y = e.offsetY - this._topPadding;\n\n        //pass through x and y to propagated events\n        e.canvasX = x;\n        e.canvasY = y;\n\n        let clickedObject = this.scene.childAt(x, y);\n\n        if (clickedObject) {\n            clickedObject.dispatchEvent(e);\n        }\n    }\n\n    /**\n     * bridge the mouse up event on the canvas to the\n     * the objects in the scene graph\n     */\n    _handleMouseUp(e) {\n        e.preventDefault();\n\n        let x = e.offsetX - this._leftPadding;\n        let y = e.offsetY - this._topPadding;\n\n        //pass through x and y to propagated events\n        e.canvasX = x;\n        e.canvasY = y;\n\n        for (let c of this.scene.children) {\n            c.dispatchEvent(e);\n        }\n\n        let clickedObject = this.scene.childAt(x, y);\n\n        if (clickedObject) {\n            clickedObject.dispatchEvent(e);\n        }\n    };\n\n    /**\n     * bridge the mouse move event on the canvas to the\n     * the objects in the scene graph\n     */\n    _handleMouseMove(e) {\n        e.preventDefault();\n        this._mouseX = e.offsetX - this._leftPadding;\n        this._mouseY = e.offsetY - this._topPadding;\n\n        for (let c of this.scene.children) {\n            c.dispatchEvent(e)\n        }\n    };\n\n    /**\n     * bridge the click event on the canvas to the\n     * the objects in the scene graph\n     */\n    _handleClick(e) {\n        e.preventDefault();\n\n        let x = e.offsetX - this._leftPadding;\n        let y = e.offsetY - this._topPadding;\n\n        //pass through x and y to propagated events\n        e.canvasX = x;\n        e.canvasY = y;\n\n        let clickedObject = this.scene.childAt(x, y);\n        if (clickedObject) {\n            clickedObject.dispatchEvent(e);\n        }\n    };\n\n    /**\n     * bridge the mouse out event on the canvas to the\n     * the objects in the scene graph\n     */\n    _handleMouseOut(e) {\n        e.preventDefault();\n\n        for (let c of this.scene.children) {\n            c.dispatchEvent(e);\n        };\n    };\n}\n\n/**\n * The initialization function\n */\n\nexport function init(canvas) {\n    return new CanvasCompositor(canvas);\n}\n\nexport {\n    Renderer,\n    PrimitiveComponent,\n    Composition,\n    Circle,\n    Ellipse,\n    Rectangle,\n    Line,\n    VectorPath,\n    Bezier,\n    Image,\n    Text,\n    DEFAULTS\n}\n"],"file":"CanvasCompositor.js"}