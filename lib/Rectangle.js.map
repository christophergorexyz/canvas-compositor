{"version":3,"sources":["../src/Rectangle.js"],"names":["Rectangle","options","width","height","compoundScale","style","lineWidth","scaleWidth","scaleHeight","_prerenderingContext","offset","top","y","left","x","bottom","right","PrimitiveComponent"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;AAEA;;;IAGaA,S;;;;;AACT;;;AAGA,qBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACjB,mFAAMA,OAAN;AACA;;;;;AAIA,UAAKC,KAAL,GAAaD,OAAO,CAACC,KAAR,IAAiB,CAA9B;AAEA;;;;;AAIA,UAAKC,MAAL,GAAcF,OAAO,CAACE,MAAR,IAAkB,CAAhC;AAZiB;AAapB;AAED;;;;;;;;;AAeA;;;;6BAIS;AACL,UAAIC,aAAa,GAAG,KAAKA,aAAzB;AACA,mCAAe,KAAKC,KAAL,CAAWC,SAA1B,EACK,KAAKD,KAAL,CAAWC,SADhB,EAEI,KAAKJ,KAAL,GAAaE,aAAa,CAACG,UAF/B,EAGI,KAAKJ,MAAL,GAAcC,aAAa,CAACI,WAHhC,EAII,KAAKC,oBAJT,EAKI,KAAKJ,KALT;AAMH;;;wBAvBiB;AACd,UAAIK,MAAM,GAAG,KAAKA,MAAlB;AACA,UAAIN,aAAa,GAAG,KAAKA,aAAzB;AACA,aAAO;AACHO,QAAAA,GAAG,EAAED,MAAM,CAACE,CAAP,GAAY,KAAKP,KAAL,CAAWC,SADzB;AAEHO,QAAAA,IAAI,EAAEH,MAAM,CAACI,CAAP,GAAY,KAAKT,KAAL,CAAWC,SAF1B;AAGHS,QAAAA,MAAM,EAAEL,MAAM,CAACE,CAAP,GAAYR,aAAa,CAACI,WAAd,GAA4B,KAAKL,MAA7C,GAAwD,KAAKE,KAAL,CAAWC,SAHxE;AAIHU,QAAAA,KAAK,EAAEN,MAAM,CAACI,CAAP,GAAYV,aAAa,CAACG,UAAd,GAA2B,KAAKL,KAA5C,GAAsD,KAAKG,KAAL,CAAWC;AAJrE,OAAP;AAMH;;;;EAhC0BW,uC","sourcesContent":["import { drawRectangle } from './Renderer';\r\nimport { PrimitiveComponent } from './PrimitiveComponent';\r\n\r\n/**\r\n * A rectangle\r\n */\r\nexport class Rectangle extends PrimitiveComponent {\r\n    /**\r\n     * @param {object} options the options for the object\r\n     */\r\n    constructor(options) {\r\n        super(options);\r\n        /**\r\n         * the width of the rectangle\r\n         * @type {number} width\r\n         */\r\n        this.width = options.width || 0;\r\n\r\n        /**\r\n         * the height of the rectangle\r\n         * @type {number} height\r\n         */\r\n        this.height = options.height || 0;\r\n    }\r\n\r\n    /**\r\n     * get the bounding box of the rectangle\r\n     * @type {{top:number, left:number, bottom:number, right:number}}\r\n     */\r\n    get boundingBox() {\r\n        let offset = this.offset;\r\n        let compoundScale = this.compoundScale;\r\n        return {\r\n            top: offset.y - (this.style.lineWidth),\r\n            left: offset.x - (this.style.lineWidth),\r\n            bottom: offset.y + (compoundScale.scaleHeight * this.height) + (this.style.lineWidth),\r\n            right: offset.x + (compoundScale.scaleWidth * this.width) + (this.style.lineWidth)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * render the rectangle\r\n     * @override\r\n     */\r\n    render() {\r\n        let compoundScale = this.compoundScale;\r\n        drawRectangle((this.style.lineWidth),\r\n            (this.style.lineWidth),\r\n            this.width * compoundScale.scaleWidth,\r\n            this.height * compoundScale.scaleHeight,\r\n            this._prerenderingContext,\r\n            this.style);\r\n    }\r\n}\r\n"],"file":"Rectangle.js"}