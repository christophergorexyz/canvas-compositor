{"version":3,"file":"ellipse.js","names":["Ellipse","options","radius","minorRadius","offset","scale","compoundScale","lineWidth","style","top","y","scaleHeight","left","x","scaleWidth","bottom","right","drawEllipse","_prerenderingContext","a","b","c1","c2","PrimitiveComponent"],"sources":["../../src/context-2d/ellipse.mjs"],"sourcesContent":["import { drawEllipse } from './renderer.mjs';\nimport PrimitiveComponent from './primitive-component.mjs';\n\n/**\n * An ellipse\n */\nexport default class Ellipse extends PrimitiveComponent {\n  /**\n   * @param {object} options options for the ellipse\n   * @param {number} options.radius the major (horizontal) radius of the ellipse\n   * @param {number} options.minorRadius the minor (vertical) radius of the ellipse\n   */\n  constructor(options) {\n    super(options);\n    /**\n     * the major radius (horizontal) of the ellipse\n     * @type {number}\n     */\n    this.radius = options.radius || 0;\n\n    /**\n     *  the minor radius (vertical) of the ellipse\n     * @type {number}\n     */\n    this.minorRadius = options.minorRadius || this.radius || 0;\n  }\n\n  /**\n   * the bounding box for the ellipse\n   * @type {{top: number, left: number, bottom: number, right: number}}\n   */\n  get boundingBox() {\n    let offset = this.offset;\n    let scale = this.compoundScale;\n    let lineWidth = this.style.lineWidth;\n    return {\n      top: offset.y -\n        ((this.minorRadius * scale.scaleHeight) + lineWidth),\n      left: offset.x -\n        ((this.radius * scale.scaleWidth) + lineWidth),\n      bottom: offset.y +\n        (this.minorRadius * scale.scaleHeight) + lineWidth,\n      right: offset.x +\n        (this.radius * scale.scaleWidth) + lineWidth\n    };\n  }\n\n  /**\n   * override the render function specifically for ellipses\n   * @override\n   */\n  render() {\n    let scale = this.compoundScale;\n    let lineWidth = this.style.lineWidth;\n    //TODO: work out scaling of major/minor radius\n    //this doesn't make sense\n    drawEllipse(\n      (this.radius * scale.scaleWidth) + lineWidth,\n      (this.minorRadius * scale.scaleHeight) + lineWidth,\n      (this.radius * scale.scaleWidth),\n      (this.minorRadius * scale.scaleHeight),\n      this._prerenderingContext,\n      this.style\n    );\n  }\n  /**\n   * determine whether the point is in the object\n   * basically just the pythagorean theorem\n   * @param {number} x the x coordinate\n   * @param {number} y the y coordinate\n   * @return {boolean} whether or not the point is in the object\n   */\n  pointIsInObject(x, y) {\n    let scale = this.compoundScale;\n    let offset = this.offset;\n\n    let a = x - offset.x;\n    let b = y - offset.y;\n\n    let c1 = this.radius * scale.scaleWidth;\n    let c2 = this.minorRadius * scale.scaleHeight;\n\n    //see: http://math.stackexchange.com/questions/76457/check-if-a-point-is-within-an-ellipse\n    return ((a * a) / (c1 * c1)) + ((b * b) / (c2 * c2)) <= 1;\n  }\n}\n"],"mappings":";;;;;;;AAAA;AACA;AAA2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3D;AACA;AACA;AAFA,IAGqBA,OAAO;EAAA;EAAA;EAC1B;AACF;AACA;AACA;AACA;EACE,iBAAYC,OAAO,EAAE;IAAA;IAAA;IACnB,0BAAMA,OAAO;IACb;AACJ;AACA;AACA;IACI,MAAKC,MAAM,GAAGD,OAAO,CAACC,MAAM,IAAI,CAAC;;IAEjC;AACJ;AACA;AACA;IACI,MAAKC,WAAW,GAAGF,OAAO,CAACE,WAAW,IAAI,MAAKD,MAAM,IAAI,CAAC;IAAC;EAC7D;;EAEA;AACF;AACA;AACA;EAHE;IAAA;IAAA,KAIA,eAAkB;MAChB,IAAIE,MAAM,GAAG,IAAI,CAACA,MAAM;MACxB,IAAIC,KAAK,GAAG,IAAI,CAACC,aAAa;MAC9B,IAAIC,SAAS,GAAG,IAAI,CAACC,KAAK,CAACD,SAAS;MACpC,OAAO;QACLE,GAAG,EAAEL,MAAM,CAACM,CAAC,IACT,IAAI,CAACP,WAAW,GAAGE,KAAK,CAACM,WAAW,GAAIJ,SAAS,CAAC;QACtDK,IAAI,EAAER,MAAM,CAACS,CAAC,IACV,IAAI,CAACX,MAAM,GAAGG,KAAK,CAACS,UAAU,GAAIP,SAAS,CAAC;QAChDQ,MAAM,EAAEX,MAAM,CAACM,CAAC,GACb,IAAI,CAACP,WAAW,GAAGE,KAAK,CAACM,WAAY,GAAGJ,SAAS;QACpDS,KAAK,EAAEZ,MAAM,CAACS,CAAC,GACZ,IAAI,CAACX,MAAM,GAAGG,KAAK,CAACS,UAAW,GAAGP;MACvC,CAAC;IACH;;IAEA;AACF;AACA;AACA;EAHE;IAAA;IAAA,OAIA,kBAAS;MACP,IAAIF,KAAK,GAAG,IAAI,CAACC,aAAa;MAC9B,IAAIC,SAAS,GAAG,IAAI,CAACC,KAAK,CAACD,SAAS;MACpC;MACA;MACA,IAAAU,qBAAW,EACR,IAAI,CAACf,MAAM,GAAGG,KAAK,CAACS,UAAU,GAAIP,SAAS,EAC3C,IAAI,CAACJ,WAAW,GAAGE,KAAK,CAACM,WAAW,GAAIJ,SAAS,EACjD,IAAI,CAACL,MAAM,GAAGG,KAAK,CAACS,UAAU,EAC9B,IAAI,CAACX,WAAW,GAAGE,KAAK,CAACM,WAAW,EACrC,IAAI,CAACO,oBAAoB,EACzB,IAAI,CAACV,KAAK,CACX;IACH;IACA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA;IAAA,OAOA,yBAAgBK,CAAC,EAAEH,CAAC,EAAE;MACpB,IAAIL,KAAK,GAAG,IAAI,CAACC,aAAa;MAC9B,IAAIF,MAAM,GAAG,IAAI,CAACA,MAAM;MAExB,IAAIe,CAAC,GAAGN,CAAC,GAAGT,MAAM,CAACS,CAAC;MACpB,IAAIO,CAAC,GAAGV,CAAC,GAAGN,MAAM,CAACM,CAAC;MAEpB,IAAIW,EAAE,GAAG,IAAI,CAACnB,MAAM,GAAGG,KAAK,CAACS,UAAU;MACvC,IAAIQ,EAAE,GAAG,IAAI,CAACnB,WAAW,GAAGE,KAAK,CAACM,WAAW;;MAE7C;MACA,OAASQ,CAAC,GAAGA,CAAC,IAAKE,EAAE,GAAGA,EAAE,CAAC,GAAMD,CAAC,GAAGA,CAAC,IAAKE,EAAE,GAAGA,EAAE,CAAE,IAAI,CAAC;IAC3D;EAAC;EAAA;AAAA,EA9EkCC,8BAAkB;AAAA"}