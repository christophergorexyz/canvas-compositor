{"version":3,"file":"text-utilities.js","names":["ALL_CHARS","getTextHeight","font","fontHolder","document","createElement","innerText","style","baselineRuler","display","width","height","verticalAlign","wrapper","appendChild","whiteSpace","body","fontRect","getBoundingClientRect","baselineRect","fontTop","top","scrollTop","fontBottom","baseline","removeChild","ascentFromBaseline","descentFromBaseline","ascent","descent","formatFontString","fontStyle","fontVariant","fontWeight","fontSize","lineHeight","fontFamily","measureText","text","context","Object","assign"],"sources":["../../src/context-2d/text-utilities.mjs"],"sourcesContent":["/**\n * @module\n */\n\n/**\n * As many basic characters as possible to fit into a string in order to measure the height\n */\nconst ALL_CHARS = '1234567890QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm.,`~;:\\'\"!?@#$%^&*()_+={}[]|<>/';\n\n/**\n * this technique is informed by\n * http://stackoverflow.com/questions/1134586/how-can-you-find-the-height-of-text-on-an-html-canvas\n * it's a pretty awful hack, and will not work in canvases on non-browser runtimes\n * @param {string} font the long form font string\n */\nexport function getTextHeight(font) {\n  //\n  //TODO: figure out how cross-browser this is\n\n  //create an element with every character in it with this font\n  let fontHolder = document.createElement('span');\n  fontHolder.innerText = ALL_CHARS;\n  fontHolder.style.font = font;\n\n  //create an inline-block to place after the element\n  let baselineRuler = document.createElement('div');\n  baselineRuler.style.display = 'inline-block';\n  baselineRuler.style.width = '1px';\n  baselineRuler.style.height = '0';\n  baselineRuler.style.verticalAlign = 'baseline';\n\n  //place them in a wrapper and add it to the body\n  let wrapper = document.createElement('div');\n  wrapper.appendChild(fontHolder);\n  wrapper.appendChild(baselineRuler);\n  wrapper.style.whiteSpace = 'nowrap';\n  document.body.appendChild(wrapper);\n\n  //get their bounding rectangles and...\n  let fontRect = fontHolder.getBoundingClientRect();\n  let baselineRect = baselineRuler.getBoundingClientRect();\n\n  //calculate their offset from top\n  let fontTop = fontRect.top + document.body.scrollTop;\n  let fontBottom = fontTop + fontRect.height;\n\n  let baseline = baselineRect.top + document.body.scrollTop;\n\n  document.body.removeChild(wrapper);\n\n  //ascent equals the baseline location minus text top location\n  let ascentFromBaseline = baseline - fontTop;\n\n  //decent equals the text bottom location minuse the baseline location\n  let descentFromBaseline = fontBottom - baseline;\n\n  return {\n    height: fontRect.height,\n    ascent: ascentFromBaseline,\n    descent: descentFromBaseline\n  };\n}\n\n\n/**\n * format a longform font style\n * @param {string} fontStyle the font style\n * @param {string} fontVariant the font variant\n * @param {string} fontWeight the font weight\n * @param {string} fontSize the font size\n * @param {string} lineHeight the font height\n * @param {string} fontFamily the font family\n */\nexport function formatFontString(fontStyle, fontVariant, fontWeight, fontSize, lineHeight, fontFamily) {\n  return `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize}/${lineHeight} ${fontFamily}`;\n}\n\n/**\n * Measure the text\n * @param {string} text the text to be measured\n * @param {object} context the 2D Context object for a canvas - required for measurement to occur, but may be arbitrary\n * @param {object} style the style options to be used when measuring the text\n * @return {object} [TextMetrics](https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics) object containing info like Width\n */\nexport function measureText(text, context, style) {\n  Object.assign(context, style);\n  return context.measureText(text);\n}\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAMA,SAAS,GAAG,+FAA+F;;AAEjH;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,aAAa,CAACC,IAAI,EAAE;EAClC;EACA;;EAEA;EACA,IAAIC,UAAU,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;EAC/CF,UAAU,CAACG,SAAS,GAAGN,SAAS;EAChCG,UAAU,CAACI,KAAK,CAACL,IAAI,GAAGA,IAAI;;EAE5B;EACA,IAAIM,aAAa,GAAGJ,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EACjDG,aAAa,CAACD,KAAK,CAACE,OAAO,GAAG,cAAc;EAC5CD,aAAa,CAACD,KAAK,CAACG,KAAK,GAAG,KAAK;EACjCF,aAAa,CAACD,KAAK,CAACI,MAAM,GAAG,GAAG;EAChCH,aAAa,CAACD,KAAK,CAACK,aAAa,GAAG,UAAU;;EAE9C;EACA,IAAIC,OAAO,GAAGT,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC3CQ,OAAO,CAACC,WAAW,CAACX,UAAU,CAAC;EAC/BU,OAAO,CAACC,WAAW,CAACN,aAAa,CAAC;EAClCK,OAAO,CAACN,KAAK,CAACQ,UAAU,GAAG,QAAQ;EACnCX,QAAQ,CAACY,IAAI,CAACF,WAAW,CAACD,OAAO,CAAC;;EAElC;EACA,IAAII,QAAQ,GAAGd,UAAU,CAACe,qBAAqB,EAAE;EACjD,IAAIC,YAAY,GAAGX,aAAa,CAACU,qBAAqB,EAAE;;EAExD;EACA,IAAIE,OAAO,GAAGH,QAAQ,CAACI,GAAG,GAAGjB,QAAQ,CAACY,IAAI,CAACM,SAAS;EACpD,IAAIC,UAAU,GAAGH,OAAO,GAAGH,QAAQ,CAACN,MAAM;EAE1C,IAAIa,QAAQ,GAAGL,YAAY,CAACE,GAAG,GAAGjB,QAAQ,CAACY,IAAI,CAACM,SAAS;EAEzDlB,QAAQ,CAACY,IAAI,CAACS,WAAW,CAACZ,OAAO,CAAC;;EAElC;EACA,IAAIa,kBAAkB,GAAGF,QAAQ,GAAGJ,OAAO;;EAE3C;EACA,IAAIO,mBAAmB,GAAGJ,UAAU,GAAGC,QAAQ;EAE/C,OAAO;IACLb,MAAM,EAAEM,QAAQ,CAACN,MAAM;IACvBiB,MAAM,EAAEF,kBAAkB;IAC1BG,OAAO,EAAEF;EACX,CAAC;AACH;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,gBAAgB,CAACC,SAAS,EAAEC,WAAW,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,UAAU,EAAE;EACrG,iBAAUL,SAAS,cAAIC,WAAW,cAAIC,UAAU,cAAIC,QAAQ,cAAIC,UAAU,cAAIC,UAAU;AAC1F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,WAAW,CAACC,IAAI,EAAEC,OAAO,EAAEhC,KAAK,EAAE;EAChDiC,MAAM,CAACC,MAAM,CAACF,OAAO,EAAEhC,KAAK,CAAC;EAC7B,OAAOgC,OAAO,CAACF,WAAW,CAACC,IAAI,CAAC;AAClC"}