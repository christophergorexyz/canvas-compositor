{"version":3,"file":"text.js","names":["Text","options","text","fontSize","TextDefaults","FONT_SIZE","fontFamily","FONT_FAMILY","fontStyle","FONT_STYLE","fontVariant","FONT_VARIANT","fontWeight","FONT_WEIGHT","lineHeight","LINE_HEIGHT","textAlign","TEXT_ALIGN","textBaseline","TEXT_BASELINE","_textMetricsNeedUpdate","_textMetrics","TextUtils","formatFontString","_updateStyle","measureText","_prerenderingContext","style","Object","assign","getTextHeight","font","top","offset","y","textMetrics","ascent","left","x","bottom","descent","right","width","fontString","drawText","PrimitiveComponent"],"sources":["../../src/context-2d/text.mjs"],"sourcesContent":["import * as TextDefaults from './text-defaults.mjs';\nimport * as TextUtils from './text-utilities.mjs';\nimport { drawText } from './renderer.mjs';\n\nimport PrimitiveComponent from './primitive-component.mjs';\n\n\n/**\n * A text object\n */\nexport default class Text extends PrimitiveComponent {\n  /**\n   * @param {object} options the options for the text object\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * the text to be rendered\n     * @type {string}\n     */\n    this.text = options.text;\n\n    /**\n     * the font size at which to render the text\n     * @type {string}\n     */\n    this.fontSize = options.fontSize || TextDefaults.FONT_SIZE;\n\n    /**\n     * the font family in which to render the text\n     * @type {string}\n     */\n    this.fontFamily = options.fontFamily || TextDefaults.FONT_FAMILY;\n\n    /**\n     * the font style with which to render the text\n     * @type {string}\n     */\n    this.fontStyle = options.fontStyle || TextDefaults.FONT_STYLE;\n\n    /**\n     * the font variant in which to render the text\n     * @type {string}\n     */\n    this.fontVariant = options.fontVariant || TextDefaults.FONT_VARIANT;\n\n    /**\n     * the font weight at which to render the text\n     * @type {string}\n     */\n    this.fontWeight = options.fontWeight || TextDefaults.FONT_WEIGHT;\n\n    /**\n     * the line height of the text\n     * @type {string}\n     */\n    this.lineHeight = options.lineHeight || TextDefaults.LINE_HEIGHT;\n\n    /**\n     * the alignment with which to render the text\n     * @type {string}\n     */\n    this.textAlign = options.textAlign || TextDefaults.TEXT_ALIGN;\n\n    /**\n     * the baseline for the text\n     * @type {string}\n     */\n    this.textBaseline = options.textBaseline || TextDefaults.TEXT_BASELINE;\n\n    /**\n     * lets textMetrics getter know if it needs to update its data\n     * @type {boolean}\n     */\n    this._textMetricsNeedUpdate = true;\n\n    /**\n     * a [TextMetrics](https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics) object\n     * with additional height information\n     * @type {object}\n     */\n    this._textMetrics = null;\n\n    //TODO: write out this function for optimization\n    //this._updateTextMetrics(this.fontString);\n  }\n\n  /**\n   * get the longform representation\n   * @type {string}\n   */\n  get fontString() {\n    return TextUtils.formatFontString(this.fontStyle, this.fontVariant, this.fontWeight, this.fontSize, this.lineHeight, this.fontFamily);\n  }\n\n  /**\n   * compute the height data and add it to the textMetrics object from the canvas context\n   * @type {object}\n   */\n  get textMetrics() {\n    if (this._textMetricsNeedUpdate || this._textMetrics === null) {\n      this._updateStyle();\n      this._textMetrics = TextUtils.measureText(this.text, this._prerenderingContext, this.style);\n      Object.assign(this._textMetrics, TextUtils.getTextHeight(this.style.font));\n      this._textMetricsNeedUpdate = false;\n    }\n    return this._textMetrics;\n  }\n\n  /**\n   * get the bounding box of the text object\n   * @type {{top: number, left: number, bottom: number, right: number}}\n   */\n  get boundingBox() {\n    return {\n      top: this.offset.y - this.textMetrics.ascent,\n      left: this.offset.x,\n      bottom: this.offset.y + this.textMetrics.descent,\n      right: this.offset.x + this.textMetrics.width\n    };\n  }\n\n  /**\n   * update the style options for the text\n   * @param {object} options\n   */\n  _updateStyle(options) {\n    Object.assign(this.style, options, {\n      font: this.fontString,\n      textAlign: this.textAlign,\n      textBaseline: this.textBaseline\n    });\n  }\n\n\n  /**\n   * override the render function for text objects\n   * @override\n   */\n  render() {\n    this._textMetricsNeedUpdate = true;\n    this._updateStyle();\n    drawText(0, this.textMetrics.ascent, this.text, this._prerenderingContext, this.style);\n\n    /*if (this.flags.DEBUG) {\n            Renderer.drawPath(this._prerenderingContext, [{\n                x: 0,\n                y: this.textMetrics.ascent\n            }, {\n                x: this.textMetrics.width,\n                y: this.textMetrics.ascent\n            }], {\n                strokeStyle: 'Blue'\n            });\n            Renderer.drawCircle(this._prerenderingContext, 0, this.textMetrics.ascent, 3, {\n                strokeStyle: 'Blue',\n                fillStyle: 'Blue'\n            });\n        }*/\n  }\n}\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;AAA2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG3D;AACA;AACA;AAFA,IAGqBA,IAAI;EAAA;EAAA;EACvB;AACF;AACA;EACE,cAAYC,OAAO,EAAE;IAAA;IAAA;IACnB,0BAAMA,OAAO;;IAEb;AACJ;AACA;AACA;IACI,MAAKC,IAAI,GAAGD,OAAO,CAACC,IAAI;;IAExB;AACJ;AACA;AACA;IACI,MAAKC,QAAQ,GAAGF,OAAO,CAACE,QAAQ,IAAIC,YAAY,CAACC,SAAS;;IAE1D;AACJ;AACA;AACA;IACI,MAAKC,UAAU,GAAGL,OAAO,CAACK,UAAU,IAAIF,YAAY,CAACG,WAAW;;IAEhE;AACJ;AACA;AACA;IACI,MAAKC,SAAS,GAAGP,OAAO,CAACO,SAAS,IAAIJ,YAAY,CAACK,UAAU;;IAE7D;AACJ;AACA;AACA;IACI,MAAKC,WAAW,GAAGT,OAAO,CAACS,WAAW,IAAIN,YAAY,CAACO,YAAY;;IAEnE;AACJ;AACA;AACA;IACI,MAAKC,UAAU,GAAGX,OAAO,CAACW,UAAU,IAAIR,YAAY,CAACS,WAAW;;IAEhE;AACJ;AACA;AACA;IACI,MAAKC,UAAU,GAAGb,OAAO,CAACa,UAAU,IAAIV,YAAY,CAACW,WAAW;;IAEhE;AACJ;AACA;AACA;IACI,MAAKC,SAAS,GAAGf,OAAO,CAACe,SAAS,IAAIZ,YAAY,CAACa,UAAU;;IAE7D;AACJ;AACA;AACA;IACI,MAAKC,YAAY,GAAGjB,OAAO,CAACiB,YAAY,IAAId,YAAY,CAACe,aAAa;;IAEtE;AACJ;AACA;AACA;IACI,MAAKC,sBAAsB,GAAG,IAAI;;IAElC;AACJ;AACA;AACA;AACA;IACI,MAAKC,YAAY,GAAG,IAAI;;IAExB;IACA;IAAA;EACF;;EAEA;AACF;AACA;AACA;EAHE;IAAA;IAAA,KAIA,eAAiB;MACf,OAAOC,SAAS,CAACC,gBAAgB,CAAC,IAAI,CAACf,SAAS,EAAE,IAAI,CAACE,WAAW,EAAE,IAAI,CAACE,UAAU,EAAE,IAAI,CAACT,QAAQ,EAAE,IAAI,CAACW,UAAU,EAAE,IAAI,CAACR,UAAU,CAAC;IACvI;;IAEA;AACF;AACA;AACA;EAHE;IAAA;IAAA,KAIA,eAAkB;MAChB,IAAI,IAAI,CAACc,sBAAsB,IAAI,IAAI,CAACC,YAAY,KAAK,IAAI,EAAE;QAC7D,IAAI,CAACG,YAAY,EAAE;QACnB,IAAI,CAACH,YAAY,GAAGC,SAAS,CAACG,WAAW,CAAC,IAAI,CAACvB,IAAI,EAAE,IAAI,CAACwB,oBAAoB,EAAE,IAAI,CAACC,KAAK,CAAC;QAC3FC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACR,YAAY,EAAEC,SAAS,CAACQ,aAAa,CAAC,IAAI,CAACH,KAAK,CAACI,IAAI,CAAC,CAAC;QAC1E,IAAI,CAACX,sBAAsB,GAAG,KAAK;MACrC;MACA,OAAO,IAAI,CAACC,YAAY;IAC1B;;IAEA;AACF;AACA;AACA;EAHE;IAAA;IAAA,KAIA,eAAkB;MAChB,OAAO;QACLW,GAAG,EAAE,IAAI,CAACC,MAAM,CAACC,CAAC,GAAG,IAAI,CAACC,WAAW,CAACC,MAAM;QAC5CC,IAAI,EAAE,IAAI,CAACJ,MAAM,CAACK,CAAC;QACnBC,MAAM,EAAE,IAAI,CAACN,MAAM,CAACC,CAAC,GAAG,IAAI,CAACC,WAAW,CAACK,OAAO;QAChDC,KAAK,EAAE,IAAI,CAACR,MAAM,CAACK,CAAC,GAAG,IAAI,CAACH,WAAW,CAACO;MAC1C,CAAC;IACH;;IAEA;AACF;AACA;AACA;EAHE;IAAA;IAAA,OAIA,sBAAazC,OAAO,EAAE;MACpB2B,MAAM,CAACC,MAAM,CAAC,IAAI,CAACF,KAAK,EAAE1B,OAAO,EAAE;QACjC8B,IAAI,EAAE,IAAI,CAACY,UAAU;QACrB3B,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBE,YAAY,EAAE,IAAI,CAACA;MACrB,CAAC,CAAC;IACJ;;IAGA;AACF;AACA;AACA;EAHE;IAAA;IAAA,OAIA,kBAAS;MACP,IAAI,CAACE,sBAAsB,GAAG,IAAI;MAClC,IAAI,CAACI,YAAY,EAAE;MACnB,IAAAoB,kBAAQ,EAAC,CAAC,EAAE,IAAI,CAACT,WAAW,CAACC,MAAM,EAAE,IAAI,CAAClC,IAAI,EAAE,IAAI,CAACwB,oBAAoB,EAAE,IAAI,CAACC,KAAK,CAAC;;MAEtF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE;EAAC;EAAA;AAAA,EAtJ+BkB,8BAAkB;AAAA"}