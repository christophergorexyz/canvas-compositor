{"version":3,"file":"primitive-component.js","names":["defaults","fillStyle","Defaults","FILL_STYLE","strokeStyle","STROKE_STYLE","lineCap","LINE_CAP","lineWidth","LINE_WIDTH","lineJoin","LINE_JOIN","miterLimit","MITER_LIMIT","font","FONT","textAlign","TEXT_ALIGN","textBaseline","TEXT_BASELINE","lineDash","PrimitiveComponent","options","_needsDraw","_needsRender","_scaleWidth","_scaleHeight","_d","Vector","x","y","style","Object","assign","_prerenderingCanvas","document","createElement","_prerenderingContext","getContext","_parent","parent","add","d","offset","val","needsDraw","needsRender","children","c","scaleWidth","scaleHeight","compoundScale","context","boundingBox","render","width","right","left","height","bottom","top","clearRect","drawImage","pointIsInBoundingBox","index","indexOf","splice","length","UpdateChildrenLists","EventEmitter"],"sources":["../../src/context-2d/primitive-component.mjs"],"sourcesContent":["import { Vector } from 'vectorious';\n\nimport EventEmitter from '../event-emitter.mjs';\nimport { drawImage, clearRect } from './renderer.mjs';\nimport * as Defaults from './context-2d/defaults.mjs';\n\n//assign default values to an object so that the Object.assign function can be used\n/**\n * The default values to be passed to the renderer and overridden by any given object\n */\nlet defaults = {\n  //direction: 'inherit',\n  fillStyle: Defaults.FILL_STYLE,\n  //filter: 'none',\n  strokeStyle: Defaults.STROKE_STYLE,\n  lineCap: Defaults.LINE_CAP,\n  lineWidth: Defaults.LINE_WIDTH,\n  lineJoin: Defaults.LINE_JOIN,\n  miterLimit: Defaults.MITER_LIMIT,\n  font: Defaults.FONT,\n  textAlign: Defaults.TEXT_ALIGN,\n  textBaseline: Defaults.TEXT_BASELINE,\n  lineDash: []\n};\n\n/**\n * The base class of things that may be drawn on the canvas.\n * All drawable objects should inherit from this class.\n * Typically, it is unnecessary for application programmers to\n * call this directly, although they may wish to extend their own\n * classes with it.\n */\nexport default class PrimitiveComponent extends EventEmitter {\n  /**\n   * construct a primitive component\n   * @param {object} options\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    //TODO: reimplement any flags for debug data\n    //this._flags = {};\n    //this._flags.DEBUG = options.debug || false;\n\n    /**\n     * does the object need to be redrawn?\n     * @type {boolean}\n     */\n    this._needsDraw = true;\n\n    /**\n     * does the object need to be rendered?\n     * @type {boolean}\n     */\n    this._needsRender = true;\n\n    /**\n     * the horizontal scale of the object. defaults to 1\n     * @type {number}\n     */\n    this._scaleWidth = 1;\n\n    /**\n     * the vertical scale of the object. defaults to 1\n     * @type {number}\n     */\n    this._scaleHeight = 1;\n\n    /**\n     * d is for \"displacement\": a 2D Vector object representing cartesian coordinate\n     * position relative to its parent composition (or [0,0] if this is the scene composition)\n     * @type {object}\n     */\n    this._d = new Vector([options.x || 0, options.y || 0]);\n\n    /**\n     * style options for this particular object. these are standard context styles\n     * @type {object}\n     */\n    this.style = Object.assign({}, defaults, options.style);\n\n    //TODO: determine whether this is the best place to implement click passthrough -\n    //it might be better left implemented by consuming modules\n    /**\n     * objects with pressPassThrough set to true will allow mouse clicks to pass\n     * through to objects behind them\n     * @type {boolean}\n     */\n    //this.pressPassThrough = options.pressPassThrough || false;\n\n    /**\n     * the prerendering canvas is used to avoid performing mutliple draw operations on the\n     * visible, main canvas. this minimizes the time needed to render by prerendering on a\n     * canvas only as large as necessary for the object\n     * @type {object}\n     */\n    this._prerenderingCanvas = document.createElement('canvas');\n\n    //TODO: enable alternative rendering contexts for WebGL and 3d\n    /**\n     * the 2D context of the prerendering canvas.\n     * @type {object}\n     */\n    this._prerenderingContext = this._prerenderingCanvas.getContext('2d');\n\n    /**\n     * the parent object of this object. with the exception of the scene composition itself,\n     * the root of all objects ancestry should be the scene composition\n     * @type {object}\n     */\n    this._parent = options.parent || null;\n  }\n\n  /**\n   * the global offset of the object on the canvas.\n   * this is the sum of this object's displacement\n   * and all of its ancestry. offset a 2D Vector\n   * representing displacement from [0, 0]\n   * @type {object}\n   */\n  get offset() {\n    return (this.parent ? Vector.add(this.d, this.parent.offset) : this.d);\n  }\n\n  /**\n   * returns true whenever the object needs to be re-drawn to canvas.\n   * when true, this will indicate to the parent tree of composing objects that\n   * the object needs to be re-drawn on the next animation loop.\n   *\n   * objects need to be updated when their displacement changes, or when any thing\n   * that requires a rerender occurs.\n   *\n   * @type {boolean}\n   */\n  get needsDraw() {\n    return this._needsDraw;\n  }\n\n  /**\n   * set to true whenever the object needs to be re-drawn to canvas.\n   * when true, this will indicate to the parent tree of composing objects that\n   * the object needs to be re-drawn on the next animation loop.\n   *\n   * objects need to be updated when their displacement changes, or when any thing\n   * that requires a rerender occurs.\n   *\n   * @type {boolean}\n   */\n  set needsDraw(val) {\n    if (this.parent && val) {\n      this.parent.needsDraw = val;\n      this.parent.needsRender = true; // if this needs to be redrawn, then the parent needs a full rerender\n    }\n    this._needsDraw = val;\n  }\n\n  /**\n   * returns true whenever the object's properties have changed such that\n   * it needs to be rendered differently\n   *\n   * 1. scale change\n   * 1. physical property change (height, width, radius, etc.)\n   * 1. color change\n   *\n   * @type {boolean}\n   */\n  get needsRender() {\n    return this._needsRender;\n  }\n\n  /**\n   * set to true whenever the object's properties have changed such that\n   * it needs to be rendered differently\n   *\n   * 1. scale change\n   * 1. physical property change (height, width, radius, etc.)\n   * 1. color change\n   *\n   * @type {boolean}\n   */\n  set needsRender(val) {\n    if (this.parent && val) {\n      this.parent.needsRender = val;\n    }\n    this._needsRender = val;\n  }\n\n  /**\n   * return the horizontal scale of the object - defaults to 1\n   * @type {number}\n   */\n  get scaleWidth() {\n    return this._scaleWidth;\n  }\n  /**\n   * set the horizontal scale of the object - defaults to 1\n   * @type {number}\n   */\n  set scaleWidth(val) {\n    this._scaleWidth = val;\n    this.needsRender = true;\n    this.needsDraw = true;\n    for (let c of this.children) {\n      c.needsRender = true;\n      c.needsDraw = true;\n    }\n  }\n\n  /**\n   * return the vertical scale of the object - defaults to 1\n   * @type {number}\n   */\n  get scaleHeight() {\n    return this._scaleHeight;\n  }\n\n  /**\n   * set the vertical scale of the object - defaults to 1\n   * @param {number} val the vertical scale\n   */\n  set scaleHeight(val) {\n    this._scaleHeight = val;\n    this.needsRender = true;\n    this.needsDraw = true;\n    for (let c of this.children) {\n      c.needsRender = true;\n      c.needsDraw = true;\n    }\n  }\n\n  /**\n   * return an object containing the vertical and horizontal scale\n   * @type {object}\n   */\n  get scale() {\n    return {\n      scaleWidth: this.scaleWidth,\n      scaleHeight: this.scaleHeight\n    };\n  }\n\n  /**\n   * set the scale width and height in one go\n   * @type {number}\n   */\n  set scale(val) {\n    this.scaleHeight = val;\n    this.scaleWidth = val;\n  }\n\n  /**\n   * return the scale of the object, compounded with the parent object's scale\n   * the scale multiplied by the compound scale of its parent or 1\n   * @type {{scaleWidth: number, scaleHeight: number}}\n   */\n  get compoundScale() {\n    return {\n      scaleWidth: this.parent ? this.scaleWidth * this.parent.compoundScale.scaleWidth : this.scaleWidth,\n      scaleHeight: this.parent ? this.scaleHeight * this.parent.compoundScale.scaleHeight : this.scaleHeight\n    };\n  }\n\n  /**\n   * d is for displacement - returns a vector\n   * @type {object}\n   */\n  get d() {\n    return this._d;\n  }\n\n  /**\n   * d is for displacement - accepts a vector\n   * @param {object} val\n   */\n  set d(val) {\n    this._d = val;\n  }\n\n  /**\n   * get the parent of the object. all objects except the scene graph should have a parent\n   * @type {object}\n   */\n  get parent() {\n    return this._parent;\n  }\n  //TODO: provide links to things\n  /**\n   * set the parent of the object. all objects except the scene graph should have a parent\n   * @param {object} val a composition\n   */\n  set parent(val) {\n    this._parent = val;\n  }\n\n  /**\n   * draw the object to canvas, render it if necessary\n   * @param {object} context the final canvas context where this will be drawn\n   * @param {object} offset the offset on the canvas - optional, used for prerendering\n   */\n  draw(context, offset) {\n    let boundingBox = this.boundingBox;\n\n    this.needsDraw = false;\n\n    if (this.needsRender && this.render) {\n      /*\n                TODO: AB-test this,\n                it may be faster than clearRect\n            */\n      //delete this._prerenderingCanvas;\n      //delete this._prerenderingContext;\n\n      //create a new canvas and context for rendering\n      //this._prerenderingCanvas = document.createElement('canvas');\n      //this._prerenderingContext = this._prerenderingCanvas.getContext('2d'); //text needs prerendering context defined for boundingBox measurements\n\n      //make sure the new canvas has the appropriate dimensions\n      this._prerenderingCanvas.width = boundingBox.right - boundingBox.left;\n      this._prerenderingCanvas.height = boundingBox.bottom - boundingBox.top;\n      //clear any old rendering artifacts - they are no longer viable\n      clearRect(0, 0, this._prerenderingCanvas.width, this._prerenderingCanvas.height, this._prerenderingContext);\n\n      this.render();\n      this.needsRender = false;\n    }\n\n    //TODO: handle debug options\n    //draw bounding boxes\n    /*if (this._flags.DEBUG) {\n            this._prerenderingContext.beginPath();\n            this._prerenderingContext.setLineDash([5, 15]);\n            this._prerenderingContext.lineWidth = 2.0;\n            this._prerenderingContext.strokeStyle = '#FF0000';\n            this._prerenderingContext.strokeStyle = '#FF0000';\n            this._prerenderingContext.strokeRect(0, 0, this._prerenderingCanvas.width, this._prerenderingCanvas.height);\n            this._prerenderingContext.closePath();\n        }*/\n\n    //offsets are for prerendering contexts of compositions\n    let x = boundingBox.left + (offset && offset.left ? offset.left : 0);\n    let y = boundingBox.top + (offset && offset.top ? offset.top : 0);\n    drawImage(x, y, this._prerenderingCanvas, context, this.style);\n  }\n\n  /**\n   * this method must be overridden by a subclass.\n   *\n   * the render method should be implemented by subclasses\n   * @abstract\n   */\n  render() { }\n\n  /**\n   * check whether the point specified lies *inside* this objects bounding box\n   *\n   * @param {number} x the x coordinate\n   * @param {number} y the y coordinate\n   * @return {boolean} whether the point is within the bounding box\n   */\n  pointIsInBoundingBox(x, y) {\n    let boundingBox = this.boundingBox;\n    return (\n      x > boundingBox.left &&\n      y > boundingBox.top &&\n      x < boundingBox.right &&\n      y < boundingBox.bottom\n    );\n  }\n\n  /**\n   * check whether the point is within the object.\n   * this method should be overridden by subclassess\n   *\n   * @param {number} x the x coordinate\n   * @param {number} y the y coordinate\n   * @return {boolean} whether the point is in the object, as implemented by inheriting classes\n   */\n  pointIsInObject(x, y) {\n    return this.pointIsInBoundingBox(x, y);\n  }\n\n  /**\n   * move the object on top of other objects (render last)\n   */\n  moveToFront() {\n    if (this.parent) {\n      let index = this.parent.children.indexOf(this);\n      if (index >= 0) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(this.parent.children.length, 0, this);\n        this.needsDraw = true;\n      }\n    }\n  }\n\n  /**\n   * move the object below the other objects (render first)\n   */\n  moveToBack() {\n    if (this.parent) {\n      let index = this.parent.children.indexOf(this);\n      if (index >= 0) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(0, 0, this);\n        this.needsDraw = true;\n      }\n    }\n  }\n\n\n  /**\n   * move the object forward in the stack (drawn later)\n   */\n  moveForward() {\n    if (this.parent) {\n      let index = this.parent.children.indexOf(this);\n      if (index >= 0 && index < this.parent.children.length - 1) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(index + 1, 0, this); //if index + 1 > siblings.length, inserts it at end\n        this.parent.UpdateChildrenLists();\n        this.needsRender = true;\n        this.needsDraw = true;\n      }\n    }\n  }\n\n  /**\n   * move the object backward in the stack (drawn sooner)\n   */\n  moveBackward() {\n    if (this.parent) {\n      let index = this.parent.children.indexOf(this);\n      if (index > 0) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(index - 1, 0, this);\n        this.parent.UpdateChildrenLists();\n        this.needsRender = true;\n        this.needsDraw = true;\n      }\n    }\n  }\n}\n"],"mappings":"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"}