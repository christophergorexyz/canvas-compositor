{"version":3,"sources":["../../src/primitives/Rectangle.js"],"names":["Rectangle","options","width","height","offset","compoundScale","top","y","style","lineWidth","left","x","bottom","scaleHeight","right","scaleWidth","prerenderingContext","Component"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;IACqBA,S;;;;;AACjB;AACJ;AACA;AACI,qBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACjB,8BAAMA,OAAN;AACA;AACR;AACA;AACA;;AACQ,UAAKC,KAAL,GAAaD,OAAO,CAACC,KAAR,IAAiB,CAA9B;AAEA;AACR;AACA;AACA;;AACQ,UAAKC,MAAL,GAAcF,OAAO,CAACE,MAAR,IAAkB,CAAhC;AAZiB;AAapB;AAED;AACJ;AACA;AACA;;;;;SACI,eAAkB;AACd,UAAIC,MAAM,GAAG,KAAKA,MAAlB;AACA,UAAIC,aAAa,GAAG,KAAKA,aAAzB;AACA,aAAO;AACHC,QAAAA,GAAG,EAAEF,MAAM,CAACG,CAAP,GAAY,KAAKC,KAAL,CAAWC,SADzB;AAEHC,QAAAA,IAAI,EAAEN,MAAM,CAACO,CAAP,GAAY,KAAKH,KAAL,CAAWC,SAF1B;AAGHG,QAAAA,MAAM,EAAER,MAAM,CAACG,CAAP,GAAYF,aAAa,CAACQ,WAAd,GAA4B,KAAKV,MAA7C,GAAwD,KAAKK,KAAL,CAAWC,SAHxE;AAIHK,QAAAA,KAAK,EAAEV,MAAM,CAACO,CAAP,GAAYN,aAAa,CAACU,UAAd,GAA2B,KAAKb,KAA5C,GAAsD,KAAKM,KAAL,CAAWC;AAJrE,OAAP;AAMH;AAED;AACJ;AACA;AACA;;;;WACI,kBAAS;AACL,UAAIJ,aAAa,GAAG,KAAKA,aAAzB;AACA,mCAAe,KAAKG,KAAL,CAAWC,SAA1B,EACK,KAAKD,KAAL,CAAWC,SADhB,EAEI,KAAKP,KAAL,GAAaG,aAAa,CAACU,UAF/B,EAGI,KAAKZ,MAAL,GAAcE,aAAa,CAACQ,WAHhC,EAII,KAAKG,mBAJT,EAKI,KAAKR,KALT;AAMH;;;;EA9CkCS,sB","sourcesContent":["import Component from '../core/Component';\nimport { drawRectangle } from '../graphics/Renderer';\n\n/**\n * A rectangle\n */\nexport default class Rectangle extends Component {\n    /**\n     * @param {object} options the options for the object\n     */\n    constructor(options) {\n        super(options);\n        /**\n         * the width of the rectangle\n         * @type {number} width\n         */\n        this.width = options.width || 0;\n\n        /**\n         * the height of the rectangle\n         * @type {number} height\n         */\n        this.height = options.height || 0;\n    }\n\n    /**\n     * get the bounding box of the rectangle\n     * @type {{top:number, left:number, bottom:number, right:number}}\n     */\n    get boundingBox() {\n        let offset = this.offset;\n        let compoundScale = this.compoundScale;\n        return {\n            top: offset.y - (this.style.lineWidth),\n            left: offset.x - (this.style.lineWidth),\n            bottom: offset.y + (compoundScale.scaleHeight * this.height) + (this.style.lineWidth),\n            right: offset.x + (compoundScale.scaleWidth * this.width) + (this.style.lineWidth)\n        };\n    }\n\n    /**\n     * render the rectangle\n     * @override\n     */\n    render() {\n        let compoundScale = this.compoundScale;\n        drawRectangle((this.style.lineWidth),\n            (this.style.lineWidth),\n            this.width * compoundScale.scaleWidth,\n            this.height * compoundScale.scaleHeight,\n            this.prerenderingContext,\n            this.style);\n    }\n}\n"],"file":"Rectangle.js"}