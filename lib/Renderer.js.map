{"version":3,"sources":["../src/Renderer.js"],"names":["clearRect","x","y","width","height","context","drawPath","vertices","style","Object","assign","beginPath","moveTo","v","length","lineTo","setLineDash","lineDash","stroke","drawPolygon","closePath","drawBezier","start","end","c1","c2","bezierCurveTo","drawRectangle","rect","fill","drawEllipse","radius","minorRadius","ellipse","Math","PI","drawCircle","arc","drawText","text","fillText","drawImage","image"],"mappings":"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","sourcesContent":["/**\r\n * Erase everything drawn on the supplied rectangle for the given context.\r\n * @param {number} x the x coordinate of the top left corner\r\n * @param {number} y the y coordinate of the top left corner\r\n * @param {number} width the x coordinate\r\n * @param {number} height the y coordinate\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n */\r\nexport function clearRect(x, y, width, height, context) {\r\n    context.clearRect(x, y, width, height);\r\n}\r\n\r\n/**\r\n * Draw a path, unclosed, with the given vertices\r\n * @param {object} vertices the path of vertices to be drawn\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the path\r\n */\r\nexport function drawPath(vertices, context, style) {\r\n    Object.assign(context, style);\r\n    context.beginPath();\r\n    context.moveTo(vertices[0].x, vertices[0].y);\r\n    for (let v = 1; v < vertices.length; v++) {\r\n        context.lineTo(vertices[v].x, vertices[v].y);\r\n    }\r\n\r\n    context.setLineDash(style.lineDash);\r\n    context.stroke();\r\n}\r\n\r\n/**\r\n * Draw a closed polygon with the given vertices\r\n * @param {object} vertices the path of vertices to be drawn\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the polygon\r\n */\r\nexport function drawPolygon(vertices, context, style) {\r\n    Object.assign(context, style);\r\n    context.beginPath();\r\n    context.moveTo(vertices[0].x, vertices[0].y);\r\n    for (let v = 1; v < vertices.length; v++) {\r\n        context.lineTo(vertices[v].x, vertices[v].y);\r\n    }\r\n    context.closePath();\r\n    context.setLineDash(style.lineDash);\r\n    context.stroke();\r\n}\r\n\r\n/**\r\n * Draw a Bezier curve\r\n * @param {object} start the starting vertex\r\n * @param {object} end the ending vertext\r\n * @param {object} c1 control point 1\r\n * @param {object} c2 control point 2\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the curve\r\n */\r\nexport function drawBezier(start, end, c1, c2, context, style) {\r\n    Object.assign(context, style);\r\n    //must `beginPath()` before `moveTo` to get correct starting position\r\n    context.beginPath();\r\n    context.moveTo(start.x, start.y);\r\n    context.bezierCurveTo(c1.x, c1.y, c2.x, c2.y, end.x, end.y);\r\n    context.setLineDash(style.lineDash);\r\n    context.stroke();\r\n    context.closePath();\r\n}\r\n\r\n/**\r\n * Draw a rectangle\r\n * @param {number} x the x coordinate of the top let corner\r\n * @param {number} y the y coordinate of the top left corner\r\n * @param {number} width the x coordinate\r\n * @param {number} height the y coordinate\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the rectangle\r\n */\r\nexport function drawRectangle(x, y, width, height, context, style) {\r\n    Object.assign(context, style);\r\n    context.rect(x, y, width, height);\r\n    context.fill();\r\n    context.setLineDash(style.lineDash);\r\n    context.stroke();\r\n}\r\n\r\n//TODO: provide support for rotation and startAngle parameters\r\n/**\r\n * Draw an ellipse\r\n * @param {number} x the x coordinate of the center of the ellipse\r\n * @param {number} y the y coordinate of the center of the ellipse\r\n * @param {number} radius the larger radius of the ellipse\r\n * @param {number} minorRadius the smaller radius of the ellipse\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the ellipse\r\n */\r\nexport function drawEllipse(x, y, radius, minorRadius, context, style) {\r\n    Object.assign(context, style);\r\n    //TODO: 2017-05-22 this is currently not supported by IE\r\n    context.ellipse(x, y, radius, minorRadius, 0, 0, 2 * Math.PI);\r\n    context.fill();\r\n    context.setLineDash(style.lineDash);\r\n    context.stroke();\r\n}\r\n\r\n/**\r\n * Draw a circle\r\n * @param {number} x the x coordinate of the center of the circle\r\n * @param {number} y the y coordinate of the center of the circle\r\n * @param {number} radius of the circle\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the circle\r\n */\r\nexport function drawCircle(x, y, radius, context, style) {\r\n    Object.assign(context, style);\r\n    context.arc(x, y, radius, 0, 2 * Math.PI);\r\n    //TODO: 2015-03-12 this is currently only supported by chrome & opera\r\n    //context.ellipse(x, y, radius, radius, 0, 0, 2 * Math.PI);\r\n    context.fill();\r\n    context.setLineDash(style.lineDash);\r\n    context.stroke();\r\n}\r\n\r\n/**\r\n * Draw text\r\n * @param {number} x the x coordinate of the top let corner\r\n * @param {number} y the y coordinate of the top left corner\r\n * @param {string} text the text to be drawn\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the text\r\n */\r\nexport function drawText(x, y, text, context, style) {\r\n    Object.assign(context, style);\r\n    context.fillText(text, x, y);\r\n    //TODO: implement stroke text if specified\r\n}\r\n\r\n/**\r\n * Draw an image\r\n * @param {number} x the x coordinate of the top let corner\r\n * @param {number} y the y coordinate of the top left corner\r\n * @param {object} image the image to be drawn to the canvas\r\n * @param {object} context the 2D Context object for the canvas we're drawing onto\r\n * @param {object} style the style options to be used when drawing the image\r\n */\r\nexport function drawImage(x, y, image, context, style) {\r\n    Object.assign(context, style);\r\n    //no reason to draw 0-sized images\r\n    if (image.width > 0 && image.height > 0) {\r\n        context.drawImage(image, x, y, image.width, image.height);\r\n    }\r\n}\r\n"],"file":"Renderer.js"}